// @ts-nocheck
import React, { useState, useRef } from 'react';
import { Trigger } from '@arco-design/web-react';
import { IconDown } from '@arco-design/web-react/icon';
import cs from 'classnames';
import NavDropdown from '../dropdown';
import locale from './locale';
import styles from './index.module.less';
function NavTabs(_a) {
    var _b = _a.lang, lang = _b === void 0 ? 'zh-CN' : _b, visible = _a.visible, tabs = _a.tabs, onVisibleChange = _a.onVisibleChange, getPopupContainer = _a.getPopupContainer;
    var _c = useState(''), activeKey = _c[0], setActiveKey = _c[1];
    var timer = useRef(null);
    var t = locale[lang];
    function getActiveClassNames(field) {
        var _a;
        return cs(styles.item, ((_a = {}), (_a[styles.itemHover] = field === activeKey), _a));
    }
    function onMouseEnter(activeKey) {
        setActiveKey(activeKey);
    }
    return React.createElement(Trigger, {
        popup: function () {
            return React.createElement(NavDropdown, { activeModule: activeKey, lang: lang });
        },
        trigger: 'hover',
        classNames: 'slideTop',
        style: { zIndex: 998 },
        popupVisible: visible,
        onVisibleChange: function (v) {
            onVisibleChange(v);
            if (!v) {
                setActiveKey('');
            }
        },
        getPopupContainer: getPopupContainer,
    }, React.createElement('div', { className: styles.tabs }, tabs.map(function (tab) {
        return React.createElement('div', {
            key: tab.title,
            className: getActiveClassNames(tab.activeKey),
            onMouseEnter: function () {
                timer.current = setTimeout(function () {
                    onMouseEnter(tab.activeKey);
                }, 200);
            },
            onMouseLeave: function () {
                clearTimeout(timer.current);
                timer.current = null;
            },
        }, React.createElement('a', { href: tab.href, className: styles.itemInner, target: '_blank', rel: 'noreferrer' }, t[tab.title], tab.dropdown && React.createElement(IconDown, null)));
    })));
}
NavTabs.defaultProps = {
    tabs: [
        {
            title: 'design',
            href: '/docs/spec/introduce',
            activeKey: 'spec',
            dropdown: true,
        },
        {
            title: 'development',
            href: '/react/docs/start',
            activeKey: 'development',
            dropdown: true,
        },
        {
            title: 'ecosystem',
            activeKey: 'ecosystem',
            dropdown: true,
        },
    ],
};
export default NavTabs;
