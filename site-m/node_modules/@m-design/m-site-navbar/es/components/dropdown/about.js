// @ts-nocheck
import React, { useEffect, useReducer } from "react";
import { Chart } from "@antv/g2";
// import axios from 'axios';
// import dayjs from 'dayjs';
import icon from "../../icon";
import styles from "./style/about.module.less";
// import { apiBasename } from '../../utils/config';
var locales = {
    "zh-CN": {
        "download-day": "今日下载量",
        "download-all": "总下载量",
        dashboard: "Arco Dashboard",
    },
    "en-US": {
        "download-day": "Today Download",
        "download-all": "All Download",
        dashboard: "Arco Dashboard",
    },
};
function renderChart(container, data) {
    var chart = new Chart({
        container: container,
        autoFit: true,
    });
    chart.data(data);
    chart.tooltip({
        showCrosshairs: true,
        containerTpl: '<div class="g2-tooltip" style="white-space: nowrap;padding-bottom: 20px">' +
            '<div class="g2-tooltip-title"></div>' +
            '<div class="g2-tooltip-list"></div></div>',
        itemTpl: '<div style="margin-bottom: 10px">{name}: {value}</div>',
        position: "top",
    });
    chart.axis(false); // 不展示坐标轴
    chart.line().position("endDate*count").shape("smooth");
    chart.area().position("endDate*count").shape("smooth");
    chart.render();
}
function About(_a) {
    var _b = _a.lang, lang = _b === void 0 ? "zh-CN" : _b;
    var _c = useReducer(function (v) {
        return v + 1;
    }, 0);
    // const forceUpdate = _c[1];
    var npmData = window.arcoNpmData || {};
    var dayBuckets = npmData.dayBuckets ? npmData.dayBuckets : [];
    var monthBuckets = npmData.monthBuckets ? npmData.monthBuckets : [];
    useEffect(function () {
        if (!npmData || !Object.keys(npmData).length) {
            getData();
        }
        else {
            renderChart("chart1", dayBuckets);
            renderChart("chart2", monthBuckets);
        }
    }, []);
    function getData() {
        //
    }
    var t = locales[lang];
    return (React.createElement("div", { className: styles.about },
        React.createElement("div", { className: styles.container },
            React.createElement("div", { className: styles.download },
                React.createElement("div", { className: styles.chart1, id: "chart1" }),
                React.createElement("div", { className: styles.text },
                    React.createElement("div", { className: styles.count }, npmData.today ? npmData.today.toLocaleString() : "..."),
                    React.createElement("div", { className: styles.desc }, t["download-day"]))),
            React.createElement("div", { className: styles.download },
                React.createElement("div", { className: styles.chart2, id: "chart2" }),
                React.createElement("div", { className: styles.text },
                    React.createElement("div", { className: styles.count }, npmData.all ? npmData.all.toLocaleString() : "..."),
                    React.createElement("div", { className: styles.desc }, t["download-all"]))),
            React.createElement("a", { className: styles.link, href: "/dashboard", target: "_blank", rel: "noreferrer" },
                React.createElement("div", { className: styles.icon }, icon.IconDashboard),
                t.dashboard))));
}
export default About;
