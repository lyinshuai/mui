var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
// @ts-nocheck
import React, { useState, useEffect } from "react";
import { Trigger, Message } from "@arco-design/web-react";
import { IconArrowRight } from "@arco-design/web-react/icon";
import cs from "classnames";
import gsap from "gsap";
import icon from "../../icon";
import ArcoLogo from "../../assets/logo-m.svg";
import styles from "./index.module.less";
var locales = {
    "zh-CN": {
        pro: "中后台最佳实践",
        material: "物料平台",
        iconbox: "图标平台",
        designLab: "设计系统配置平台",
        chartSpace: "图表库",
        brand: "品牌资源平台",
        fontMall: "字体配置平台",
        toBeOpen: "即将开放",
        palette: "色彩配置工具",
    },
    "en-US": {
        pro: "Best Practices",
        material: "Material Market",
        iconbox: "Icon Platform",
        designLab: "Design System Lab",
        chartSpace: "Arco Chart Space",
        brand: "BrandStore",
        fontMall: "FontMall",
        toBeOpen: "Open soon",
        palette: "Color Configuration Tool",
    },
};
function Popup(_a) {
    var logoData = _a.logoData, t = _a.t, isHome = _a.isHome, isMobile = _a.isMobile;
    return (React.createElement("div", { className: cs(styles.wrapper, isMobile ? styles.m : "") },
        !isHome && (React.createElement("a", { className: styles.home, href: "/" },
            React.createElement(ArcoLogo, { width: "143px", height: "24px" }),
            React.createElement(IconArrowRight, null))),
        React.createElement("div", { className: styles.panel }, logoData.map(function (l, index) { return (React.createElement("a", { 
            // eslint-disable-next-line react/no-array-index-key
            key: index, className: styles.item, href: l.url, onClick: function () {
                if (!l.url) {
                    Message.info(t.toBeOpen);
                }
            } },
            React.createElement("div", { className: styles.logo },
                React.createElement("span", { className: styles.h }, l.logo),
                React.createElement("span", { className: styles.n }, l.logoB)),
            React.createElement("div", { className: styles.text },
                React.createElement("p", { className: styles.title }, l.title),
                React.createElement("span", { className: styles.desc }, l.des)))); }))));
}
function Panel(_a) {
    var lang = _a.lang, getPopupContainer = _a.getPopupContainer, isHome = _a.isHome, isMobile = _a.isMobile;
    var _b = useState(false), visible = _b[0], setVisible = _b[1];
    var t = locales[lang];
    var logoData = [
        {
            logo: icon.IconLogoArcoPro,
            logoB: icon.IconLogoArcoProBlue,
            title: "M Design Pro",
            des: t.pro,
            url: "/pro",
        },
        {
            logo: icon.IconLogoDesignLab,
            logoB: icon.IconLogoDesignLabBlue,
            title: "DesignLab",
            des: t.designLab,
            url: "/themes",
        },
        {
            logo: icon.IconLogoArcoMaterial,
            logoB: icon.IconLogoArcoMaterialBlue,
            title: "MaterialMarket",
            des: t.material,
            url: "/material",
        },
        // {
        //   logo: icon.IconLogoIconBox,
        //   logoB: icon.IconLogoIconBoxBlue,
        //   title: 'IconBox',
        //   des: t.iconbox,
        //   url: '/iconbox',
        // },
    ];
    useEffect(function () {
        var panelTL = gsap.timeline();
        var panelTL2 = gsap.timeline();
        if (visible) {
            panelTL.fromTo(".".concat(styles.item), {
                opacity: 0,
                duration: 0.3,
                y: -4,
                delay: 0.1,
                stagger: {
                    amount: 0.2,
                },
            }, {
                opacity: 1,
                duration: 0.3,
                y: 0,
                delay: 0.1,
                stagger: {
                    amount: 0.2,
                },
            });
        }
        else {
            panelTL2.to(".".concat(styles.item), {
                opacity: 0,
                duration: 0.2,
                y: -4,
            });
        }
    }, [visible]);
    var triggerProps = {
        popupVisible: visible,
        onVisibleChange: function (v) {
            return setVisible(v);
        },
        trigger: "hover",
        popup: function () {
            return React.createElement(Popup, {
                logoData: logoData,
                t: t,
                isHome: isHome,
                isMobile: isMobile,
            });
        },
        position: "bl",
        popupAlign: { bottom: [12, 4] },
        duration: 600,
        classNames: "down",
        getPopupContainer: getPopupContainer,
    };
    return (
    // eslint-disable-next-line react/jsx-props-no-spreading
    React.createElement(Trigger, __assign({}, triggerProps),
        React.createElement("div", { className: cs(styles.icon, isMobile ? styles.mobile : "") },
            React.createElement("div", { className: styles.iconInner }, React.createElement("svg", {
                width: "20",
                height: "20",
                viewBox: "0 0 20 20",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg",
            }, React.createElement("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.5 5L5 5L5 2.5L2.5 2.5L2.5 5ZM5 11.25L2.5 11.25L2.5 8.75L5 8.75L5 11.25ZM17.5 11.25L15 11.25L15 8.75L17.5 8.75L17.5 11.25ZM8.75 11.25L11.25 11.25L11.25 8.75L8.75 8.75L8.75 11.25ZM5 17.5L2.5 17.5L2.5 15L5 15L5 17.5ZM15 17.5L17.5 17.5L17.5 15L15 15L15 17.5ZM11.25 17.5L8.75 17.5L8.75 15L11.25 15L11.25 17.5ZM17.5 5L15 5L15 2.5L17.5 2.5L17.5 5ZM8.75 5L11.25 5L11.25 2.5L8.75 2.5L8.75 5Z",
                fill: "currentColor",
            }))))));
}
export default Panel;
