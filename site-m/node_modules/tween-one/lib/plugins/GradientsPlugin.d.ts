import { IObject } from '../typings';
interface IPos {
    data: number;
    unit: string;
}
interface IAngle {
    extent?: string;
    shape?: string;
    angle?: IPos[];
    position?: IPos[];
}
interface IValueChild {
    color?: number[];
    positions: IPos[];
}
interface IValue {
    type: string;
    angle?: IAngle;
    values: IValueChild[] | string;
}
export default class GradientsPlugin {
    static className: string;
    startAt?: IObject;
    start: IObject;
    value: string;
    key: string;
    tweenVars: IObject;
    vars: IValue[];
    computedStyle?: IObject;
    target: any;
    defaultStartVars: IValue[];
    constructor(value: string);
    getPosition: (data: string[]) => {
        data: number;
        unit: string;
    }[];
    getAngle: (type: string, $angle: string) => {
        extent: string | undefined;
        shape: string | undefined;
        angle: IPos[] | undefined;
        position: IPos[] | undefined;
    };
    valueToIValue: (value?: string | undefined) => IValue[];
    getAnimStart: () => IObject;
    render: (ratio: number) => string;
}
export {};
