"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNotEmpty = exports.valueInRange = exports.getOffset = exports.formatPercent = exports.getPrecision = void 0;
function getPrecision(val) {
    var decimal = ("" + val).split('.')[1];
    return (decimal && decimal.length) || 0;
}
exports.getPrecision = getPrecision;
function formatPercent(val) {
    return val * 100 + "%";
}
exports.formatPercent = formatPercent;
function getOffset(val, range) {
    var value = Number(val);
    if (range && !isNaN(value)) {
        var _a = __read(range, 2), min = _a[0], max = _a[1];
        return (value - min) / (max - min);
    }
    return 0;
}
exports.getOffset = getOffset;
function valueInRange(val, range) {
    var value = Number(val);
    range.sort(function (a, b) { return a - b; });
    return value >= range[0] && value <= range[1];
}
exports.valueInRange = valueInRange;
function isNotEmpty(val) {
    return val || val === 0;
}
exports.isNotEmpty = isNotEmpty;
