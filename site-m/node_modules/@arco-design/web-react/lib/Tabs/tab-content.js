"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var classNames_1 = __importDefault(require("../_util/classNames"));
function TabContent(props) {
    var _a;
    var animation = props.animation, activeTab = props.activeTab, prefixCls = props.prefixCls, paneChildren = props.paneChildren, direction = props.direction, lazyload = props.lazyload, destroyOnHide = props.destroyOnHide;
    var activeIndex = paneChildren.findIndex(function (p) { return p.key === activeTab; });
    if (paneChildren.every(function (x) {
        return (x === null || x === void 0 ? void 0 : x.props) && (!('children' in x.props) || x.props.children === null);
    })) {
        return null;
    }
    var classNamesContentInner = (0, classNames_1.default)(prefixCls + "-content-inner", (_a = {},
        _a[prefixCls + "-animation"] = animation,
        _a));
    return (react_1.default.createElement("div", { className: prefixCls + "-content " + prefixCls + "-content-" + direction },
        react_1.default.createElement("div", { className: classNamesContentInner, style: {
                marginLeft: "-" + activeIndex * 100 + "%",
            } }, paneChildren.map(function (child, index) {
            var _a;
            var mergedDestroyOnHide = 'destroyOnHide' in child.props ? child.props.destroyOnHide : destroyOnHide;
            return (react_1.default.createElement("div", { key: child.key, className: (0, classNames_1.default)(prefixCls + "-content-item", (_a = {},
                    _a[prefixCls + "-content-item-active"] = child.key === activeTab,
                    _a)) }, activeIndex !== index && mergedDestroyOnHide
                ? null
                : react_1.default.cloneElement(child, {
                    lazyload: lazyload,
                    isActive: child.key === activeTab,
                })));
        }))));
}
exports.default = TabContent;
