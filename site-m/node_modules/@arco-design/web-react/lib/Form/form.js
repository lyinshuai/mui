"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var scroll_into_view_if_needed_1 = __importDefault(require("scroll-into-view-if-needed"));
var classNames_1 = __importDefault(require("../_util/classNames"));
var useForm_1 = __importDefault(require("./useForm"));
var ConfigProvider_1 = __importStar(require("../ConfigProvider"));
var context_1 = require("./context");
var is_1 = require("../_util/is");
var omit_1 = __importDefault(require("../_util/omit"));
var useMergeProps_1 = __importDefault(require("../_util/hooks/useMergeProps"));
function getFormElementId(prefix, field) {
    var id = field.replace(/[\[\.]/g, '_').replace(/\]/g, '');
    return prefix ? prefix + "-" + id : "" + id;
}
var defaultProps = {
    layout: 'horizontal',
    labelCol: { span: 5, offset: 0 },
    labelAlign: 'right',
    wrapperCol: { span: 19, offset: 0 },
    requiredSymbol: true,
    wrapper: 'form',
};
var Form = function (baseProps, ref) {
    var _a;
    var ctx = (0, react_1.useContext)(ConfigProvider_1.ConfigContext);
    var wrapperRef = (0, react_1.useRef)(null);
    var _b = __read((0, useForm_1.default)(baseProps.form), 1), formInstance = _b[0];
    var isMount = (0, react_1.useRef)();
    var props = (0, useMergeProps_1.default)(baseProps, defaultProps, (_a = ctx.componentConfig) === null || _a === void 0 ? void 0 : _a.Form);
    var layout = props.layout, labelCol = props.labelCol, wrapperCol = props.wrapperCol, Wrapper = props.wrapper, id = props.id, requiredSymbol = props.requiredSymbol, labelAlign = props.labelAlign, disabled = props.disabled, colon = props.colon, className = props.className, formPrefixCls = props.prefixCls, rest = __rest(props, ["layout", "labelCol", "wrapperCol", "wrapper", "id", "requiredSymbol", "labelAlign", "disabled", "colon", "className", "prefixCls"]);
    var prefixCls = formPrefixCls || ctx.getPrefixCls('form');
    var size = 'size' in props ? props.size : ctx.size;
    var innerMethods = formInstance.getInnerMethods(true);
    if (!isMount.current) {
        innerMethods.innerSetInitialValues(props.initialValues);
    }
    (0, react_1.useEffect)(function () {
        isMount.current = true;
    }, []);
    (0, react_1.useImperativeHandle)(ref, function () {
        return formInstance;
    });
    // 滚动到目标表单字段位置
    formInstance.scrollToField = function (field, options) {
        var node = wrapperRef.current;
        var id = props.id;
        if (!node) {
            return;
        }
        var fieldNode = node.querySelector("#" + getFormElementId(id, field));
        fieldNode &&
            (0, scroll_into_view_if_needed_1.default)(fieldNode, __assign({ behavior: 'smooth', block: 'nearest', scrollMode: 'if-needed' }, options));
    };
    innerMethods.innerSetCallbacks({
        onValuesChange: props.onValuesChange,
        onChange: props.onChange,
        onValidateFail: function (errors) {
            if (props.scrollToFirstError) {
                var options = (0, is_1.isObject)(props.scrollToFirstError) ? props.scrollToFirstError : {};
                formInstance.scrollToField(Object.keys(errors)[0], options);
            }
        },
        onSubmitFailed: props.onSubmitFailed,
        onSubmit: props.onSubmit,
    });
    var contextProps = {
        requiredSymbol: requiredSymbol,
        labelAlign: labelAlign,
        disabled: disabled,
        colon: colon,
        labelCol: labelCol,
        wrapperCol: wrapperCol,
        layout: layout,
        store: formInstance,
        prefixCls: prefixCls,
        getFormElementId: function (field) { return getFormElementId(id, field); },
    };
    var FormContext = context_1.FormContext;
    return (react_1.default.createElement(ConfigProvider_1.default, __assign({}, ctx, { size: size }),
        react_1.default.createElement(FormContext.Provider, { value: contextProps },
            react_1.default.createElement(Wrapper, __assign({ ref: wrapperRef }, (0, omit_1.default)(rest, [
                'form',
                'size',
                'initialValues',
                'onValuesChange',
                'onChange',
                'wrapperProps',
                'scrollToFirstError',
                'onSubmit',
                'onSubmitFailed',
            ]), props.wrapperProps, { className: (0, classNames_1.default)(prefixCls, prefixCls + "-" + layout, prefixCls + "-size-" + size, className), style: props.style, onSubmit: function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    formInstance.submit();
                }, id: id }), props.children))));
};
var FormComponent = (0, react_1.forwardRef)(Form);
FormComponent.displayName = 'Form';
exports.default = FormComponent;
