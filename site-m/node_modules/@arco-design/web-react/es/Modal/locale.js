var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import defaultLocale from '../locale/default';
var modalLocale = __assign({}, defaultLocale);
export function setModalLocale(locale) {
    if (locale) {
        modalLocale = __assign(__assign({}, modalLocale), locale);
    }
    else {
        modalLocale = __assign({}, defaultLocale);
    }
}
export function getModalLocale() {
    return modalLocale;
}
