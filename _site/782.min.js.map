{"version":3,"file":"782.min.js","sources":["webpack:///../components/input/index.en-US.md"],"sourcesContent":["import React, { useState } from \"react\";\nexport default function(props) {\n  const [isUsage, setIsUsage] = useState(false);\n  const [showChangelog, setShowChangelog] = useState(false);\n  const lang = localStorage.getItem(\"arco-lang\") || \"zh-CN\";\n  return /* @__PURE__ */ React.createElement(\"span\", {\n    style: props.style,\n    className: \"markdown-body\"\n  }, /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"category: Components\", /* @__PURE__ */ React.createElement(\"br\", null), \"type: Data Entry\", /* @__PURE__ */ React.createElement(\"br\", null), \"title: Input\", /* @__PURE__ */ React.createElement(\"br\", null), \"cover: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://gw.alipayobjects.com/zos/alicdn/xS9YEJhfe/Input.svg\"\n  }, \"https://gw.alipayobjects.com/zos/alicdn/xS9YEJhfe/Input.svg\")), /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"A basic widget for getting the user input is a text field. Keyboard and mouse can be used for providing or changing data.\"), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"when-to-use\"\n  }, \"When To Use\"), /* @__PURE__ */ React.createElement(\"ul\", null, /* @__PURE__ */ React.createElement(\"li\", null, \"A user input in a form field is needed.\"), /* @__PURE__ */ React.createElement(\"li\", null, \"A search input is required.\")), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"api\"\n  }, \"API\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"input\"\n  }, \"Input\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"addonAfter\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The label text displayed after (on the right side of) the input field\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"addonBefore\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The label text displayed before (on the left side of) the input field\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"allowClear\"), /* @__PURE__ */ React.createElement(\"td\", null, \"If allow to remove input content with clear icon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | \", \"{\", \" clearIcon: ReactNode \", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"bordered\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether has border style\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.5.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The initial input content\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"disabled\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether the input is disabled\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"id\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The ID for input\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"maxLength\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The max length\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"showCount\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether show text count\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | \", \"{\", \" formatter: (\", \"{\", \" count: number, maxLength?: number \", \"}\", \") => ReactNode \", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.18.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"status\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set validation status\"), /* @__PURE__ */ React.createElement(\"td\", null, \"'error' | 'warning' | 'success'\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.19.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"prefix\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The prefix icon for the Input\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"size\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The size of the input box. Note: in the context of a form, the \", /* @__PURE__ */ React.createElement(\"code\", null, \"middle\"), \" size is used\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"large\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"middle\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"small\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"suffix\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The suffix icon for the Input\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"type\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The type of input, see: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://developer.mozilla.org/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\"\n  }, \"MDN\"), \"( use \", /* @__PURE__ */ React.createElement(\"code\", null, \"Input.TextArea\"), \" instead of \", /* @__PURE__ */ React.createElement(\"code\", null, 'type=\"textarea\"'), \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"text\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"value\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The input content value\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Callback when user input\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(e)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onPressEnter\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The callback function that is triggered when Enter key is pressed\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(e)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"blockquote\", null, /* @__PURE__ */ React.createElement(\"p\", null, \"When \", /* @__PURE__ */ React.createElement(\"code\", null, \"Input\"), \" is used in a \", /* @__PURE__ */ React.createElement(\"code\", null, \"Form.Item\"), \" context, if the \", /* @__PURE__ */ React.createElement(\"code\", null, \"Form.Item\"), \" has the \", /* @__PURE__ */ React.createElement(\"code\", null, \"id\"), \" and \", /* @__PURE__ */ React.createElement(\"code\", null, \"options\"), \" props defined then \", /* @__PURE__ */ React.createElement(\"code\", null, \"value\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"defaultValue\"), \", and \", /* @__PURE__ */ React.createElement(\"code\", null, \"id\"), \" props of \", /* @__PURE__ */ React.createElement(\"code\", null, \"Input\"), \" are automatically set.\")), /* @__PURE__ */ React.createElement(\"p\", null, \"The rest of the props of Input are exactly the same as the original \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://reactjs.org/docs/dom-elements.html#all-supported-html-attributes\"\n  }, \"input\"), \".\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"inputtextarea\"\n  }, \"Input.TextArea\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"allowClear\"), /* @__PURE__ */ React.createElement(\"td\", null, \"If allow to remove input content with clear icon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"autoSize\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Height autosize feature, can be set to true | false or an object \", \"{\", \" minRows: 2, maxRows: 6 \", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | object\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"bordered\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether has border style\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.5.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The initial input content\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"maxLength\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The max length\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.7.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"showCount\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether show text count\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | \", \"{\", \" formatter: (\", \"{\", \" count: number, maxLength?: number \", \"}\", \") => string \", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.7.0 (formatter: 4.10.0)\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"value\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The input content value\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onPressEnter\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The callback function that is triggered when Enter key is pressed\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(e)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onResize\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The callback function that is triggered when resize\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(\", \"{\", \" width, height \", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"p\", null, \"The rest of the props of \", /* @__PURE__ */ React.createElement(\"code\", null, \"Input.TextArea\"), \" are the same as the original \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"\n  }, \"textarea\"), \".\"), /* @__PURE__ */ React.createElement(\"h4\", {\n    id: \"inputsearch\"\n  }, \"Input.Search\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"enterButton\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to show an enter button after input. This property conflicts with the \", /* @__PURE__ */ React.createElement(\"code\", null, \"addonAfter\"), \" property\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"loading\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Search box with loading\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onSearch\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The callback function triggered when you click on the search-icon, the clear-icon or press the Enter key\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(value, event)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")))), /* @__PURE__ */ React.createElement(\"p\", null, \"Supports all props of \", /* @__PURE__ */ React.createElement(\"code\", null, \"Input\"), \".\"), /* @__PURE__ */ React.createElement(\"h4\", {\n    id: \"inputgroup\"\n  }, \"Input.Group\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"compact\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether use compact style\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"size\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The size of \", /* @__PURE__ */ React.createElement(\"code\", null, \"Input.Group\"), \" specifies the size of the included \", /* @__PURE__ */ React.createElement(\"code\", null, \"Input\"), \" fields. Available: \", /* @__PURE__ */ React.createElement(\"code\", null, \"large\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"default\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"small\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"default\"))))), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-jsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Input.Group\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), \"input\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), \"input\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Input.Group\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")))), /* @__PURE__ */ React.createElement(\"h4\", {\n    id: \"inputpassword\"\n  }, \"Input.Password\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"iconRender\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Custom toggle button\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(visible) => ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(visible) => (visible ? <EyeOutlined /> : <EyeInvisibleOutlined />)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.3.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"visibilityToggle\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether show toggle button\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h4\", {\n    id: \"input-methods\"\n  }, \"Input Methods\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Name\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Parameters\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"blur\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Remove focus\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"focus\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Get focus\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(option?: \", \"{\", \" preventScroll?: boolean, cursor?: 'start' | 'end' | 'all' \", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"option - 4.10.0\")))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"faq\"\n  }, \"FAQ\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-input-lose-focus-when-change-prefixsuffix\"\n  }, \"Why Input lose focus when change \", /* @__PURE__ */ React.createElement(\"code\", null, \"prefix/suffix\")), /* @__PURE__ */ React.createElement(\"p\", null, \"When Input dynamic add or remove \", /* @__PURE__ */ React.createElement(\"code\", null, \"prefix/suffix\"), \" will make React recreate the dom structure and new input will be not focused. You can set an empty \", /* @__PURE__ */ React.createElement(\"code\", null, \"<span />\"), \" element to keep the dom structure:\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-jsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"const\"), \" suffix \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" condition \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"?\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Icon\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"type\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-value\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation attr-equals\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"'), \"smile\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"')), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), \"span\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Input\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"suffix\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script language-javascript\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script-punctuation punctuation\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"suffix\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-textarea-in-control-can-make-value-exceed-maxlength\"\n  }, \"Why TextArea in control can make \", /* @__PURE__ */ React.createElement(\"code\", null, \"value\"), \" exceed \", /* @__PURE__ */ React.createElement(\"code\", null, \"maxLength\"), \"?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"When in control, component should show as what it set to avoid submit value not align with store value in Form.\"));\n}\n;\n"],"mappingssourceRoot":""}