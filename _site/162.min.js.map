{"version":3,"file":"162.min.js","sources":["webpack:///../components/auto-complete/index.en-US.md"],"sourcesContent":["import React, { useState } from \"react\";\nexport default function(props) {\n  const [isUsage, setIsUsage] = useState(false);\n  const [showChangelog, setShowChangelog] = useState(false);\n  const lang = localStorage.getItem(\"arco-lang\") || \"zh-CN\";\n  return /* @__PURE__ */ React.createElement(\"span\", {\n    style: props.style,\n    className: \"markdown-body\"\n  }, /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"category: Components\", /* @__PURE__ */ React.createElement(\"br\", null), \"type: Data Entry\", /* @__PURE__ */ React.createElement(\"br\", null), \"cols: 2\", /* @__PURE__ */ React.createElement(\"br\", null), \"title: AutoComplete\", /* @__PURE__ */ React.createElement(\"br\", null), \"cover: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://gw.alipayobjects.com/zos/alicdn/qtJm4yt45/AutoComplete.svg\"\n  }, \"https://gw.alipayobjects.com/zos/alicdn/qtJm4yt45/AutoComplete.svg\")), /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"Autocomplete function of input field.\"), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"when-to-use\"\n  }, \"When To Use\"), /* @__PURE__ */ React.createElement(\"ul\", null, /* @__PURE__ */ React.createElement(\"li\", null, \"When you need an input box instead of a selector.\"), /* @__PURE__ */ React.createElement(\"li\", null, \"When you need input suggestions or helping text.\")), /* @__PURE__ */ React.createElement(\"p\", null, \"The differences with Select are:\"), /* @__PURE__ */ React.createElement(\"ul\", null, /* @__PURE__ */ React.createElement(\"li\", null, \"AutoComplete is an input box with text hints, and users can type freely. The keyword is aiding \", /* @__PURE__ */ React.createElement(\"strong\", null, \"input\"), \".\"), /* @__PURE__ */ React.createElement(\"li\", null, \"Select is selecting among given choices. The keyword is \", /* @__PURE__ */ React.createElement(\"strong\", null, \"select\"), \".\")), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"api\"\n  }, \"API\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"allowClear\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Show clear button\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"autoFocus\"), /* @__PURE__ */ React.createElement(\"td\", null, \"If get focus when component mounted\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"backfill\"), /* @__PURE__ */ React.createElement(\"td\", null, \"If backfill selected item the input when using keyboard\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"children (for customize input element)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customize input element\"), /* @__PURE__ */ React.createElement(\"td\", null, \"HTMLInputElement | HTMLTextAreaElement | React.ReactElement<InputProps>\"), /* @__PURE__ */ React.createElement(\"td\", null, \"<Input />\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"children (for dataSource)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Data source to auto complete\"), /* @__PURE__ */ React.createElement(\"td\", null, \"React.ReactElement<OptionProps> | Array<React.ReactElement<OptionProps>>\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultActiveFirstOption\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether active first option by default\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultOpen\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Initial open state of dropdown\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Initial selected option\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"disabled\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether disabled select\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"dropdownClassName\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The className of dropdown menu\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"dropdownMatchSelectWidth\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Determine whether the dropdown menu and the select input are the same width. Default set \", /* @__PURE__ */ React.createElement(\"code\", null, \"min-width\"), \" same as input. Will ignore when value less than select width. \", /* @__PURE__ */ React.createElement(\"code\", null, \"false\"), \" will disable virtual scroll\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"filterOption\"), /* @__PURE__ */ React.createElement(\"td\", null, \"If true, filter options by input, if function, filter options against it. The function will receive two arguments, \", /* @__PURE__ */ React.createElement(\"code\", null, \"inputValue\"), \" and \", /* @__PURE__ */ React.createElement(\"code\", null, \"option\"), \", if the function returns true, the option will be included in the filtered set; Otherwise, it will be excluded\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | function(inputValue, option)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"notFoundContent\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Specify content to show when no result matches\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"Not Found\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"open\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Controlled open state of dropdown\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"options\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Select options. Will get better perf than jsx definition\"), /* @__PURE__ */ React.createElement(\"td\", null, \"{\", \" label, value \", \"}\", \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"placeholder\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The placeholder of input\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"status\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set validation status\"), /* @__PURE__ */ React.createElement(\"td\", null, \"'error' | 'warning'\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.19.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"value\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Selected option\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onBlur\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Called when leaving the component\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function()\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Called when select an option or input value change, or value of input is changed\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(value)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDropdownVisibleChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Call when dropdown open\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(open)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onFocus\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Called when entering the component\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function()\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onSearch\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Called when searching items\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(value)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onSelect\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Called when a option is selected. param is option's value and option instance\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(value, option)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onClear\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Called when clear\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.6.0\")))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"methods\"\n  }, \"Methods\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Name\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"blur()\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Remove focus\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"focus()\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Get focus\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"faq\"\n  }, \"FAQ\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-doesnt-the-text-composition-system-work-well-with-onsearch-in-controlled-mode\"\n  }, \"Why doesn't the text composition system work well with onSearch in controlled mode?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Please use \", /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\"), \" to manage control state. \", /* @__PURE__ */ React.createElement(\"code\", null, \"onSearch\"), \" is used for searching input which is not the same as \", /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\"), \". Besides, clicking on the option will not trigger the \", /* @__PURE__ */ React.createElement(\"code\", null, \"onSearch\"), \" event.\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Related issue: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/ant-design/ant-design/issues/18230\"\n  }, \"#18230\"), \" \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/ant-design/ant-design/issues/17916\"\n  }, \"#17916\")), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"part-of-the-api-in-v3-are-not-available-in-v4\"\n  }, \"Part of the api in v3 are not available in v4?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"AutoComplete is an Input component that supports auto complete tips. As such, it should not support props like \", /* @__PURE__ */ React.createElement(\"code\", null, \"labelInValue\"), \" that affect value display. In v3, the AutoComplete implementation can not handle the case where the \", /* @__PURE__ */ React.createElement(\"code\", null, \"value\"), \" and \", /* @__PURE__ */ React.createElement(\"code\", null, \"label\"), \" are identical. v4 not longer support \", /* @__PURE__ */ React.createElement(\"code\", null, \"label\"), \" as the value input.\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Besides, to unify the API, \", /* @__PURE__ */ React.createElement(\"code\", null, \"dataSource\"), \" is replaced with \", /* @__PURE__ */ React.createElement(\"code\", null, \"options\"), \". You can migrate with the following change:\"), /* @__PURE__ */ React.createElement(\"h4\", {\n    id: \"v3\"\n  }, \"v3\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-tsx\"\n  }, \"dataSource \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'light'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'bamboo'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// or\"), /* @__PURE__ */ React.createElement(\"br\", null), \"dataSource \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \" value\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'light'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" text\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'Light'\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \" value\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'bamboo'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" text\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'Bamboo'\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))), /* @__PURE__ */ React.createElement(\"h4\", {\n    id: \"v4\"\n  }, \"v4\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-tsx\"\n  }, \"options \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \" value\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'light'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" label\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'Light'\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \" value\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'bamboo'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" label\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'Bamboo'\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))));\n}\n;\n"],"mappingssourceRoot":""}