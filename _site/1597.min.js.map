{"version":3,"file":"1597.min.js","sources":["webpack:///../components/upload/index.en-US.md"],"sourcesContent":["import React, { useState } from \"react\";\nexport default function(props) {\n  const [isUsage, setIsUsage] = useState(false);\n  const [showChangelog, setShowChangelog] = useState(false);\n  const lang = localStorage.getItem(\"arco-lang\") || \"zh-CN\";\n  return /* @__PURE__ */ React.createElement(\"span\", {\n    style: props.style,\n    className: \"markdown-body\"\n  }, /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"category: Components\", /* @__PURE__ */ React.createElement(\"br\", null), \"type: Data Entry\", /* @__PURE__ */ React.createElement(\"br\", null), \"title: Upload\", /* @__PURE__ */ React.createElement(\"br\", null), \"cover: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://gw.alipayobjects.com/zos/alicdn/QaeBt_ZMg/Upload.svg\"\n  }, \"https://gw.alipayobjects.com/zos/alicdn/QaeBt_ZMg/Upload.svg\")), /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"Upload file by selecting or dragging.\"), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"when-to-use\"\n  }, \"When To Use\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Uploading is the process of publishing information (web pages, text, pictures, video, etc.) to a remote server via a web page or upload tool.\"), /* @__PURE__ */ React.createElement(\"ul\", null, /* @__PURE__ */ React.createElement(\"li\", null, \"When you need to upload one or more files.\"), /* @__PURE__ */ React.createElement(\"li\", null, \"When you need to show the process of uploading.\"), /* @__PURE__ */ React.createElement(\"li\", null, \"When you need to upload files by dragging and dropping.\")), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"api\"\n  }, \"API\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"accept\"), /* @__PURE__ */ React.createElement(\"td\", null, \"File types that can be accepted. See \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept\"\n  }, \"input accept Attribute\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"action\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Uploading URL\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string | (file) => Promise<string>\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"beforeUpload\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Hook function which will be executed before uploading. Uploading will be stopped with \", /* @__PURE__ */ React.createElement(\"code\", null, \"false\"), \" or a rejected Promise returned. When returned value is \", /* @__PURE__ */ React.createElement(\"code\", null, \"Upload.LIST_IGNORE\"), \", the list of files that have been uploaded will ignore it. \", /* @__PURE__ */ React.createElement(\"strong\", null, \"Warning\\uFF1Athis function is not supported in IE9\")), /* @__PURE__ */ React.createElement(\"td\", null, \"(file, fileList) => boolean | Promise<File> | \", /* @__PURE__ */ React.createElement(\"code\", null, \"Upload.LIST_IGNORE\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"customRequest\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Override for the default xhr behavior allowing for additional customization and ability to implement your own XMLHttpRequest\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"data\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Uploading extra params or function which can return uploading extra params\"), /* @__PURE__ */ React.createElement(\"td\", null, \"object | (file) => object | Promise<object>\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultFileList\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Default list of files that have been uploaded\"), /* @__PURE__ */ React.createElement(\"td\", null, \"object[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"directory\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Support upload whole directory (\", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://caniuse.com/#feat=input-file-directory\"\n  }, \"caniuse\"), \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"disabled\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Disable upload button\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"fileList\"), /* @__PURE__ */ React.createElement(\"td\", null, \"List of files that have been uploaded (controlled). Here is a common issue \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/ant-design/ant-design/issues/2423\"\n  }, \"#2423\"), \" when using it\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#UploadFile\"\n  }, \"UploadFile\"), \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"headers\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set request headers, valid above IE10\"), /* @__PURE__ */ React.createElement(\"td\", null, \"object\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"iconRender\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Custom show icon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(file: UploadFile, listType?: UploadListType) => ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"isImageUrl\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customize if render <img /> in thumbnail\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(file: UploadFile) => boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/ant-design/ant-design/blob/4ad5830eecfb87471cd8ac588c5d992862b70770/components/upload/utils.tsx#L47-L68\"\n  }, \"(inside implementation)\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"itemRender\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Custom item of uploadList\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(originNode: ReactElement, file: UploadFile, fileList: object[], actions: \", \"{\", \" download: function, preview: function, remove: function \", \"}\", \") => React.ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.16.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"listType\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Built-in stylesheets, support for three types: \", /* @__PURE__ */ React.createElement(\"code\", null, \"text\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"picture\"), \" or \", /* @__PURE__ */ React.createElement(\"code\", null, \"picture-card\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"text\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"maxCount\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Limit the number of uploaded files. Will replace current one when \", /* @__PURE__ */ React.createElement(\"code\", null, \"maxCount\"), \" is \", /* @__PURE__ */ React.createElement(\"code\", null, \"1\")), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.10.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"method\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The http method of upload request\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"post\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"multiple\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to support selected multiple file. \", /* @__PURE__ */ React.createElement(\"code\", null, \"IE10+\"), \" supported. You can select multiple files with CTRL holding down while multiple is set to be true\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"name\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The name of uploading file\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"file\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"openFileDialogOnClick\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Click open file dialog\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"previewFile\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customize preview file logic\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(file: File | Blob) => Promise<dataURL: string>\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"progress\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Custom progress bar\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/components/progress/#API\"\n  }, \"ProgressProps\"), \" (support \", /* @__PURE__ */ React.createElement(\"code\", null, 'type=\"line\"'), \" only)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"{\", \" strokeWidth: 2, showInfo: false \", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.3.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"showUploadList\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to show default upload list, could be an object to specify \", /* @__PURE__ */ React.createElement(\"code\", null, \"showPreviewIcon\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"showRemoveIcon\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"showDownloadIcon\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"removeIcon\"), \" and \", /* @__PURE__ */ React.createElement(\"code\", null, \"downloadIcon\"), \" individually\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | \", \"{\", \" showPreviewIcon?: boolean, showDownloadIcon?: boolean, showRemoveIcon?: boolean, previewIcon?: ReactNode | (file: UploadFile) => ReactNode, removeIcon?: ReactNode | (file: UploadFile) => ReactNode, downloadIcon?: ReactNode | (file: UploadFile) => ReactNode \", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function: 4.7.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"withCredentials\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The ajax upload with cookie sent\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"A callback function, can be executed when uploading state is changing, see \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#onChange\"\n  }, \"onChange\")), /* @__PURE__ */ React.createElement(\"td\", null, \"function\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDrop\"), /* @__PURE__ */ React.createElement(\"td\", null, \"A callback function executed when files are dragged and dropped into upload area\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(event: React.DragEvent) => void\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.16.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDownload\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Click the method to download the file, pass the method to perform the method logic, do not pass the default jump to the new TAB\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(file): void\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(Jump to new TAB)\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onPreview\"), /* @__PURE__ */ React.createElement(\"td\", null, \"A callback function, will be executed when file link or preview icon is clicked\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(file)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onRemove\"), /* @__PURE__ */ React.createElement(\"td\", null, \"A callback function, will be executed when removing file button is clicked, remove event will be prevented when return value is false or a Promise which resolve(false) or reject\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(file): boolean | Promise\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"uploadfile\"\n  }, \"UploadFile\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Extends File with additional props.\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"name\"), /* @__PURE__ */ React.createElement(\"td\", null, \"File name\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"percent\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Upload progress percent\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"status\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Upload status. Show different style when configured\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"error\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"success\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"done\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"uploading\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"removed\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"thumbUrl\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Thumb image url\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"uid\"), /* @__PURE__ */ React.createElement(\"td\", null, \"unique id. Will auto generate when not provided\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"url\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Download url\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"onchange\"\n  }, \"onChange\"), /* @__PURE__ */ React.createElement(\"blockquote\", null, /* @__PURE__ */ React.createElement(\"p\", null, \"The function will be called when uploading is in progress, completed or failed.\")), /* @__PURE__ */ React.createElement(\"p\", null, \"When uploading state change, it returns:\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-js\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"file\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"/* ... */\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"fileList\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"/* ... */\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"event\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"/* ... */\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"))), /* @__PURE__ */ React.createElement(\"ol\", null, /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"file\"), \" File object for the current operation.\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-js\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"   \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"uid\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'uid'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"      \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// unique identifier, negative is recommend, to prevent interference with internal generated id\"), /* @__PURE__ */ React.createElement(\"br\", null), \"   \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"name\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'xx.png'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"   \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// file name\"), /* @__PURE__ */ React.createElement(\"br\", null), \"   \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"status\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'done'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// options\\uFF1Auploading, done, error, removed. Intercepted file by beforeUpload don't have status field.\"), /* @__PURE__ */ React.createElement(\"br\", null), \"   \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"response\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'\", \"{\", '\"status\": \"success\"', \"}\", \"'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// response from server\"), /* @__PURE__ */ React.createElement(\"br\", null), \"   \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"linkProps\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'\", \"{\", '\"download\": \"image\"', \"}\", \"'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// additional html props of file link\"), /* @__PURE__ */ React.createElement(\"br\", null), \"   \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"xhr\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'XMLHttpRequest\", \"{\", \" ... \", \"}\", \"'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// XMLHttpRequest Header\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")))), /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"fileList\"), \" current list of files\")), /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"event\"), \" response from server, including uploading progress, supported by advanced browsers.\"))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"faq\"\n  }, \"FAQ\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"how-do-i-implement-upload-server-side\"\n  }, \"How do I implement upload server side?\"), /* @__PURE__ */ React.createElement(\"ul\", null, /* @__PURE__ */ React.createElement(\"li\", null, \"You can consult \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/blueimp/jQuery-File-Upload/wiki#server-side\"\n  }, \"jQuery-File-Upload\"), \" about how to implement server side upload interface.\"), /* @__PURE__ */ React.createElement(\"li\", null, \"There is a mock example of \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/react-component/upload/blob/master/server.js\"\n  }, \"express\"), \" in rc-upload.\")), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"i-want-to-display-download-links\"\n  }, \"I want to display download links.\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Please set property \", /* @__PURE__ */ React.createElement(\"code\", null, \"url\"), \" of each item in \", /* @__PURE__ */ React.createElement(\"code\", null, \"fileList\"), \" to control content of link.\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"how-to-use-customrequest\"\n  }, \"How to use \", /* @__PURE__ */ React.createElement(\"code\", null, \"customRequest\"), \"?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"See \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/react-component/upload#customrequest\"\n  }, \"https://github.com/react-component/upload#customrequest\"), \".\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-will-the-filelist-thats-in-control-not-trigger-onchange-status-update-when-the-file-is-not-in-the-list\"\n  }, \"Why will the \", /* @__PURE__ */ React.createElement(\"code\", null, \"fileList\"), \" that's in control not trigger \", /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"status\"), \" update when the file is not in the list?\"), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\"), \" will only trigger when the file is in the list, it will ignore any events removed from the list. Please note that there does exist a bug which makes an event still trigger even when the file is not in the list before \", /* @__PURE__ */ React.createElement(\"code\", null, \"4.13.0\"), \".\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-does-onchange-sometimes-return-file-object-and-other-times-return--originfileobj-file-\"\n  }, \"Why does \", /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\"), \" sometimes return File object and other times return \", \"{\", \" originFileObj: File \", \"}\", \"?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"For compatible case, we return File object when \", /* @__PURE__ */ React.createElement(\"code\", null, \"beforeUpload\"), \" return \", /* @__PURE__ */ React.createElement(\"code\", null, \"false\"), \". It will merge to \", /* @__PURE__ */ React.createElement(\"code\", null, \"{\", \" originFileObj: File \", \"}\"), \" in next major version. Current version is compatible to get origin file by \", /* @__PURE__ */ React.createElement(\"code\", null, \"info.file.originFileObj\"), \". You can change this before major release.\"));\n}\n;\n"],"mappingssourceRoot":""}