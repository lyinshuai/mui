{"version":3,"file":"1514.min.js","sources":["webpack:///../components/tree-select/index.en-US.md"],"sourcesContent":["import React, { useState } from \"react\";\nexport default function(props) {\n  const [isUsage, setIsUsage] = useState(false);\n  const [showChangelog, setShowChangelog] = useState(false);\n  const lang = localStorage.getItem(\"arco-lang\") || \"zh-CN\";\n  return /* @__PURE__ */ React.createElement(\"span\", {\n    style: props.style,\n    className: \"markdown-body\"\n  }, /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"category: Components\", /* @__PURE__ */ React.createElement(\"br\", null), \"type: Data Entry\", /* @__PURE__ */ React.createElement(\"br\", null), \"title: TreeSelect\", /* @__PURE__ */ React.createElement(\"br\", null), \"cover: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://gw.alipayobjects.com/zos/alicdn/Ax4DA0njr/TreeSelect.svg\"\n  }, \"https://gw.alipayobjects.com/zos/alicdn/Ax4DA0njr/TreeSelect.svg\")), /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"Tree selection control.\"), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"when-to-use\"\n  }, \"When To Use\"), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"TreeSelect\"), \" is similar to \", /* @__PURE__ */ React.createElement(\"code\", null, \"Select\"), \", but the values are provided in a tree like structure. Any data whose entries are defined in a hierarchical manner is fit to use this control. Examples of such case may include a corporate hierarchy, a directory structure, and so on.\"), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"api\"\n  }, \"API\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"tree-props\"\n  }, \"Tree props\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"allowClear\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether allow clear\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"autoClearSearchValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"If auto clear search input value when multiple select is selected/deselected\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"bordered\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether has border style\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"To set the initial selected treeNode(s)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string | string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"disabled\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Disabled or not\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"dropdownClassName\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The className of dropdown menu\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"dropdownMatchSelectWidth\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Determine whether the dropdown menu and the select input are the same width. Default set \", /* @__PURE__ */ React.createElement(\"code\", null, \"min-width\"), \" same as input. Will ignore when value less than select width. \", /* @__PURE__ */ React.createElement(\"code\", null, \"false\"), \" will disable virtual scroll\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"dropdownRender\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customize dropdown content\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(originNode: ReactNode, props) => ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"dropdownStyle\"), /* @__PURE__ */ React.createElement(\"td\", null, \"To set the style of the dropdown menu\"), /* @__PURE__ */ React.createElement(\"td\", null, \"CSSProperties\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"fieldNames\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customize node label, value, children field name\"), /* @__PURE__ */ React.createElement(\"td\", null, \"object\"), /* @__PURE__ */ React.createElement(\"td\", null, \"{\", \" label: \", /* @__PURE__ */ React.createElement(\"code\", null, \"label\"), \", value: \", /* @__PURE__ */ React.createElement(\"code\", null, \"value\"), \", children: \", /* @__PURE__ */ React.createElement(\"code\", null, \"children\"), \" \", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.17.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"filterTreeNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to filter treeNodes by input value. The value of \", /* @__PURE__ */ React.createElement(\"code\", null, \"treeNodeFilterProp\"), \" is used for filtering by default\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | function(inputValue: string, treeNode: TreeNode) (should return boolean)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"getPopupContainer\"), /* @__PURE__ */ React.createElement(\"td\", null, \"To set the container of the dropdown menu. The default is to create a \", /* @__PURE__ */ React.createElement(\"code\", null, \"div\"), \" element in \", /* @__PURE__ */ React.createElement(\"code\", null, \"body\"), \", you can reset it to the scrolling area and make a relative reposition. \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://codepen.io/afc163/pen/zEjNOy?editors=0010\"\n  }, \"example\")), /* @__PURE__ */ React.createElement(\"td\", null, \"function(triggerNode)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"() => document.body\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"labelInValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to embed label in value, turn the format of value from \", /* @__PURE__ */ React.createElement(\"code\", null, \"string\"), \" to \", \"{\", \"value: string, label: ReactNode, halfChecked: string[]\", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"listHeight\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Config popup height\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"256\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"loadData\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Load data asynchronously\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(node)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"maxTagCount\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Max tag count to show. \", /* @__PURE__ */ React.createElement(\"code\", null, \"responsive\"), \" will cost render performance\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number | \", /* @__PURE__ */ React.createElement(\"code\", null, \"responsive\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"responsive: 4.10\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"maxTagPlaceholder\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Placeholder for not showing tags\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode | function(omittedValues)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"multiple\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Support multiple or not, will be \", /* @__PURE__ */ React.createElement(\"code\", null, \"true\"), \" when enable \", /* @__PURE__ */ React.createElement(\"code\", null, \"treeCheckable\")), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"notFoundContent\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Specify content to show when no result matches\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"Not Found\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"placeholder\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Placeholder of the select input\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"placement\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The position where the selection box pops up\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"bottomLeft\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottomRight\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"topLeft\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"topRight\")), /* @__PURE__ */ React.createElement(\"td\", null, \"bottomLeft\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"searchValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Work with \", /* @__PURE__ */ React.createElement(\"code\", null, \"onSearch\"), \" to make search value controlled\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"showArrow\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to show the \", /* @__PURE__ */ React.createElement(\"code\", null, \"suffixIcon\"), \"\\uFF0Cwhen single selection mode, default \", /* @__PURE__ */ React.createElement(\"code\", null, \"true\")), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"showCheckedStrategy\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The way show selected item in box when \", /* @__PURE__ */ React.createElement(\"code\", null, \"treeCheckable\"), \" set. \", /* @__PURE__ */ React.createElement(\"strong\", null, \"Default:\"), \" just show child nodes. \", /* @__PURE__ */ React.createElement(\"strong\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"TreeSelect.SHOW_ALL\"), \":\"), \" show all checked treeNodes (include parent treeNode). \", /* @__PURE__ */ React.createElement(\"strong\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"TreeSelect.SHOW_PARENT\"), \":\"), \" show checked treeNodes (just show parent treeNode)\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"TreeSelect.SHOW_ALL\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"TreeSelect.SHOW_PARENT\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"TreeSelect.SHOW_CHILD\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"TreeSelect.SHOW_CHILD\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"showSearch\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Support search or not\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"single: false | multiple: true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"size\"), /* @__PURE__ */ React.createElement(\"td\", null, \"To set the size of the select input\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"large\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"middle\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"small\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"status\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set validation status\"), /* @__PURE__ */ React.createElement(\"td\", null, \"'error' | 'warning'\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.19.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"suffixIcon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The custom suffix icon,you must set \", /* @__PURE__ */ React.createElement(\"code\", null, \"showArrow\"), \" to \", /* @__PURE__ */ React.createElement(\"code\", null, \"true\"), \" manually in multiple selection mode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"switcherIcon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"customize collapse | expand icon of tree node\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"tagRender\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customize tag render when \", /* @__PURE__ */ React.createElement(\"code\", null, \"multiple\")), /* @__PURE__ */ React.createElement(\"td\", null, \"(props) => ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeCheckable\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to show checkbox on the treeNodes\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeCheckStrictly\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to check nodes precisely (in the \", /* @__PURE__ */ React.createElement(\"code\", null, \"checkable\"), \" mode), means parent and child nodes are not associated, and it will make \", /* @__PURE__ */ React.createElement(\"code\", null, \"labelInValue\"), \" be true\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeData\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Data of the treeNodes, manual construction work is no longer needed if this property has been set(ensure the Uniqueness of each value)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"array<\", \"{\", \" value, title, children, [disabled, disableCheckbox, selectable, checkable] \", \"}\", \">\"), /* @__PURE__ */ React.createElement(\"td\", null, \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeDataSimpleMode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Enable simple mode of treeData. Changes the \", /* @__PURE__ */ React.createElement(\"code\", null, \"treeData\"), \" schema to: [\", \"{\", `id:1, pId:0, value:'1', title:\"test1\",...`, \"}\", \",...] where pId is parent node's id). It is possible to replace the default \", /* @__PURE__ */ React.createElement(\"code\", null, \"id\"), \" and \", /* @__PURE__ */ React.createElement(\"code\", null, \"pId\"), \" keys by providing object to \", /* @__PURE__ */ React.createElement(\"code\", null, \"treeDataSimpleMode\")), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | object<\", \"{\", \" id: string, pId: string, rootPId: string \", \"}\", \">\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeDefaultExpandAll\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to expand all treeNodes by default\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeDefaultExpandedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Default expanded treeNodes\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeExpandedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set expanded keys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeIcon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Shows the icon before a TreeNode's title. There is no default style; you must set a custom style for it if set to \", /* @__PURE__ */ React.createElement(\"code\", null, \"true\")), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeLoadedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(Controlled) Set loaded tree nodes, work with \", /* @__PURE__ */ React.createElement(\"code\", null, \"loadData\"), \" only\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeLine\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Show the line. Ref \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/components/tree/#components-tree-demo-line\"\n  }, \"Tree - showLine\")), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | object\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.17.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeNodeFilterProp\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Will be used for filtering if \", /* @__PURE__ */ React.createElement(\"code\", null, \"filterTreeNode\"), \" returns true\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"value\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeNodeLabelProp\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Will render as content of select\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"title\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"value\"), /* @__PURE__ */ React.createElement(\"td\", null, \"To set the current selected treeNode(s)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string | string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"virtual\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Disable virtual scroll when set to false\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.1.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"A callback function, can be executed when selected treeNodes or input value change\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(value, label, extra)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDropdownVisibleChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Called when dropdown open\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(open)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onSearch\"), /* @__PURE__ */ React.createElement(\"td\", null, \"A callback function, can be executed when the search input changes\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(value: string)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onSelect\"), /* @__PURE__ */ React.createElement(\"td\", null, \"A callback function, can be executed when you select a treeNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(value, node, extra)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onTreeExpand\"), /* @__PURE__ */ React.createElement(\"td\", null, \"A callback function, can be executed when treeNode expanded\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(expandedKeys)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"tree-methods\"\n  }, \"Tree Methods\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Name\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"blur()\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Remove focus\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"focus()\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Get focus\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"treenode-props\"\n  }, \"TreeNode props\"), /* @__PURE__ */ React.createElement(\"blockquote\", null, /* @__PURE__ */ React.createElement(\"p\", null, \"We recommend you to use \", /* @__PURE__ */ React.createElement(\"code\", null, \"treeData\"), \" rather than \", /* @__PURE__ */ React.createElement(\"code\", null, \"TreeNode\"), \", to avoid the trouble of manual construction.\")), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"checkable\"), /* @__PURE__ */ React.createElement(\"td\", null, \"When Tree is checkable, set TreeNode display Checkbox or not\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"disableCheckbox\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Disables the checkbox of the treeNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"disabled\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Disabled or not\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"isLeaf\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Leaf node or not\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"key\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Required property (unless using \", /* @__PURE__ */ React.createElement(\"code\", null, \"treeDataSimpleMode\"), \"), should be unique in the tree\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"selectable\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether can be selected\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"title\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Content showed on the treeNodes\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"---\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"value\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Will be treated as \", /* @__PURE__ */ React.createElement(\"code\", null, \"treeNodeFilterProp\"), \" by default, should be unique in the tree\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"faq\"\n  }, \"FAQ\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"how-to-get-parent-node-in-onchange\"\n  }, \"How to get parent node in onChange?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"We don't provide this since performance consideration. You can get by this way: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://codesandbox.io/s/wk080nn81k\"\n  }, \"https://codesandbox.io/s/wk080nn81k\")), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-sometime-customize-option-cause-scroll-break\"\n  }, \"Why sometime customize Option cause scroll break?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"You can ref Select \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/components/select\"\n  }, \"FAQ\"), \".\"));\n}\n;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}