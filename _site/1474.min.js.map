{"version":3,"file":"1474.min.js","sources":["webpack:///../components/tooltip/index.en-US.md"],"sourcesContent":["import React, { useState } from \"react\";\nexport default function(props) {\n  const [isUsage, setIsUsage] = useState(false);\n  const [showChangelog, setShowChangelog] = useState(false);\n  const lang = localStorage.getItem(\"arco-lang\") || \"zh-CN\";\n  return /* @__PURE__ */ React.createElement(\"span\", {\n    style: props.style,\n    className: \"markdown-body\"\n  }, /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"category: Components\", /* @__PURE__ */ React.createElement(\"br\", null), \"type: Data Display\", /* @__PURE__ */ React.createElement(\"br\", null), \"title: Tooltip\", /* @__PURE__ */ React.createElement(\"br\", null), \"cover: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://gw.alipayobjects.com/zos/alicdn/Vyyeu8jq2/Tooltp.svg\"\n  }, \"https://gw.alipayobjects.com/zos/alicdn/Vyyeu8jq2/Tooltp.svg\")), /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"A simple text popup tip.\"), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"when-to-use\"\n  }, \"When To Use\"), /* @__PURE__ */ React.createElement(\"ul\", null, /* @__PURE__ */ React.createElement(\"li\", null, \"The tip is shown on mouse enter, and is hidden on mouse leave. The Tooltip doesn't support complex text or operations.\"), /* @__PURE__ */ React.createElement(\"li\", null, \"To provide an explanation of a \", /* @__PURE__ */ React.createElement(\"code\", null, \"button/text/operation\"), \". It's often used instead of the html \", /* @__PURE__ */ React.createElement(\"code\", null, \"title\"), \" attribute.\")), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"api\"\n  }, \"API\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"title\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The text shown in the tooltip\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode | () => ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"common-api\"\n  }, \"Common API\"), /* @__PURE__ */ React.createElement(\"p\", null, \"The following APIs are shared by Tooltip, Popconfirm, Popover.\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"align\"), /* @__PURE__ */ React.createElement(\"td\", null, \"This value will be merged into placement's config, please refer to the settings \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/react-component/tooltip\"\n  }, \"rc-tooltip\")), /* @__PURE__ */ React.createElement(\"td\", null, \"object\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"arrowPointAtCenter\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether the arrow is pointed at the center of target\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"autoAdjustOverflow\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to adjust popup placement automatically when popup is off screen\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"color\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The background color\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.3.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultVisible\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether the floating tooltip card is visible by default\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"destroyTooltipOnHide\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether destroy tooltip when hidden, parent container of tooltip will be destroyed when \", /* @__PURE__ */ React.createElement(\"code\", null, \"keepParent\"), \" is false\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | \", \"{\", \" keepParent?: boolean \", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"getPopupContainer\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The DOM container of the tip, the default behavior is to create a \", /* @__PURE__ */ React.createElement(\"code\", null, \"div\"), \" element in \", /* @__PURE__ */ React.createElement(\"code\", null, \"body\")), /* @__PURE__ */ React.createElement(\"td\", null, \"function(triggerNode)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"() => document.body\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"mouseEnterDelay\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Delay in seconds, before tooltip is shown on mouse enter\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"0.1\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"mouseLeaveDelay\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Delay in seconds, before tooltip is hidden on mouse leave\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"0.1\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"overlayClassName\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Class name of the tooltip card\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"overlayStyle\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Style of the tooltip card\"), /* @__PURE__ */ React.createElement(\"td\", null, \"object\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"overlayInnerStyle\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Style of the tooltip inner content\"), /* @__PURE__ */ React.createElement(\"td\", null, \"object\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"placement\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The position of the tooltip relative to the target, which can be one of \", /* @__PURE__ */ React.createElement(\"code\", null, \"top\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"left\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"right\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottom\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"topLeft\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"topRight\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottomLeft\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottomRight\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"leftTop\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"leftBottom\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"rightTop\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"rightBottom\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"top\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"trigger\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Tooltip trigger mode. Could be multiple by passing an array\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"hover\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"focus\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"click\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"contextMenu\"), \" | Array<string>\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"hover\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"visible\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether the floating tooltip card is visible or not\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"zIndex\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Config \", /* @__PURE__ */ React.createElement(\"code\", null, \"z-index\"), \" of Tooltip\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onVisibleChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Callback executed when visibility of the tooltip card is changed\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(visible) => void\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"note\"\n  }, \"Note\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Please ensure that the child node of \", /* @__PURE__ */ React.createElement(\"code\", null, \"Tooltip\"), \" accepts \", /* @__PURE__ */ React.createElement(\"code\", null, \"onMouseEnter\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"onMouseLeave\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"onFocus\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"onClick\"), \" events.\"));\n}\n;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}