{"version":3,"file":"7.min.js","sources":["webpack:///../components/transfer/README.en-US.md","webpack:///../node_modules/lodash/_arrayIncludes.js","webpack:///../node_modules/lodash/_arrayIncludesWith.js","webpack:///../node_modules/lodash/_baseDifference.js","webpack:///../node_modules/lodash/_baseFindIndex.js","webpack:///../node_modules/lodash/_baseIndexOf.js","webpack:///../node_modules/lodash/_baseIsNaN.js","webpack:///../node_modules/lodash/_strictIndexOf.js","webpack:///../node_modules/lodash/difference.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { CodeBlockWrapper, CellCode, CellDemo, CellDescription, Browser, Changelog } from \"@arco-design/arco-doc-site-components\";\nimport { Radio as NavRadio, Button as ChangelogBtn, Drawer as ChangelogDrawer } from \"@arco-design/web-react\";\nconst changelog = [];\nfunction Demo0() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _typeof = require(\"@babel/runtime/helpers/typeof\");\n  var _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n  var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n  var _react = _interopRequireWildcard(require(\"react\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\")\n      return null;\n    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();\n    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {\n      return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n  }\n  function _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n      return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n      return { default: obj };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n  var mockData = [];\n  for (var i = 0; i < 20; i++) {\n    mockData.push({\n      key: i.toString(),\n      title: \"content\".concat(i + 1),\n      description: \"description of content\".concat(i + 1)\n    });\n  }\n  var initialTargetKeys = mockData.filter(function(item) {\n    return +item.key > 10;\n  }).map(function(item) {\n    return item.key;\n  });\n  var App = function App2() {\n    var _useState = (0, _react.useState)(initialTargetKeys), _useState2 = (0, _slicedToArray2.default)(_useState, 2), targetKeys = _useState2[0], setTargetKeys = _useState2[1];\n    var _useState3 = (0, _react.useState)([]), _useState4 = (0, _slicedToArray2.default)(_useState3, 2), selectedKeys = _useState4[0], setSelectedKeys = _useState4[1];\n    var onChange = function onChange2(nextTargetKeys, direction, moveKeys) {\n      console.log(\"targetKeys:\", nextTargetKeys);\n      console.log(\"direction:\", direction);\n      console.log(\"moveKeys:\", moveKeys);\n      setTargetKeys(nextTargetKeys);\n    };\n    var onSelectChange = function onSelectChange2(sourceSelectedKeys, targetSelectedKeys) {\n      console.log(\"sourceSelectedKeys:\", sourceSelectedKeys);\n      console.log(\"targetSelectedKeys:\", targetSelectedKeys);\n      setSelectedKeys([].concat((0, _toConsumableArray2.default)(sourceSelectedKeys), (0, _toConsumableArray2.default)(targetSelectedKeys)));\n    };\n    var onScroll = function onScroll2(direction, e) {\n      console.log(\"direction:\", direction);\n      console.log(\"target:\", e.target);\n    };\n    return /* @__PURE__ */ _react.default.createElement(_mui.Transfer, {\n      dataSource: mockData,\n      titles: [\"Source\", \"Target\"],\n      operations: [\"To right\", \"To left\"],\n      targetKeys,\n      selectedKeys,\n      onChange,\n      onSelectChange,\n      onScroll,\n      render: function render(item) {\n        return item.title;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    });\n  };\n  var __export = /* @__PURE__ */ _react.default.createElement(CodeBlockWrapper, {\n    id: \"Basic\"\n  }, /* @__PURE__ */ _react.default.createElement(CellDescription, {\n    isFirst: true\n  }, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#Basic'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>Basic</h2><p>The most basic usage of <code>Transfer</code> involves providing the source data and target keys arrays, plus the rendering and some callback functions.</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellDemo, null, /* @__PURE__ */ _react.default.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellCode, null, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token maybe-class-name'>React</span><span class='token punctuation'>,</span> <span class='token punctuation'>{</span> useState <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'react'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Transfer</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> mockData <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> <span class='token number'>20</span><span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />  mockData<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> i<span class='token punctuation'>.</span><span class='token method function property-access'>toString</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>description</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>description of content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token keyword'>const</span> initialTargetKeys <span class='token operator'>=</span> mockData<span class='token punctuation'>.</span><span class='token method function property-access'>filter</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token operator'>+</span>item<span class='token punctuation'>.</span><span class='token property-access'>key</span> <span class='token operator'>></span> <span class='token number'>10</span><span class='token punctuation'>)</span><span class='token punctuation'>.</span><span class='token method function property-access'>map</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> item<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>App</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>targetKeys<span class='token punctuation'>,</span> setTargetKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span>initialTargetKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>selectedKeys<span class='token punctuation'>,</span> setSelectedKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onChange</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>nextTargetKeys<span class='token punctuation'>,</span> direction<span class='token punctuation'>,</span> moveKeys</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'targetKeys:'</span><span class='token punctuation'>,</span> nextTargetKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'direction:'</span><span class='token punctuation'>,</span> direction<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'moveKeys:'</span><span class='token punctuation'>,</span> moveKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setTargetKeys</span><span class='token punctuation'>(</span>nextTargetKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSelectChange</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>sourceSelectedKeys<span class='token punctuation'>,</span> targetSelectedKeys</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'sourceSelectedKeys:'</span><span class='token punctuation'>,</span> sourceSelectedKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'targetSelectedKeys:'</span><span class='token punctuation'>,</span> targetSelectedKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setSelectedKeys</span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token spread operator'>...</span>sourceSelectedKeys<span class='token punctuation'>,</span> <span class='token spread operator'>...</span>targetSelectedKeys<span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onScroll</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>direction<span class='token punctuation'>,</span> e</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'direction:'</span><span class='token punctuation'>,</span> direction<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'target:'</span><span class='token punctuation'>,</span> e<span class='token punctuation'>.</span><span class='token property-access'>target</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Transfer</span></span><br />      <span class='token attr-name'>dataSource</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>mockData<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>titles</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><span class='token string'>'Source'</span><span class='token punctuation'>,</span> <span class='token string'>'Target'</span><span class='token punctuation'>]</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>operations</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><span class='token string'>'To right'</span><span class='token punctuation'>,</span> <span class='token string'>'To left'</span><span class='token punctuation'>]</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>targetKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>targetKeys<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>selectedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>selectedKeys<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onChange<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onSelectChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSelectChange<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onScroll</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onScroll<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>render</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>}</span></span><br />    <span class='token punctuation'>/></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>App</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo1() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n  var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n  var _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n  var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n  var _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n  var _react = _interopRequireDefault(require(\"react\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = (0, _getPrototypeOf2.default)(Derived), result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct)\n      return false;\n    if (Reflect.construct.sham)\n      return false;\n    if (typeof Proxy === \"function\")\n      return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n      }));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  var mockData = [];\n  for (var i = 0; i < 20; i++) {\n    mockData.push({\n      key: i.toString(),\n      title: \"content\".concat(i + 1),\n      description: \"description of content\".concat(i + 1),\n      disabled: i % 3 < 1\n    });\n  }\n  var oriTargetKeys = mockData.filter(function(item) {\n    return +item.key % 3 > 1;\n  }).map(function(item) {\n    return item.key;\n  });\n  var App = /* @__PURE__ */ function(_React$Component) {\n    (0, _inherits2.default)(App2, _React$Component);\n    var _super = _createSuper(App2);\n    function App2() {\n      var _this;\n      (0, _classCallCheck2.default)(this, App2);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n        targetKeys: oriTargetKeys,\n        selectedKeys: [],\n        disabled: false\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleChange\", function(nextTargetKeys, direction, moveKeys) {\n        _this.setState({\n          targetKeys: nextTargetKeys\n        });\n        console.log(\"targetKeys: \", nextTargetKeys);\n        console.log(\"direction: \", direction);\n        console.log(\"moveKeys: \", moveKeys);\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleSelectChange\", function(sourceSelectedKeys, targetSelectedKeys) {\n        _this.setState({\n          selectedKeys: [].concat((0, _toConsumableArray2.default)(sourceSelectedKeys), (0, _toConsumableArray2.default)(targetSelectedKeys))\n        });\n        console.log(\"sourceSelectedKeys: \", sourceSelectedKeys);\n        console.log(\"targetSelectedKeys: \", targetSelectedKeys);\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleScroll\", function(direction, e) {\n        console.log(\"direction:\", direction);\n        console.log(\"target:\", e.target);\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleDisable\", function(disabled) {\n        _this.setState({\n          disabled\n        });\n      });\n      return _this;\n    }\n    (0, _createClass2.default)(App2, [{\n      key: \"render\",\n      value: function render() {\n        var _this$state = this.state, targetKeys = _this$state.targetKeys, selectedKeys = _this$state.selectedKeys, disabled = _this$state.disabled;\n        return /* @__PURE__ */ _react.default.createElement(_react.default.Fragment, null, /* @__PURE__ */ _react.default.createElement(_mui.Transfer, {\n          dataSource: mockData,\n          titles: [\"Source\", \"Target\"],\n          targetKeys,\n          selectedKeys,\n          onChange: this.handleChange,\n          onSelectChange: this.handleSelectChange,\n          onScroll: this.handleScroll,\n          render: function render2(item) {\n            return item.title;\n          },\n          disabled,\n          oneWay: true,\n          style: {\n            marginBottom: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }\n        }), /* @__PURE__ */ _react.default.createElement(_mui.Switch, {\n          unCheckedChildren: \"disabled\",\n          checkedChildren: \"disabled\",\n          checked: disabled,\n          onChange: this.handleDisable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }\n        }));\n      }\n    }]);\n    return App2;\n  }(_react.default.Component);\n  var __export = /* @__PURE__ */ _react.default.createElement(CodeBlockWrapper, {\n    id: \"One Way\"\n  }, /* @__PURE__ */ _react.default.createElement(CellDescription, null, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#One Way'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>One Way</h2><p>Use <code>oneWay</code> to makes Transfer to one way style.</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellDemo, null, /* @__PURE__ */ _react.default.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellCode, null, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token maybe-class-name'>React</span></span> <span class='token keyword module'>from</span> <span class='token string'>'react'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Transfer</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>Switch</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> mockData <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> <span class='token number'>20</span><span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />  mockData<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> i<span class='token punctuation'>.</span><span class='token method function property-access'>toString</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>description</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>description of content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> i <span class='token operator'>%</span> <span class='token number'>3</span> <span class='token operator'>&lt;</span> <span class='token number'>1</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token keyword'>const</span> oriTargetKeys <span class='token operator'>=</span> mockData<span class='token punctuation'>.</span><span class='token method function property-access'>filter</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token operator'>+</span>item<span class='token punctuation'>.</span><span class='token property-access'>key</span> <span class='token operator'>%</span> <span class='token number'>3</span> <span class='token operator'>></span> <span class='token number'>1</span><span class='token punctuation'>)</span><span class='token punctuation'>.</span><span class='token method function property-access'>map</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> item<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>class</span> <span class='token class-name'>App</span> <span class='token keyword'>extends</span> <span class='token class-name'>React<span class='token punctuation'>.</span>Component</span> <span class='token punctuation'>{</span><br />  state <span class='token operator'>=</span> <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>targetKeys</span><span class='token operator'>:</span> oriTargetKeys<span class='token punctuation'>,</span><br />    <span class='token literal-property property'>selectedKeys</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> <span class='token boolean'>false</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>handleChange</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>nextTargetKeys<span class='token punctuation'>,</span> direction<span class='token punctuation'>,</span> moveKeys</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> <span class='token literal-property property'>targetKeys</span><span class='token operator'>:</span> nextTargetKeys <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'targetKeys: '</span><span class='token punctuation'>,</span> nextTargetKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'direction: '</span><span class='token punctuation'>,</span> direction<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'moveKeys: '</span><span class='token punctuation'>,</span> moveKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>handleSelectChange</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>sourceSelectedKeys<span class='token punctuation'>,</span> targetSelectedKeys</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> <span class='token literal-property property'>selectedKeys</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><span class='token spread operator'>...</span>sourceSelectedKeys<span class='token punctuation'>,</span> <span class='token spread operator'>...</span>targetSelectedKeys<span class='token punctuation'>]</span> <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'sourceSelectedKeys: '</span><span class='token punctuation'>,</span> sourceSelectedKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'targetSelectedKeys: '</span><span class='token punctuation'>,</span> targetSelectedKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>handleScroll</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>direction<span class='token punctuation'>,</span> e</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'direction:'</span><span class='token punctuation'>,</span> direction<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'target:'</span><span class='token punctuation'>,</span> e<span class='token punctuation'>.</span><span class='token property-access'>target</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>handleDisable</span> <span class='token operator'>=</span> <span class='token parameter'>disabled</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> disabled <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function'>render</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> <span class='token punctuation'>{</span> targetKeys<span class='token punctuation'>,</span> selectedKeys<span class='token punctuation'>,</span> disabled <span class='token punctuation'>}</span> <span class='token operator'>=</span> <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>state</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span></span><span class='token punctuation'>></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Transfer</span></span><br />          <span class='token attr-name'>dataSource</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>mockData<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>titles</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><span class='token string'>'Source'</span><span class='token punctuation'>,</span> <span class='token string'>'Target'</span><span class='token punctuation'>]</span><span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>targetKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>targetKeys<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>selectedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>selectedKeys<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>handleChange</span><span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>onSelectChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>handleSelectChange</span><span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>onScroll</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>handleScroll</span><span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>render</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>disabled</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>disabled<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>oneWay</span><br />          <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span> <span class='token literal-property property'>marginBottom</span><span class='token operator'>:</span> <span class='token number'>16</span> <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><br />        <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Switch</span></span><br />          <span class='token attr-name'>unCheckedChildren</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>disabled<span class='token punctuation'>'</span></span><br />          <span class='token attr-name'>checkedChildren</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>disabled<span class='token punctuation'>'</span></span><br />          <span class='token attr-name'>checked</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>disabled<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>handleDisable</span><span class='token punctuation'>}</span></span><br />        <span class='token punctuation'>/></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span></span><span class='token punctuation'>></span></span><br />    <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>App</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo2() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n  var _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n  var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n  var _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = (0, _getPrototypeOf2.default)(Derived), result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct)\n      return false;\n    if (Reflect.construct.sham)\n      return false;\n    if (typeof Proxy === \"function\")\n      return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n      }));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  var App = /* @__PURE__ */ function(_React$Component) {\n    (0, _inherits2.default)(App2, _React$Component);\n    var _super = _createSuper(App2);\n    function App2() {\n      var _this;\n      (0, _classCallCheck2.default)(this, App2);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n        mockData: [],\n        targetKeys: []\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"getMock\", function() {\n        var targetKeys = [];\n        var mockData = [];\n        for (var i = 0; i < 20; i++) {\n          var data = {\n            key: i.toString(),\n            title: \"content\".concat(i + 1),\n            description: \"description of content\".concat(i + 1),\n            chosen: Math.random() * 2 > 1\n          };\n          if (data.chosen) {\n            targetKeys.push(data.key);\n          }\n          mockData.push(data);\n        }\n        _this.setState({\n          mockData,\n          targetKeys\n        });\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"filterOption\", function(inputValue, option) {\n        return option.description.indexOf(inputValue) > -1;\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleChange\", function(targetKeys) {\n        _this.setState({\n          targetKeys\n        });\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleSearch\", function(dir, value) {\n        console.log(\"search:\", dir, value);\n      });\n      return _this;\n    }\n    (0, _createClass2.default)(App2, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.getMock();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return /* @__PURE__ */ React.createElement(_mui.Transfer, {\n          listStyle: {\n            height: \"304px\"\n          },\n          dataSource: this.state.mockData,\n          showSearch: true,\n          filterOption: this.filterOption,\n          targetKeys: this.state.targetKeys,\n          onChange: this.handleChange,\n          onSearch: this.handleSearch,\n          render: function render2(item) {\n            return item.title;\n          },\n          footer: function footer() {\n            return /* @__PURE__ */ React.createElement(\"div\", {\n              style: {\n                textAlign: \"right\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 11\n              }\n            }, /* @__PURE__ */ React.createElement(_mui.Button, {\n              type: \"primary\",\n              size: \"small\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 13\n              }\n            }, \"\\u64CD\\u4F5C\\u9879\"));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }\n        });\n      }\n    }]);\n    return App2;\n  }(React.Component);\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"Search\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#Search'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>Search</h2><p>Transfer with a search box.</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Transfer</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>Button</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>class</span> <span class='token class-name'>App</span> <span class='token keyword'>extends</span> <span class='token class-name'>React<span class='token punctuation'>.</span>Component</span> <span class='token punctuation'>{</span><br />  state <span class='token operator'>=</span> <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>mockData</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>targetKeys</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function'>componentDidMount</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>getMock</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br /><br />  <span class='token function-variable function'>getMock</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> targetKeys <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> mockData <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> <span class='token number'>20</span><span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      <span class='token keyword'>const</span> data <span class='token operator'>=</span> <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> i<span class='token punctuation'>.</span><span class='token method function property-access'>toString</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>description</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>description of content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>chosen</span><span class='token operator'>:</span> <span class='token known-class-name class-name'>Math</span><span class='token punctuation'>.</span><span class='token method function property-access'>random</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token operator'>*</span> <span class='token number'>2</span> <span class='token operator'>></span> <span class='token number'>1</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />      <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>data<span class='token punctuation'>.</span><span class='token property-access'>chosen</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />        targetKeys<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span>data<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><br />      mockData<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span>data<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> mockData<span class='token punctuation'>,</span> targetKeys <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>filterOption</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>inputValue<span class='token punctuation'>,</span> option</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> option<span class='token punctuation'>.</span><span class='token property-access'>description</span><span class='token punctuation'>.</span><span class='token method function property-access'>indexOf</span><span class='token punctuation'>(</span>inputValue<span class='token punctuation'>)</span> <span class='token operator'>></span> <span class='token operator'>-</span><span class='token number'>1</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>handleChange</span> <span class='token operator'>=</span> <span class='token parameter'>targetKeys</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> targetKeys <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>handleSearch</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>dir<span class='token punctuation'>,</span> value</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'search:'</span><span class='token punctuation'>,</span> dir<span class='token punctuation'>,</span> value<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function'>render</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Transfer</span></span><br />        <span class='token attr-name'>listStyle</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span> <span class='token literal-property property'>height</span><span class='token operator'>:</span> <span class='token string'>'304px'</span> <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>dataSource</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>state</span><span class='token punctuation'>.</span><span class='token property-access'>mockData</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>showSearch</span><br />        <span class='token attr-name'>filterOption</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>filterOption</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>targetKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>state</span><span class='token punctuation'>.</span><span class='token property-access'>targetKeys</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>handleChange</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>onSearch</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>handleSearch</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>render</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>footer</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>(</span><br />          <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span> <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span> <span class='token literal-property property'>textAlign</span><span class='token operator'>:</span> <span class='token string'>'right'</span> <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><span class='token punctuation'>></span></span><br />            <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Button</span></span> <span class='token attr-name'>type</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>primary<span class='token punctuation'>'</span></span> <span class='token attr-name'>size</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>small<span class='token punctuation'>'</span></span><span class='token punctuation'>></span></span><br />              \\u64CD\\u4F5C\\u9879<br />            <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span><span class='token class-name'>Button</span></span><span class='token punctuation'>></span></span><br />          <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />        <span class='token punctuation'>)</span><span class='token punctuation'>}</span></span><br />      <span class='token punctuation'>/></span></span><br />    <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>App</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo3() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n  var _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n  var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n  var _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = (0, _getPrototypeOf2.default)(Derived), result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct)\n      return false;\n    if (Reflect.construct.sham)\n      return false;\n    if (typeof Proxy === \"function\")\n      return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n      }));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  var App = /* @__PURE__ */ function(_React$Component) {\n    (0, _inherits2.default)(App2, _React$Component);\n    var _super = _createSuper(App2);\n    function App2() {\n      var _this;\n      (0, _classCallCheck2.default)(this, App2);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n        mockData: [],\n        targetKeys: []\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"getMock\", function() {\n        var targetKeys = [];\n        var mockData = [];\n        for (var i = 0; i < 20; i++) {\n          var data = {\n            key: i.toString(),\n            title: \"content\".concat(i + 1),\n            description: \"description of content\".concat(i + 1),\n            chosen: Math.random() * 2 > 1\n          };\n          if (data.chosen) {\n            targetKeys.push(data.key);\n          }\n          mockData.push(data);\n        }\n        _this.setState({\n          mockData,\n          targetKeys\n        });\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"handleChange\", function(targetKeys, direction, moveKeys) {\n        console.log(targetKeys, direction, moveKeys);\n        _this.setState({\n          targetKeys\n        });\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"renderItem\", function(item) {\n        var customLabel = /* @__PURE__ */ React.createElement(\"span\", {\n          className: \"custom-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 7\n          }\n        }, item.title, \" - \", item.description);\n        return {\n          label: customLabel,\n          value: item.title\n        };\n      });\n      return _this;\n    }\n    (0, _createClass2.default)(App2, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.getMock();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return /* @__PURE__ */ React.createElement(_mui.Transfer, {\n          dataSource: this.state.mockData,\n          listStyle: {\n            width: 300,\n            height: 300\n          },\n          targetKeys: this.state.targetKeys,\n          onChange: this.handleChange,\n          render: this.renderItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }\n        });\n      }\n    }]);\n    return App2;\n  }(React.Component);\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"Custom datasource\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#Custom datasource'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>Custom datasource</h2><p>Custom each Transfer Item, and in this way you can render a complex datasource.</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Transfer</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>class</span> <span class='token class-name'>App</span> <span class='token keyword'>extends</span> <span class='token class-name'>React<span class='token punctuation'>.</span>Component</span> <span class='token punctuation'>{</span><br />  state <span class='token operator'>=</span> <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>mockData</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>targetKeys</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function'>componentDidMount</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>getMock</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br /><br />  <span class='token function-variable function'>getMock</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> targetKeys <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> mockData <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> <span class='token number'>20</span><span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      <span class='token keyword'>const</span> data <span class='token operator'>=</span> <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> i<span class='token punctuation'>.</span><span class='token method function property-access'>toString</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>description</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>description of content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>chosen</span><span class='token operator'>:</span> <span class='token known-class-name class-name'>Math</span><span class='token punctuation'>.</span><span class='token method function property-access'>random</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token operator'>*</span> <span class='token number'>2</span> <span class='token operator'>></span> <span class='token number'>1</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />      <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>data<span class='token punctuation'>.</span><span class='token property-access'>chosen</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />        targetKeys<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span>data<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><br />      mockData<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span>data<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> mockData<span class='token punctuation'>,</span> targetKeys <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>handleChange</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>targetKeys<span class='token punctuation'>,</span> direction<span class='token punctuation'>,</span> moveKeys</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span>targetKeys<span class='token punctuation'>,</span> direction<span class='token punctuation'>,</span> moveKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> targetKeys <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>renderItem</span> <span class='token operator'>=</span> <span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> customLabel <span class='token operator'>=</span> <span class='token punctuation'>(</span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>span</span> <span class='token attr-name'>className</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>custom-item<span class='token punctuation'>'</span></span><span class='token punctuation'>></span></span><br />        <span class='token punctuation'>{</span>item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>}</span> <span class='token operator'>-</span> <span class='token punctuation'>{</span>item<span class='token punctuation'>.</span><span class='token property-access'>description</span><span class='token punctuation'>}</span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>span</span><span class='token punctuation'>></span></span><br />    <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />    <span class='token keyword control-flow'>return</span> <span class='token punctuation'>{</span><br />      <span class='token literal-property property'>label</span><span class='token operator'>:</span> customLabel<span class='token punctuation'>,</span> <span class='token comment'>// for displayed item</span><br />      <span class='token literal-property property'>value</span><span class='token operator'>:</span> item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>,</span> <span class='token comment'>// for title and filter matching</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function'>render</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Transfer</span></span><br />        <span class='token attr-name'>dataSource</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>state</span><span class='token punctuation'>.</span><span class='token property-access'>mockData</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>listStyle</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span><br />          <span class='token literal-property property'>width</span><span class='token operator'>:</span> <span class='token number'>300</span><span class='token punctuation'>,</span><br />          <span class='token literal-property property'>height</span><span class='token operator'>:</span> <span class='token number'>300</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>targetKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>state</span><span class='token punctuation'>.</span><span class='token property-access'>targetKeys</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>handleChange</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>render</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>renderItem</span><span class='token punctuation'>}</span></span><br />      <span class='token punctuation'>/></span></span><br />    <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>App</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo4() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  var App = function App2() {\n    var _React$useState = React.useState(false), _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2), oneWay = _React$useState2[0], setOneWay = _React$useState2[1];\n    var _React$useState3 = React.useState([]), _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2), mockData = _React$useState4[0], setMockData = _React$useState4[1];\n    var _React$useState5 = React.useState([]), _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2), targetKeys = _React$useState6[0], setTargetKeys = _React$useState6[1];\n    React.useEffect(function() {\n      var newTargetKeys = [];\n      var newMockData = [];\n      for (var i = 0; i < 2e3; i++) {\n        var data = {\n          key: i.toString(),\n          title: \"content\".concat(i + 1),\n          description: \"description of content\".concat(i + 1),\n          chosen: Math.random() * 2 > 1\n        };\n        if (data.chosen) {\n          newTargetKeys.push(data.key);\n        }\n        newMockData.push(data);\n      }\n      setTargetKeys(newTargetKeys);\n      setMockData(newMockData);\n    }, []);\n    var onChange = function onChange2(newTargetKeys, direction, moveKeys) {\n      console.log(newTargetKeys, direction, moveKeys);\n      setTargetKeys(newTargetKeys);\n    };\n    return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(_mui.Transfer, {\n      dataSource: mockData,\n      targetKeys,\n      onChange,\n      render: function render(item) {\n        return item.title;\n      },\n      oneWay,\n      pagination: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }), /* @__PURE__ */ React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }), /* @__PURE__ */ React.createElement(_mui.Switch, {\n      unCheckedChildren: \"one way\",\n      checkedChildren: \"one way\",\n      checked: oneWay,\n      onChange: setOneWay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }));\n  };\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"Pagination\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#Pagination'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>Pagination</h2><p>large count of items with pagination.</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Transfer</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>Switch</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>App</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>oneWay<span class='token punctuation'>,</span> setOneWay<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token method function property-access'>useState</span><span class='token punctuation'>(</span><span class='token boolean'>false</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>mockData<span class='token punctuation'>,</span> setMockData<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token method function property-access'>useState</span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>targetKeys<span class='token punctuation'>,</span> setTargetKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token method function property-access'>useState</span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />  <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token method function property-access'>useEffect</span><span class='token punctuation'>(</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> newTargetKeys <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> newMockData <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> <span class='token number'>2000</span><span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      <span class='token keyword'>const</span> data <span class='token operator'>=</span> <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> i<span class='token punctuation'>.</span><span class='token method function property-access'>toString</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>description</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>description of content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>chosen</span><span class='token operator'>:</span> <span class='token known-class-name class-name'>Math</span><span class='token punctuation'>.</span><span class='token method function property-access'>random</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token operator'>*</span> <span class='token number'>2</span> <span class='token operator'>></span> <span class='token number'>1</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />      <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>data<span class='token punctuation'>.</span><span class='token property-access'>chosen</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />        newTargetKeys<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span>data<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><br />      newMockData<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span>data<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><br /><br />    <span class='token function'>setTargetKeys</span><span class='token punctuation'>(</span>newTargetKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setMockData</span><span class='token punctuation'>(</span>newMockData<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onChange</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>newTargetKeys<span class='token punctuation'>,</span> direction<span class='token punctuation'>,</span> moveKeys</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span>newTargetKeys<span class='token punctuation'>,</span> direction<span class='token punctuation'>,</span> moveKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setTargetKeys</span><span class='token punctuation'>(</span>newTargetKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span></span><span class='token punctuation'>></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Transfer</span></span><br />        <span class='token attr-name'>dataSource</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>mockData<span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>targetKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>targetKeys<span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onChange<span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>render</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>oneWay</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>oneWay<span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>pagination</span><br />      <span class='token punctuation'>/></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>br</span> <span class='token punctuation'>/></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Switch</span></span><br />        <span class='token attr-name'>unCheckedChildren</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>one way<span class='token punctuation'>'</span></span><br />        <span class='token attr-name'>checkedChildren</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>one way<span class='token punctuation'>'</span></span><br />        <span class='token attr-name'>checked</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>oneWay<span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>setOneWay<span class='token punctuation'>}</span></span><br />      <span class='token punctuation'>/></span></span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span></span><span class='token punctuation'>></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>App</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo5() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _typeof = require(\"@babel/runtime/helpers/typeof\");\n  var _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n  var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n  var _react = _interopRequireWildcard(require(\"react\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\")\n      return null;\n    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();\n    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {\n      return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n  }\n  function _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n      return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n      return { default: obj };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n  var mockData = [];\n  for (var i = 0; i < 20; i++) {\n    mockData.push({\n      key: i.toString(),\n      title: \"content\".concat(i + 1),\n      description: \"description of content\".concat(i + 1),\n      disabled: i % 3 < 1\n    });\n  }\n  var initialTargetKeys = mockData.filter(function(item) {\n    return +item.key > 10;\n  }).map(function(item) {\n    return item.key;\n  });\n  var App = function App2() {\n    var _useState = (0, _react.useState)(initialTargetKeys), _useState2 = (0, _slicedToArray2.default)(_useState, 2), targetKeys = _useState2[0], setTargetKeys = _useState2[1];\n    var _useState3 = (0, _react.useState)([]), _useState4 = (0, _slicedToArray2.default)(_useState3, 2), selectedKeys = _useState4[0], setSelectedKeys = _useState4[1];\n    var onChange = function onChange2(nextTargetKeys, direction, moveKeys) {\n      console.log(\"targetKeys:\", nextTargetKeys);\n      console.log(\"direction:\", direction);\n      console.log(\"moveKeys:\", moveKeys);\n      setTargetKeys(nextTargetKeys);\n    };\n    var onSelectChange = function onSelectChange2(sourceSelectedKeys, targetSelectedKeys) {\n      console.log(\"sourceSelectedKeys:\", sourceSelectedKeys);\n      console.log(\"targetSelectedKeys:\", targetSelectedKeys);\n      setSelectedKeys([].concat((0, _toConsumableArray2.default)(sourceSelectedKeys), (0, _toConsumableArray2.default)(targetSelectedKeys)));\n    };\n    var onScroll = function onScroll2(direction, e) {\n      console.log(\"direction:\", direction);\n      console.log(\"target:\", e.target);\n    };\n    return /* @__PURE__ */ _react.default.createElement(_mui.Transfer, {\n      dataSource: mockData,\n      titles: [\"Source\", \"Target\"],\n      operations: [\"To right\", \"To left\"],\n      targetKeys,\n      selectedKeys,\n      onChange,\n      onSelectChange,\n      onScroll,\n      render: function render(item) {\n        return item.title;\n      },\n      simple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    });\n  };\n  var __export = /* @__PURE__ */ _react.default.createElement(CodeBlockWrapper, {\n    id: \"Simple\"\n  }, /* @__PURE__ */ _react.default.createElement(CellDescription, null, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#Simple'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>Simple</h2><p>Simple</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellDemo, null, /* @__PURE__ */ _react.default.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellCode, null, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token maybe-class-name'>React</span><span class='token punctuation'>,</span> <span class='token punctuation'>{</span> useState <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'react'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Transfer</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> mockData <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> <span class='token number'>20</span><span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />  mockData<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> i<span class='token punctuation'>.</span><span class='token method function property-access'>toString</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>description</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>description of content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> i <span class='token operator'>%</span> <span class='token number'>3</span> <span class='token operator'>&lt;</span> <span class='token number'>1</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token keyword'>const</span> initialTargetKeys <span class='token operator'>=</span> mockData<span class='token punctuation'>.</span><span class='token method function property-access'>filter</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token operator'>+</span>item<span class='token punctuation'>.</span><span class='token property-access'>key</span> <span class='token operator'>></span> <span class='token number'>10</span><span class='token punctuation'>)</span><span class='token punctuation'>.</span><span class='token method function property-access'>map</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> item<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>App</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>targetKeys<span class='token punctuation'>,</span> setTargetKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span>initialTargetKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>selectedKeys<span class='token punctuation'>,</span> setSelectedKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onChange</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>nextTargetKeys<span class='token punctuation'>,</span> direction<span class='token punctuation'>,</span> moveKeys</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'targetKeys:'</span><span class='token punctuation'>,</span> nextTargetKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'direction:'</span><span class='token punctuation'>,</span> direction<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'moveKeys:'</span><span class='token punctuation'>,</span> moveKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setTargetKeys</span><span class='token punctuation'>(</span>nextTargetKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSelectChange</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>sourceSelectedKeys<span class='token punctuation'>,</span> targetSelectedKeys</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'sourceSelectedKeys:'</span><span class='token punctuation'>,</span> sourceSelectedKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'targetSelectedKeys:'</span><span class='token punctuation'>,</span> targetSelectedKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setSelectedKeys</span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token spread operator'>...</span>sourceSelectedKeys<span class='token punctuation'>,</span> <span class='token spread operator'>...</span>targetSelectedKeys<span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onScroll</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>direction<span class='token punctuation'>,</span> e</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'direction:'</span><span class='token punctuation'>,</span> direction<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'target:'</span><span class='token punctuation'>,</span> e<span class='token punctuation'>.</span><span class='token property-access'>target</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Transfer</span></span><br />      <span class='token attr-name'>dataSource</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>mockData<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>titles</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><span class='token string'>'Source'</span><span class='token punctuation'>,</span> <span class='token string'>'Target'</span><span class='token punctuation'>]</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>operations</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><span class='token string'>'To right'</span><span class='token punctuation'>,</span> <span class='token string'>'To left'</span><span class='token punctuation'>]</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>targetKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>targetKeys<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>selectedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>selectedKeys<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onChange<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onSelectChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSelectChange<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onScroll</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onScroll<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>render</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>simple</span><br />    <span class='token punctuation'>/></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>App</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo6() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n  var _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n  var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n  var _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n  var _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n  var _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _mui = require(\"@m-design/mui\");\n  var _difference = _interopRequireDefault(require(\"lodash/difference\"));\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  var _excluded = [\"leftColumns\", \"rightColumns\"];\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = (0, _getPrototypeOf2.default)(Derived), result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct)\n      return false;\n    if (Reflect.construct.sham)\n      return false;\n    if (typeof Proxy === \"function\")\n      return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n      }));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  var TableTransfer = function TableTransfer2(_ref) {\n    var leftColumns = _ref.leftColumns, rightColumns = _ref.rightColumns, restProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n    return /* @__PURE__ */ React.createElement(_mui.Transfer, (0, _extends2.default)({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 3\n      }\n    }), function(_ref2) {\n      var direction = _ref2.direction, filteredItems = _ref2.filteredItems, onItemSelectAll = _ref2.onItemSelectAll, onItemSelect = _ref2.onItemSelect, listSelectedKeys = _ref2.selectedKeys, listDisabled = _ref2.disabled;\n      var columns = direction === \"left\" ? leftColumns : rightColumns;\n      var rowSelection = {\n        getCheckboxProps: function getCheckboxProps(item) {\n          return {\n            disabled: listDisabled || item.disabled\n          };\n        },\n        onSelectAll: function onSelectAll(selected, selectedRows) {\n          var treeSelectedKeys = selectedRows.filter(function(item) {\n            return !item.disabled;\n          }).map(function(_ref3) {\n            var key = _ref3.key;\n            return key;\n          });\n          var diffKeys = selected ? (0, _difference.default)(treeSelectedKeys, listSelectedKeys) : (0, _difference.default)(listSelectedKeys, treeSelectedKeys);\n          onItemSelectAll(diffKeys, selected);\n        },\n        onSelect: function onSelect(_ref4, selected) {\n          var key = _ref4.key;\n          onItemSelect(key, selected);\n        },\n        selectedRowKeys: listSelectedKeys\n      };\n      return /* @__PURE__ */ React.createElement(_mui.Table, {\n        rowSelection,\n        columns,\n        dataSource: filteredItems,\n        size: \"small\",\n        style: {\n          pointerEvents: listDisabled ? \"none\" : null\n        },\n        onRow: function onRow(_ref5) {\n          var key = _ref5.key, itemDisabled = _ref5.disabled;\n          return {\n            onClick: function onClick() {\n              if (itemDisabled || listDisabled)\n                return;\n              onItemSelect(key, !listSelectedKeys.includes(key));\n            }\n          };\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      });\n    });\n  };\n  var mockTags = [\"cat\", \"dog\", \"bird\"];\n  var mockData = [];\n  for (var i = 0; i < 20; i++) {\n    mockData.push({\n      key: i.toString(),\n      title: \"content\".concat(i + 1),\n      description: \"description of content\".concat(i + 1),\n      disabled: i % 4 === 0,\n      tag: mockTags[i % 3]\n    });\n  }\n  var originTargetKeys = mockData.filter(function(item) {\n    return +item.key % 3 > 1;\n  }).map(function(item) {\n    return item.key;\n  });\n  var leftTableColumns = [{\n    dataIndex: \"title\",\n    title: \"Name\"\n  }, {\n    dataIndex: \"tag\",\n    title: \"Tag\",\n    render: function render(tag) {\n      return /* @__PURE__ */ React.createElement(_mui.Tag, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 20\n        }\n      }, tag);\n    }\n  }, {\n    dataIndex: \"description\",\n    title: \"Description\"\n  }];\n  var rightTableColumns = [{\n    dataIndex: \"title\",\n    title: \"Name\"\n  }];\n  var App = /* @__PURE__ */ function(_React$Component) {\n    (0, _inherits2.default)(App2, _React$Component);\n    var _super = _createSuper(App2);\n    function App2() {\n      var _this;\n      (0, _classCallCheck2.default)(this, App2);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n        targetKeys: originTargetKeys,\n        disabled: false,\n        showSearch: false\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onChange\", function(nextTargetKeys) {\n        _this.setState({\n          targetKeys: nextTargetKeys\n        });\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"triggerDisable\", function(disabled) {\n        _this.setState({\n          disabled\n        });\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"triggerShowSearch\", function(showSearch) {\n        _this.setState({\n          showSearch\n        });\n      });\n      return _this;\n    }\n    (0, _createClass2.default)(App2, [{\n      key: \"render\",\n      value: function render() {\n        var _this$state = this.state, targetKeys = _this$state.targetKeys, disabled = _this$state.disabled, showSearch = _this$state.showSearch;\n        return /* @__PURE__ */ React.createElement(\"div\", {\n          id: \"components-transfer-demo-table-transfer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }\n        }, /* @__PURE__ */ React.createElement(TableTransfer, {\n          dataSource: mockData,\n          targetKeys,\n          disabled,\n          showSearch,\n          onChange: this.onChange,\n          filterOption: function filterOption(inputValue, item) {\n            return item.title.indexOf(inputValue) !== -1 || item.tag.indexOf(inputValue) !== -1;\n          },\n          leftColumns: leftTableColumns,\n          rightColumns: rightTableColumns,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 9\n          }\n        }), /* @__PURE__ */ React.createElement(_mui.Switch, {\n          unCheckedChildren: \"disabled\",\n          checkedChildren: \"disabled\",\n          checked: disabled,\n          onChange: this.triggerDisable,\n          style: {\n            marginTop: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 9\n          }\n        }), /* @__PURE__ */ React.createElement(_mui.Switch, {\n          unCheckedChildren: \"showSearch\",\n          checkedChildren: \"showSearch\",\n          checked: showSearch,\n          onChange: this.triggerShowSearch,\n          style: {\n            marginTop: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }\n        }));\n      }\n    }]);\n    return App2;\n  }(React.Component);\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"Table Transfer\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#Table Transfer'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>Table Transfer</h2><p>Customize render list with Table component.</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, {\n    cssCode: \"\\n#components-transfer-demo-table-transfer .m-design-table td { background: transparent;\\n}\\n#components-transfer-demo-table-transfer .m-design-transfer-customize-list .m-design-table-wrapper .m-design-table-small .m-design-table-selection-column { width: 46px;\\n}\\n\"\n  }, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Transfer</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>Switch</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>Table</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>Tag</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'>difference</span> <span class='token keyword module'>from</span> <span class='token string'>'lodash/difference'</span><span class='token punctuation'>;</span><br /><br /><span class='token comment'>// Customize Table Transfer</span><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>TableTransfer</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token punctuation'>{</span> leftColumns<span class='token punctuation'>,</span> rightColumns<span class='token punctuation'>,</span> <span class='token spread operator'>...</span>restProps <span class='token punctuation'>}</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>(</span><br />  <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Transfer</span></span> <span class='token spread'><span class='token punctuation'>{</span><span class='token spread operator'>...</span>restProps<span class='token punctuation'>}</span></span><span class='token punctuation'>></span></span><br />    <span class='token punctuation'>{</span><span class='token punctuation'>(</span><span class='token parameter'><span class='token punctuation'>{</span><br />      direction<span class='token punctuation'>,</span><br />      filteredItems<span class='token punctuation'>,</span><br />      onItemSelectAll<span class='token punctuation'>,</span><br />      onItemSelect<span class='token punctuation'>,</span><br />      <span class='token literal-property property'>selectedKeys</span><span class='token operator'>:</span> listSelectedKeys<span class='token punctuation'>,</span><br />      <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> listDisabled<span class='token punctuation'>,</span><br />    <span class='token punctuation'>}</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />      <span class='token keyword'>const</span> columns <span class='token operator'>=</span> direction <span class='token operator'>===</span> <span class='token string'>'left'</span> <span class='token operator'>?</span> leftColumns <span class='token operator'>:</span> rightColumns<span class='token punctuation'>;</span><br /><br />      <span class='token keyword'>const</span> rowSelection <span class='token operator'>=</span> <span class='token punctuation'>{</span><br />        <span class='token function-variable function'>getCheckboxProps</span><span class='token operator'>:</span> <span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>(</span><span class='token punctuation'>{</span> <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> listDisabled <span class='token operator'>||</span> item<span class='token punctuation'>.</span><span class='token property-access'>disabled</span> <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />        <span class='token function'>onSelectAll</span><span class='token punctuation'>(</span><span class='token parameter'>selected<span class='token punctuation'>,</span> selectedRows</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />          <span class='token keyword'>const</span> treeSelectedKeys <span class='token operator'>=</span> selectedRows<br />            <span class='token punctuation'>.</span><span class='token method function property-access'>filter</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token operator'>!</span>item<span class='token punctuation'>.</span><span class='token property-access'>disabled</span><span class='token punctuation'>)</span><br />            <span class='token punctuation'>.</span><span class='token method function property-access'>map</span><span class='token punctuation'>(</span><span class='token punctuation'>(</span><span class='token parameter'><span class='token punctuation'>{</span> key <span class='token punctuation'>}</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> key<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />          <span class='token keyword'>const</span> diffKeys <span class='token operator'>=</span> selected<br />            <span class='token operator'>?</span> <span class='token function'>difference</span><span class='token punctuation'>(</span>treeSelectedKeys<span class='token punctuation'>,</span> listSelectedKeys<span class='token punctuation'>)</span><br />            <span class='token operator'>:</span> <span class='token function'>difference</span><span class='token punctuation'>(</span>listSelectedKeys<span class='token punctuation'>,</span> treeSelectedKeys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />          <span class='token function'>onItemSelectAll</span><span class='token punctuation'>(</span>diffKeys<span class='token punctuation'>,</span> selected<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token function'>onSelect</span><span class='token punctuation'>(</span><span class='token parameter'><span class='token punctuation'>{</span> key <span class='token punctuation'>}</span><span class='token punctuation'>,</span> selected</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />          <span class='token function'>onItemSelect</span><span class='token punctuation'>(</span>key<span class='token punctuation'>,</span> selected<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>selectedRowKeys</span><span class='token operator'>:</span> listSelectedKeys<span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />      <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Table</span></span><br />          <span class='token attr-name'>rowSelection</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>rowSelection<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>columns</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>columns<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>dataSource</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>filteredItems<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>size</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>small<span class='token punctuation'>'</span></span><br />          <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span> <span class='token literal-property property'>pointerEvents</span><span class='token operator'>:</span> listDisabled <span class='token operator'>?</span> <span class='token string'>'none'</span> <span class='token operator'>:</span> <span class='token keyword null nil'>null</span> <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>onRow</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>(</span><span class='token parameter'><span class='token punctuation'>{</span> key<span class='token punctuation'>,</span> <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> itemDisabled <span class='token punctuation'>}</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>(</span><span class='token punctuation'>{</span><br />            <span class='token function-variable function'>onClick</span><span class='token operator'>:</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />              <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>itemDisabled <span class='token operator'>||</span> listDisabled<span class='token punctuation'>)</span> <span class='token keyword control-flow'>return</span><span class='token punctuation'>;</span><br />              <span class='token function'>onItemSelect</span><span class='token punctuation'>(</span>key<span class='token punctuation'>,</span> <span class='token operator'>!</span>listSelectedKeys<span class='token punctuation'>.</span><span class='token method function property-access'>includes</span><span class='token punctuation'>(</span>key<span class='token punctuation'>)</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />            <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>}</span></span><br />        <span class='token punctuation'>/></span></span><br />      <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>}</span><br />  <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span><span class='token class-name'>Transfer</span></span><span class='token punctuation'>></span></span><br /><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> mockTags <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token string'>'cat'</span><span class='token punctuation'>,</span> <span class='token string'>'dog'</span><span class='token punctuation'>,</span> <span class='token string'>'bird'</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> mockData <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> <span class='token number'>20</span><span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />  mockData<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> i<span class='token punctuation'>.</span><span class='token method function property-access'>toString</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>description</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token string'>description of content</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> i <span class='token operator'>%</span> <span class='token number'>4</span> <span class='token operator'>===</span> <span class='token number'>0</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>tag</span><span class='token operator'>:</span> mockTags<span class='token punctuation'>[</span>i <span class='token operator'>%</span> <span class='token number'>3</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token keyword'>const</span> originTargetKeys <span class='token operator'>=</span> mockData<span class='token punctuation'>.</span><span class='token method function property-access'>filter</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token operator'>+</span>item<span class='token punctuation'>.</span><span class='token property-access'>key</span> <span class='token operator'>%</span> <span class='token number'>3</span> <span class='token operator'>></span> <span class='token number'>1</span><span class='token punctuation'>)</span><span class='token punctuation'>.</span><span class='token method function property-access'>map</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> item<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> leftTableColumns <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>dataIndex</span><span class='token operator'>:</span> <span class='token string'>'title'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Name'</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>dataIndex</span><span class='token operator'>:</span> <span class='token string'>'tag'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Tag'</span><span class='token punctuation'>,</span><br />    <span class='token function-variable function'>render</span><span class='token operator'>:</span> <span class='token parameter'>tag</span> <span class='token arrow operator'>=></span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tag</span></span><span class='token punctuation'>></span></span><span class='token punctuation'>{</span>tag<span class='token punctuation'>}</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span><span class='token class-name'>Tag</span></span><span class='token punctuation'>></span></span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>dataIndex</span><span class='token operator'>:</span> <span class='token string'>'description'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Description'</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> rightTableColumns <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>dataIndex</span><span class='token operator'>:</span> <span class='token string'>'title'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Name'</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>class</span> <span class='token class-name'>App</span> <span class='token keyword'>extends</span> <span class='token class-name'>React<span class='token punctuation'>.</span>Component</span> <span class='token punctuation'>{</span><br />  state <span class='token operator'>=</span> <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>targetKeys</span><span class='token operator'>:</span> originTargetKeys<span class='token punctuation'>,</span><br />    <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> <span class='token boolean'>false</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>showSearch</span><span class='token operator'>:</span> <span class='token boolean'>false</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>onChange</span> <span class='token operator'>=</span> <span class='token parameter'>nextTargetKeys</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> <span class='token literal-property property'>targetKeys</span><span class='token operator'>:</span> nextTargetKeys <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>triggerDisable</span> <span class='token operator'>=</span> <span class='token parameter'>disabled</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> disabled <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>triggerShowSearch</span> <span class='token operator'>=</span> <span class='token parameter'>showSearch</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> showSearch <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function'>render</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> <span class='token punctuation'>{</span> targetKeys<span class='token punctuation'>,</span> disabled<span class='token punctuation'>,</span> showSearch <span class='token punctuation'>}</span> <span class='token operator'>=</span> <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>state</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span> <span class='token attr-name'>id</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>components-transfer-demo-table-transfer<span class='token punctuation'>'</span></span><span class='token punctuation'>></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>TableTransfer</span></span><br />          <span class='token attr-name'>dataSource</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>mockData<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>targetKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>targetKeys<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>disabled</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>disabled<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>showSearch</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>showSearch<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>onChange</span><span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>filterOption</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>(</span><span class='token parameter'>inputValue<span class='token punctuation'>,</span> item</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span><br />            item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>.</span><span class='token method function property-access'>indexOf</span><span class='token punctuation'>(</span>inputValue<span class='token punctuation'>)</span> <span class='token operator'>!==</span> <span class='token operator'>-</span><span class='token number'>1</span> <span class='token operator'>||</span> item<span class='token punctuation'>.</span><span class='token property-access'>tag</span><span class='token punctuation'>.</span><span class='token method function property-access'>indexOf</span><span class='token punctuation'>(</span>inputValue<span class='token punctuation'>)</span> <span class='token operator'>!==</span> <span class='token operator'>-</span><span class='token number'>1</span><br />          <span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>leftColumns</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>leftTableColumns<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>rightColumns</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>rightTableColumns<span class='token punctuation'>}</span></span><br />        <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Switch</span></span><br />          <span class='token attr-name'>unCheckedChildren</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>disabled<span class='token punctuation'>'</span></span><br />          <span class='token attr-name'>checkedChildren</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>disabled<span class='token punctuation'>'</span></span><br />          <span class='token attr-name'>checked</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>disabled<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>triggerDisable</span><span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span> <span class='token literal-property property'>marginTop</span><span class='token operator'>:</span> <span class='token number'>16</span> <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><br />        <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Switch</span></span><br />          <span class='token attr-name'>unCheckedChildren</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>showSearch<span class='token punctuation'>'</span></span><br />          <span class='token attr-name'>checkedChildren</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>showSearch<span class='token punctuation'>'</span></span><br />          <span class='token attr-name'>checked</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>showSearch<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>triggerShowSearch</span><span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span> <span class='token literal-property property'>marginTop</span><span class='token operator'>:</span> <span class='token number'>16</span> <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><br />        <span class='token punctuation'>/></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />    <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>App</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  }), /* @__PURE__ */ React.createElement(CellCode.Css, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-css'><span class='token selector'><span class='token id'>#components-transfer-demo-table-transfer</span> <span class='token class'>.m-design-table</span> td</span> <span class='token punctuation'>{</span><br />  <span class='token property'>background</span><span class='token punctuation'>:</span> <span class='token color'>transparent</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /><span class='token selector'><span class='token id'>#components-transfer-demo-table-transfer</span><br />  <span class='token class'>.m-design-transfer-customize-list</span><br />  <span class='token class'>.m-design-table-wrapper</span><br />  <span class='token class'>.m-design-table-small</span><br />  <span class='token class'>.m-design-table-selection-column</span></span> <span class='token punctuation'>{</span><br />    <span class='token property'>width</span><span class='token punctuation'>:</span> <span class='token number'>46</span><span class='token unit'>px</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(\"style\", null, \"\\n#components-transfer-demo-table-transfer .m-design-table td {\\n  background: transparent;\\n}\\n#components-transfer-demo-table-transfer\\n  .m-design-transfer-customize-list\\n  .m-design-table-wrapper\\n  .m-design-table-small\\n  .m-design-table-selection-column {\\n    width: 46px;\\n}\\n\")));\n  ;\n  return __export;\n}\nfunction Demo7() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _typeof = require(\"@babel/runtime/helpers/typeof\");\n  var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n  var _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n  var _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n  var _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n  var _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _react = _interopRequireWildcard(require(\"react\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  var _excluded = [\"children\"], _excluded2 = [\"dataSource\", \"targetKeys\"];\n  function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\")\n      return null;\n    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();\n    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {\n      return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n  }\n  function _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n      return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n      return { default: obj };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function(sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), true).forEach(function(key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  var isChecked = function isChecked2(selectedKeys, eventKey) {\n    return selectedKeys.indexOf(eventKey) !== -1;\n  };\n  var generateTree = function generateTree2() {\n    var treeNodes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];\n    var checkedKeys = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n    return treeNodes.map(function(_ref) {\n      var children = _ref.children, props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n      return _objectSpread(_objectSpread({}, props), {}, {\n        disabled: checkedKeys.includes(props.key),\n        children: generateTree2(children, checkedKeys)\n      });\n    });\n  };\n  var TreeTransfer = function TreeTransfer2(_ref2) {\n    var dataSource = _ref2.dataSource, targetKeys = _ref2.targetKeys, restProps = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);\n    var transferDataSource = [];\n    function flatten() {\n      var list = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];\n      list.forEach(function(item) {\n        transferDataSource.push(item);\n        flatten(item.children);\n      });\n    }\n    flatten(dataSource);\n    return /* @__PURE__ */ _react.default.createElement(_mui.Transfer, (0, _extends2.default)({}, restProps, {\n      targetKeys,\n      dataSource: transferDataSource,\n      className: \"tree-transfer\",\n      render: function render(item) {\n        return item.title;\n      },\n      showSelectAll: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }), function(_ref3) {\n      var direction = _ref3.direction, onItemSelect = _ref3.onItemSelect, selectedKeys = _ref3.selectedKeys;\n      if (direction === \"left\") {\n        var checkedKeys = [].concat((0, _toConsumableArray2.default)(selectedKeys), (0, _toConsumableArray2.default)(targetKeys));\n        return /* @__PURE__ */ _react.default.createElement(_mui.Tree, {\n          blockNode: true,\n          checkable: true,\n          checkStrictly: true,\n          defaultExpandAll: true,\n          checkedKeys,\n          treeData: generateTree(dataSource, targetKeys),\n          onCheck: function onCheck(_, _ref4) {\n            var key = _ref4.node.key;\n            onItemSelect(key, !isChecked(checkedKeys, key));\n          },\n          onSelect: function onSelect(_, _ref5) {\n            var key = _ref5.node.key;\n            onItemSelect(key, !isChecked(checkedKeys, key));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        });\n      }\n    });\n  };\n  var treeData = [{\n    key: \"0-0\",\n    title: \"0-0\"\n  }, {\n    key: \"0-1\",\n    title: \"0-1\",\n    children: [{\n      key: \"0-1-0\",\n      title: \"0-1-0\"\n    }, {\n      key: \"0-1-1\",\n      title: \"0-1-1\"\n    }]\n  }, {\n    key: \"0-2\",\n    title: \"0-3\"\n  }];\n  var App = function App2() {\n    var _useState = (0, _react.useState)([]), _useState2 = (0, _slicedToArray2.default)(_useState, 2), targetKeys = _useState2[0], setTargetKeys = _useState2[1];\n    var onChange = function onChange2(keys) {\n      setTargetKeys(keys);\n    };\n    return /* @__PURE__ */ _react.default.createElement(TreeTransfer, {\n      dataSource: treeData,\n      targetKeys,\n      onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }\n    });\n  };\n  var __export = /* @__PURE__ */ _react.default.createElement(CodeBlockWrapper, {\n    id: \"Tree Transfer\"\n  }, /* @__PURE__ */ _react.default.createElement(CellDescription, null, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#Tree Transfer'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>Tree Transfer</h2><p>Customize render list with Tree component.</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellDemo, null, /* @__PURE__ */ _react.default.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellCode, {\n    cssCode: \"\\n.tree-transfer .m-design-transfer-list:first-child { flex: none; width: 50%;\\n}\\n\"\n  }, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token maybe-class-name'>React</span><span class='token punctuation'>,</span> <span class='token punctuation'>{</span> useState <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'react'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Transfer</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token comment'>// Customize Table Transfer</span><br /><span class='token keyword'>const</span> <span class='token function-variable function'>isChecked</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>selectedKeys<span class='token punctuation'>,</span> eventKey</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> selectedKeys<span class='token punctuation'>.</span><span class='token method function property-access'>indexOf</span><span class='token punctuation'>(</span>eventKey<span class='token punctuation'>)</span> <span class='token operator'>!==</span> <span class='token operator'>-</span><span class='token number'>1</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'>generateTree</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>treeNodes <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span> checkedKeys <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span><br />  treeNodes<span class='token punctuation'>.</span><span class='token method function property-access'>map</span><span class='token punctuation'>(</span><span class='token punctuation'>(</span><span class='token parameter'><span class='token punctuation'>{</span> children<span class='token punctuation'>,</span> <span class='token spread operator'>...</span>props <span class='token punctuation'>}</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>(</span><span class='token punctuation'>{</span><br />    <span class='token spread operator'>...</span>props<span class='token punctuation'>,</span><br />    <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> checkedKeys<span class='token punctuation'>.</span><span class='token method function property-access'>includes</span><span class='token punctuation'>(</span>props<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token function'>generateTree</span><span class='token punctuation'>(</span>children<span class='token punctuation'>,</span> checkedKeys<span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>TreeTransfer</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token punctuation'>{</span> dataSource<span class='token punctuation'>,</span> targetKeys<span class='token punctuation'>,</span> <span class='token spread operator'>...</span>restProps <span class='token punctuation'>}</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> transferDataSource <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>function</span> <span class='token function'>flatten</span><span class='token punctuation'>(</span><span class='token parameter'>list <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span></span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    list<span class='token punctuation'>.</span><span class='token method function property-access'>forEach</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />      transferDataSource<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span>item<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      <span class='token function'>flatten</span><span class='token punctuation'>(</span>item<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br />  <span class='token function'>flatten</span><span class='token punctuation'>(</span>dataSource<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Transfer</span></span><br />      <span class='token spread'><span class='token punctuation'>{</span><span class='token spread operator'>...</span>restProps<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>targetKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>targetKeys<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>dataSource</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>transferDataSource<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>className</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>tree-transfer<span class='token punctuation'>'</span></span><br />      <span class='token attr-name'>render</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>showSelectAll</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token boolean'>false</span><span class='token punctuation'>}</span></span><br />    <span class='token punctuation'>></span></span><br />      <span class='token punctuation'>{</span><span class='token punctuation'>(</span><span class='token parameter'><span class='token punctuation'>{</span> direction<span class='token punctuation'>,</span> onItemSelect<span class='token punctuation'>,</span> selectedKeys <span class='token punctuation'>}</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />        <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>direction <span class='token operator'>===</span> <span class='token string'>'left'</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />          <span class='token keyword'>const</span> checkedKeys <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token spread operator'>...</span>selectedKeys<span class='token punctuation'>,</span> <span class='token spread operator'>...</span>targetKeys<span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />          <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />            <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span><br />              <span class='token attr-name'>blockNode</span><br />              <span class='token attr-name'>checkable</span><br />              <span class='token attr-name'>checkStrictly</span><br />              <span class='token attr-name'>defaultExpandAll</span><br />              <span class='token attr-name'>checkedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>checkedKeys<span class='token punctuation'>}</span></span><br />              <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token function'>generateTree</span><span class='token punctuation'>(</span>dataSource<span class='token punctuation'>,</span> targetKeys<span class='token punctuation'>)</span><span class='token punctuation'>}</span></span><br />              <span class='token attr-name'>onCheck</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>(</span><span class='token parameter'>_<span class='token punctuation'>,</span> <span class='token punctuation'>{</span> <span class='token literal-property property'>node</span><span class='token operator'>:</span> <span class='token punctuation'>{</span> key <span class='token punctuation'>}</span> <span class='token punctuation'>}</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />                <span class='token function'>onItemSelect</span><span class='token punctuation'>(</span>key<span class='token punctuation'>,</span> <span class='token operator'>!</span><span class='token function'>isChecked</span><span class='token punctuation'>(</span>checkedKeys<span class='token punctuation'>,</span> key<span class='token punctuation'>)</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />              <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><br />              <span class='token attr-name'>onSelect</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>(</span><span class='token parameter'>_<span class='token punctuation'>,</span> <span class='token punctuation'>{</span> <span class='token literal-property property'>node</span><span class='token operator'>:</span> <span class='token punctuation'>{</span> key <span class='token punctuation'>}</span> <span class='token punctuation'>}</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />                <span class='token function'>onItemSelect</span><span class='token punctuation'>(</span>key<span class='token punctuation'>,</span> <span class='token operator'>!</span><span class='token function'>isChecked</span><span class='token punctuation'>(</span>checkedKeys<span class='token punctuation'>,</span> key<span class='token punctuation'>)</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />              <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><br />            <span class='token punctuation'>/></span></span><br />          <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token punctuation'>}</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>}</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span><span class='token class-name'>Transfer</span></span><span class='token punctuation'>></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-1-0'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-1'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-1-1'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-2'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-3'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>App</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>targetKeys<span class='token punctuation'>,</span> setTargetKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onChange</span> <span class='token operator'>=</span> <span class='token parameter'>keys</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token function'>setTargetKeys</span><span class='token punctuation'>(</span>keys<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />  <span class='token keyword control-flow'>return</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>TreeTransfer</span></span> <span class='token attr-name'>dataSource</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span> <span class='token attr-name'>targetKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>targetKeys<span class='token punctuation'>}</span></span> <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onChange<span class='token punctuation'>}</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>App</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  }), /* @__PURE__ */ _react.default.createElement(CellCode.Css, null, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-css'><span class='token selector'><span class='token class'>.tree-transfer</span> <span class='token class'>.m-design-transfer-list</span><span class='token pseudo-class'>:first-child</span></span> <span class='token punctuation'>{</span><br />  <span class='token property'>flex</span><span class='token punctuation'>:</span> none<span class='token punctuation'>;</span><br />  <span class='token property'>width</span><span class='token punctuation'>:</span> <span class='token number'>50</span><span class='token unit'>%</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ _react.default.createElement(\"style\", null, \"\\n.tree-transfer .m-design-transfer-list:first-child {\\n  flex: none;\\n  width: 50%;\\n}\\n\")));\n  ;\n  return __export;\n}\n;\nclass Component extends React.Component {\n  render() {\n    return React.createElement(\"span\", {\n      className: \"arco-components-wrapper\",\n      style: this.props.style\n    }, React.createElement(Demo0, {\n      key: 0\n    }), React.createElement(Demo1, {\n      key: 1\n    }), React.createElement(Demo2, {\n      key: 2\n    }), React.createElement(Demo3, {\n      key: 3\n    }), React.createElement(Demo4, {\n      key: 4\n    }), React.createElement(Demo5, {\n      key: 5\n    }), React.createElement(Demo6, {\n      key: 6\n    }), React.createElement(Demo7, {\n      key: 7\n    }));\n  }\n}\nexport default function(props) {\n  const [isUsage, setIsUsage] = useState(false);\n  const [showChangelog, setShowChangelog] = useState(false);\n  const lang = localStorage.getItem(\"arco-lang\") || \"zh-CN\";\n  return /* @__PURE__ */ React.createElement(\"span\", {\n    style: props.style\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"markdown-body\"\n  }, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"ac-nav-intro\"\n  }, /* @__PURE__ */ React.createElement(\"p\", null, \"Component \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"separator\"\n  }, \"/\"), \" \", /* @__PURE__ */ React.createElement(\"strong\", null, \"Data Entry\")), /* @__PURE__ */ React.createElement(\"h1\", {\n    id: \"transfer\"\n  }, \"Transfer\"), /* @__PURE__ */ React.createElement(\"p\", null, \"A two-column multi-select component that moves elements from one column to another in real time.\")), /* @__PURE__ */ React.createElement(Helmet, null, /* @__PURE__ */ React.createElement(\"title\", null, \"Transfer | M Design\"), /* @__PURE__ */ React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"A two-column multi-select component that moves elements from one column to another in real time.\"\n  }), /* @__PURE__ */ React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: \"Transfer | M Design\"\n  }), /* @__PURE__ */ React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: \"A two-column multi-select component that moves elements from one column to another in real time.\"\n  }))), /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"ac-toolbar\"\n  }, /* @__PURE__ */ React.createElement(ChangelogBtn, {\n    size: \"large\",\n    className: \"changelog-btn\",\n    onClick: () => setShowChangelog(true)\n  }, lang === \"en-US\" ? \"Changelog\" : \"\\u66F4\\u65B0\\u8BB0\\u5F55\")), /* @__PURE__ */ React.createElement(Component, null), /* @__PURE__ */ React.createElement(ChangelogDrawer, {\n    title: \"\\u53D1\\u7248\\u8BB0\\u5F55\",\n    visible: showChangelog,\n    onOk: () => setShowChangelog(false),\n    onCancel: () => setShowChangelog(false),\n    width: 800\n  }, /* @__PURE__ */ React.createElement(Changelog, {\n    changelog\n  }))), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"markdown-body api-container\",\n    style: isUsage ? {\n      display: \"none\"\n    } : {}\n  }, /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"api\"\n  }, \"API\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"transfer\"\n  }, \"Transfer\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"DefaultValue\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"style\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Additional style\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"CSSProperties\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"className\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Additional css class\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"string | string[]\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"children\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customize render list\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(props: TransferCustomListProps) => ReactNode\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"dataSource\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Used for setting the source data\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"TransferItem[]\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultTargetKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Initial set of keys of items that are listed on the target column\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"string[]\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"[]\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultSelectedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Initial set of keys of selected items\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"string[]\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"[]\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"targetKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set of keys of items that are listed on the target column\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"string[]\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"selectedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set of keys of selected items\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"string[]\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"titleTexts\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Title list of Transfer columns. (\", /* @__PURE__ */ React.createElement(\"code\", null, \"2.18.0\"), \" began to support function)\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"Array<TransferListTitle>\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"['Source', 'Target']\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"operationTexts\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Texts of buttons that are used to transfer item\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"string[] | ReactNode[]\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"searchPlaceholder\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Placeholder of search box\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"string\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"disabled\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether is disabled\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"boolean\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"oneWay\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to allow only one-way movement\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"boolean\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"simple\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to automatically move an item when it is selected\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"| boolean| \", \"{\", \"retainSelectedItems?: boolean;\", \"}\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"retainSelectedItems\"), \" in '2.21.0'\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"draggable\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether the items in the list can be dragged\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"boolean\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"showSearch\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to display the search box in columns\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"boolean\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"showFooter\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to display the reset-button in columns\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"boolean | ReactNode\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode in \", /* @__PURE__ */ React.createElement(\"code\", null, \"2.11.0\"))), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"pagination\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to divide into pages, you can also pass in the configuration of \", /* @__PURE__ */ React.createElement(\"code\", null, \"Pagination\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"boolean | PaginationProps\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"listStyle\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The additional css style of columns\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"CSSProperties\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"operationStyle\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The additional css style of operation buttons\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"CSSProperties\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"render\"), /* @__PURE__ */ React.createElement(\"td\", null, \"A function to generate the item shown on a column.\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(item: TransferItem) => any\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"filterOption\"), /* @__PURE__ */ React.createElement(\"td\", null, \"A function to determine whether an item should show in search result list\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(inputValue: string, item: TransferItem) => boolean\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(inputValue, item) => item.value.indexOf(inputValue) !== -1\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Callback when the transfer between columns is complete\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(newTargetKeys: string[], direction: 'source' | 'target', moveKeys: string[]) => void\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onSelectChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Callback when selected items are changed\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(leftSelectedKeys: string[], rightSelectedKeys: string[]) => void\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onSearch\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Callback when value of search box is changed\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(value: string, type?: 'source' | 'target') => void\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onResetData\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Callback when reset-button is clicked\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"() => void\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDragStart\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Callback when user start to drag a transfer item\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(e: DragEvent<HTMLSpanElement>, item: TransferItem) => void\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDragEnd\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Callback when the user has finished dragging a transfer item\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(e: DragEvent<HTMLSpanElement>, item: TransferItem) => void\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDragLeave\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Callback when a draggable item leaves a valid drop target\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(e: DragEvent<HTMLSpanElement>, item: TransferItem) => void\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDragOver\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Callback when a draggable item is being dragged over a valid drop target\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(e: DragEvent<HTMLSpanElement>, item: TransferItem) => void\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDrop\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Callback when draggable item is dropped in a \", /* @__PURE__ */ React.createElement(\"code\", null, \"<div>\"), \" element\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"(info: \", \"{\", \"e: DragEvent<HTMLSpanElement>;dragItem: TransferItem;dropItem: TransferItem;dropPosition: number;\", \"}\", \") => void\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"transferitem\"\n  }, \"Transfer.Item\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", {\n    align: \"center\"\n  }, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", {\n    align: \"center\"\n  }, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", {\n    align: \"right\"\n  }, \"Default\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"key\"), /* @__PURE__ */ React.createElement(\"td\", {\n    align: \"center\"\n  }, \"Unique identifier of transfer item\"), /* @__PURE__ */ React.createElement(\"td\", {\n    align: \"center\"\n  }, /* @__PURE__ */ React.createElement(\"code\", null, \"string\"), \" \", /* @__PURE__ */ React.createElement(\"strong\", null, \"(Required)\")), /* @__PURE__ */ React.createElement(\"td\", {\n    align: \"right\"\n  }, /* @__PURE__ */ React.createElement(\"code\", null, \"-\"))), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"value\"), /* @__PURE__ */ React.createElement(\"td\", {\n    align: \"center\"\n  }, \"Value of transfer item\"), /* @__PURE__ */ React.createElement(\"td\", {\n    align: \"center\"\n  }, /* @__PURE__ */ React.createElement(\"code\", null, \"string\"), \" \", /* @__PURE__ */ React.createElement(\"strong\", null, \"(Required)\")), /* @__PURE__ */ React.createElement(\"td\", {\n    align: \"right\"\n  }, /* @__PURE__ */ React.createElement(\"code\", null, \"-\"))), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"disabled\"), /* @__PURE__ */ React.createElement(\"td\", {\n    align: \"center\"\n  }, \"Whether this item is disabled\"), /* @__PURE__ */ React.createElement(\"td\", {\n    align: \"center\"\n  }, /* @__PURE__ */ React.createElement(\"code\", null, \"boolean\")), /* @__PURE__ */ React.createElement(\"td\", {\n    align: \"right\"\n  }, /* @__PURE__ */ React.createElement(\"code\", null, \"-\")))))));\n}\n;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACv6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}