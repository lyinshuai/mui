{"version":3,"file":"665.min.js","sources":["webpack:///../components/form/index.en-US.md"],"sourcesContent":["import React, { useState } from \"react\";\nexport default function(props) {\n  const [isUsage, setIsUsage] = useState(false);\n  const [showChangelog, setShowChangelog] = useState(false);\n  const lang = localStorage.getItem(\"arco-lang\") || \"zh-CN\";\n  return /* @__PURE__ */ React.createElement(\"span\", {\n    style: props.style,\n    className: \"markdown-body\"\n  }, /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"category: Components\", /* @__PURE__ */ React.createElement(\"br\", null), \"type: Data Entry\", /* @__PURE__ */ React.createElement(\"br\", null), \"cols: 1\", /* @__PURE__ */ React.createElement(\"br\", null), \"title: Form\", /* @__PURE__ */ React.createElement(\"br\", null), \"cover: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://gw.alipayobjects.com/zos/alicdn/ORmcdeaoO/Form.svg\"\n  }, \"https://gw.alipayobjects.com/zos/alicdn/ORmcdeaoO/Form.svg\")), /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"High performance Form component with data scope management. Including data collection, verification, and styles.\"), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"when-to-use\"\n  }, \"When to use\"), /* @__PURE__ */ React.createElement(\"ul\", null, /* @__PURE__ */ React.createElement(\"li\", null, \"When you need to create an instance or collect information.\"), /* @__PURE__ */ React.createElement(\"li\", null, \"When you need to validate fields in certain rules.\")), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"api\"\n  }, \"API\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"form\"\n  }, \"Form\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"colon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Configure the default value of \", /* @__PURE__ */ React.createElement(\"code\", null, \"colon\"), \" for Form.Item. Indicates whether the colon after the label is displayed (only effective when prop layout is horizontal)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"component\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set the Form rendering element. Do not create a DOM node for \", /* @__PURE__ */ React.createElement(\"code\", null, \"false\")), /* @__PURE__ */ React.createElement(\"td\", null, \"ComponentType | false\"), /* @__PURE__ */ React.createElement(\"td\", null, \"form\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"fields\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Control of form fields through state management (such as redux). Not recommended for non-strong demand. View \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#components-form-demo-global-state\"\n  }, \"example\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#FieldData\"\n  }, \"FieldData\"), \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"form\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Form control instance created by \", /* @__PURE__ */ React.createElement(\"code\", null, \"Form.useForm()\"), \". Automatically created when not provided\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#FormInstance\"\n  }, \"FormInstance\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"initialValues\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set value by Form initialization or reset\"), /* @__PURE__ */ React.createElement(\"td\", null, \"object\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"labelAlign\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The text align of label of all items\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"left\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"right\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"right\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"labelWrap\"), /* @__PURE__ */ React.createElement(\"td\", null, \"whether label can be wrap\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.18.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"labelCol\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Label layout, like \", /* @__PURE__ */ React.createElement(\"code\", null, \"<Col>\"), \" component. Set \", /* @__PURE__ */ React.createElement(\"code\", null, \"span\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"offset\"), \" value like \", /* @__PURE__ */ React.createElement(\"code\", null, \"{\", \"span: 3, offset: 12\", \"}\"), \" or \", /* @__PURE__ */ React.createElement(\"code\", null, \"sm: \", \"{\", \"span: 3, offset: 12\", \"}\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/components/grid/#Col\"\n  }, \"object\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"layout\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Form layout\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"horizontal\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"vertical\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"inline\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"horizontal\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"name\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Form name. Will be the prefix of Field \", /* @__PURE__ */ React.createElement(\"code\", null, \"id\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"preserve\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Keep field value even when field removed\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.4.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"requiredMark\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Required mark style. Can use required mark or optional mark. You can not config to single Form.Item since this is a Form level config\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | \", /* @__PURE__ */ React.createElement(\"code\", null, \"optional\")), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.6.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"scrollToFirstError\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Auto scroll to first failed field when submit\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/stipsan/scroll-into-view-if-needed/tree/ece40bd9143f48caf4b99503425ecb16b0ad8249#options\"\n  }, \"Options\")), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"size\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set field component size (antd components only)\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"small\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"middle\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"large\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"validateMessages\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Validation prompt template, description \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#validateMessages\"\n  }, \"see below\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/react-component/field-form/blob/master/src/utils/messages.ts\"\n  }, \"ValidateMessages\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"validateTrigger\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Config field validate trigger\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string | string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\")), /* @__PURE__ */ React.createElement(\"td\", null, \"4.3.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"wrapperCol\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The layout for input controls, same as \", /* @__PURE__ */ React.createElement(\"code\", null, \"labelCol\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/components/grid/#Col\"\n  }, \"object\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onFieldsChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Trigger when field updated\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(changedFields, allFields)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onFinish\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Trigger after submitting the form and verifying data successfully\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(values)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onFinishFailed\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Trigger after submitting the form and verifying data failed\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(\", \"{\", \" values, errorFields, outOfDate \", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onValuesChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Trigger when value updated\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(changedValues, allValues)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"validatemessages\"\n  }, \"validateMessages\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Form provides \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/react-component/field-form/blob/master/src/utils/messages.ts\"\n  }, \"default verification error messages\"), \". You can modify the template by configuring \", /* @__PURE__ */ React.createElement(\"code\", null, \"validateMessages\"), \" property. A common usage is to configure localization:\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-jsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"const\"), \" validateMessages \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"required\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, `\"'$`, \"{\", \"name\", \"}\", `' is required!\"`), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// ...\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"validateMessages\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script language-javascript\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script-punctuation punctuation\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"validateMessages\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))), /* @__PURE__ */ React.createElement(\"p\", null, \"Besides, \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/components/config-provider/\"\n  }, \"ConfigProvider\"), \" also provides a global configuration scheme that allows for uniform configuration error notification templates:\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-jsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"const\"), \" validateMessages \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"required\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, `\"'$`, \"{\", \"name\", \"}\", `' is Required!\"`), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// ...\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"ConfigProvider\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"form\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script language-javascript\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script-punctuation punctuation\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \" validateMessages \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"ConfigProvider\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"formitem\"\n  }, \"Form.Item\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Form field component for data bidirectional binding, validation, layout, and so on.\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"colon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Used with \", /* @__PURE__ */ React.createElement(\"code\", null, \"label\"), \", whether to display \", /* @__PURE__ */ React.createElement(\"code\", null, \":\"), \" after label text.\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"dependencies\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set the dependency field. See \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#dependencies\"\n  }, \"below\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"extra\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The extra prompt message. It is similar to help. Usage example: to display error message and prompt message at the same time\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"getValueFromEvent\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Specify how to get value from event or other onChange arguments\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(..args: any[]) => any\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"getValueProps\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Additional props with sub component\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(value: any) => any\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.2.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"hasFeedback\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Used with \", /* @__PURE__ */ React.createElement(\"code\", null, \"validateStatus\"), \", this option specifies the validation status icon. Recommended to be used only with \", /* @__PURE__ */ React.createElement(\"code\", null, \"Input\")), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"help\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The prompt message. If not provided, the prompt message will be generated by the validation rule.\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"hidden\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to hide Form.Item (still collect and validate value)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.4.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"htmlFor\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set sub label \", /* @__PURE__ */ React.createElement(\"code\", null, \"htmlFor\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"initialValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Config sub default value. Form \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValues\"), \" get higher priority when conflict\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.2.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"label\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Label text\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"labelAlign\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The text align of label\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"left\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"right\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"right\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"labelCol\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The layout of label. You can set \", /* @__PURE__ */ React.createElement(\"code\", null, \"span\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"offset\"), \" to something like \", /* @__PURE__ */ React.createElement(\"code\", null, \"{\", \"span: 3, offset: 12\", \"}\"), \" or \", /* @__PURE__ */ React.createElement(\"code\", null, \"sm: \", \"{\", \"span: 3, offset: 12\", \"}\"), \" same as with \", /* @__PURE__ */ React.createElement(\"code\", null, \"<Col>\"), \". You can set \", /* @__PURE__ */ React.createElement(\"code\", null, \"labelCol\"), \" on Form which will not affect nest Item. If both exists, use Item first\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/components/grid/#Col\"\n  }, \"object\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"messageVariables\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The default validate field info\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Record<string, string>\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.7.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"name\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Field name, support array\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"normalize\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Normalize value from component value before passing to Form instance. Do not support async\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(value, prevValue, prevValues) => any\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"noStyle\"), /* @__PURE__ */ React.createElement(\"td\", null, \"No style for \", /* @__PURE__ */ React.createElement(\"code\", null, \"true\"), \", used as a pure field control\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"preserve\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Keep field value even when field removed\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.4.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"required\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Display required style. It will be generated by the validation rule\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"rules\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Rules for field validation. Click \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#components-form-demo-basic\"\n  }, \"here\"), \" to see an example\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#Rule\"\n  }, \"Rule\"), \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"shouldUpdate\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Custom field update logic. See \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#shouldUpdate\"\n  }, \"below\")), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | (prevValue, curValue) => boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"tooltip\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Config tooltip info\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode | \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/components/tooltip#API\"\n  }, \"TooltipProps & \", \"{\", \" icon: ReactNode \", \"}\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.7.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"trigger\"), /* @__PURE__ */ React.createElement(\"td\", null, \"When to collect the value of children node. Click \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#components-form-demo-customized-form-controls\"\n  }, \"here\"), \" to see an example\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"validateFirst\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether stop validate on first rule of error for this field. Will parallel validate when \", /* @__PURE__ */ React.createElement(\"code\", null, \"parallel\"), \" cofigured\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | \", /* @__PURE__ */ React.createElement(\"code\", null, \"parallel\")), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"parallel\"), \": 4.5.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"validateStatus\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The validation status. If not provided, it will be generated by validation rule. options: \", /* @__PURE__ */ React.createElement(\"code\", null, \"success\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"warning\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"error\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"validating\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"validateTrigger\"), /* @__PURE__ */ React.createElement(\"td\", null, \"When to validate the value of children node\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string | string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"valuePropName\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Props of children node, for example, the prop of Switch is 'checked'. This prop is an encapsulation of \", /* @__PURE__ */ React.createElement(\"code\", null, \"getValueProps\"), \", which will be invalid after customizing \", /* @__PURE__ */ React.createElement(\"code\", null, \"getValueProps\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"value\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"wrapperCol\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The layout for input controls, same as \", /* @__PURE__ */ React.createElement(\"code\", null, \"labelCol\"), \". You can set \", /* @__PURE__ */ React.createElement(\"code\", null, \"wrapperCol\"), \" on Form which will not affect nest Item. If both exists, use Item first\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/components/grid/#Col\"\n  }, \"object\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"p\", null, \"After wrapped by \", /* @__PURE__ */ React.createElement(\"code\", null, \"Form.Item\"), \" with \", /* @__PURE__ */ React.createElement(\"code\", null, \"name\"), \" property, \", /* @__PURE__ */ React.createElement(\"code\", null, \"value\"), \"(or other property defined by \", /* @__PURE__ */ React.createElement(\"code\", null, \"valuePropName\"), \") \", /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\"), \"(or other property defined by \", /* @__PURE__ */ React.createElement(\"code\", null, \"trigger\"), \") props will be added to form controls, the flow of form data will be handled by Form which will cause:\"), /* @__PURE__ */ React.createElement(\"ol\", null, /* @__PURE__ */ React.createElement(\"li\", null, \"You shouldn't use \", /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\"), \" on each form control to \", /* @__PURE__ */ React.createElement(\"strong\", null, \"collect data\"), \"(use \", /* @__PURE__ */ React.createElement(\"code\", null, \"onValuesChange\"), \" of Form), but you can still listen to \", /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\"), \".\"), /* @__PURE__ */ React.createElement(\"li\", null, \"You cannot set value for each form control via \", /* @__PURE__ */ React.createElement(\"code\", null, \"value\"), \" or \", /* @__PURE__ */ React.createElement(\"code\", null, \"defaultValue\"), \" prop, you should set default value with \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValues\"), \" of Form. Note that \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValues\"), \" cannot be updated by \", /* @__PURE__ */ React.createElement(\"code\", null, \"setState\"), \" dynamically, you should use \", /* @__PURE__ */ React.createElement(\"code\", null, \"setFieldsValue\"), \" in that situation.\"), /* @__PURE__ */ React.createElement(\"li\", null, \"You shouldn't call \", /* @__PURE__ */ React.createElement(\"code\", null, \"setState\"), \" manually, please use \", /* @__PURE__ */ React.createElement(\"code\", null, \"form.setFieldsValue\"), \" to change value programmatically.\")), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"dependencies\"\n  }, \"dependencies\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Used when there are dependencies between fields. If a field has the \", /* @__PURE__ */ React.createElement(\"code\", null, \"dependencies\"), ' prop, this field will automatically trigger updates and validations when upstream is updated. A common scenario is a user registration form with \"password\" and \"confirm password\" fields. The \"Confirm Password\" validation depends on the \"Password\" field. After setting ', /* @__PURE__ */ React.createElement(\"code\", null, \"dependencies\"), ', the \"Password\" field update will re-trigger the validation of \"Check Password\". You can refer ', /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#components-form-demo-register\"\n  }, \"examples\"), \".\"), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"dependencies\"), \" shouldn't be used together with \", /* @__PURE__ */ React.createElement(\"code\", null, \"shouldUpdate\"), \", since it may result in conflicting update logic.\"), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"dependencies\"), \" supports \", /* @__PURE__ */ React.createElement(\"code\", null, \"Form.Item\"), \" with render props children since \", /* @__PURE__ */ React.createElement(\"code\", null, \"4.5.0\"), \".\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"shouldupdate\"\n  }, \"shouldUpdate\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Form updates only the modified field-related components for performance optimization purposes by incremental update. In most cases, you only need to write code or do validation with the \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#dependencies\"\n  }, /* @__PURE__ */ React.createElement(\"code\", null, \"dependencies\")), \" property. In some specific cases, such as when a new field option appears with a field value changed, or you just want to keep some area updating by form update, you can modify the update logic of Form.Item via the \", /* @__PURE__ */ React.createElement(\"code\", null, \"shouldUpdate\"), \".\"), /* @__PURE__ */ React.createElement(\"p\", null, \"When \", /* @__PURE__ */ React.createElement(\"code\", null, \"shouldUpdate\"), \" is \", /* @__PURE__ */ React.createElement(\"code\", null, \"true\"), \", any Form update will cause the Form.Item to be re-rendered. This is very helpful for custom rendering some areas:\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-jsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"shouldUpdate\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword control-flow\"\n  }, \"return\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), \"pre\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token known-class-name class-name\"\n  }, \"JSON\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token method function property-access\"\n  }, \"stringify\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"form\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token method function property-access\"\n  }, \"getFieldsValue\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword null nil\"\n  }, \"null\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token number\"\n  }, \"2\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), \"pre\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")))), /* @__PURE__ */ React.createElement(\"p\", null, \"You can ref \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#components-form-demo-horizontal-login\"\n  }, \"example\"), \" to see detail.\"), /* @__PURE__ */ React.createElement(\"p\", null, \"When \", /* @__PURE__ */ React.createElement(\"code\", null, \"shouldUpdate\"), \" is a function, it will be called by form values update. Providing original values and current value to compare. This is very helpful for rendering additional fields based on values:\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-jsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"shouldUpdate\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script language-javascript\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script-punctuation punctuation\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token parameter\"\n  }, \"prevValues\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" curValues\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" prevValues\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token property-access\"\n  }, \"additional\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"!==\"), \" curValues\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token property-access\"\n  }, \"additional\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword control-flow\"\n  }, \"return\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"br\", null), \"      \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"name\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-value\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation attr-equals\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"'), \"other\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"')), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"        \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Input\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"br\", null), \"      \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")))), /* @__PURE__ */ React.createElement(\"p\", null, \"You can ref \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#components-form-demo-control-hooks\"\n  }, \"example\"), \" to see detail.\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"messagevariables\"\n  }, \"messageVariables\"), /* @__PURE__ */ React.createElement(\"p\", null, \"You can modify the default verification information of Form.Item through \", /* @__PURE__ */ React.createElement(\"code\", null, \"messageVariables\"), \".\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-jsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"messageVariables\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script language-javascript\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script-punctuation punctuation\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"another\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'good'\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"label\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-value\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation attr-equals\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"'), \"user\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"')), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Input\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"messageVariables\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script language-javascript\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script-punctuation punctuation\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"label\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'good'\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"label\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script language-javascript\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script-punctuation punctuation\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), \"span\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), \"user\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), \"span\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Input\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"formlist\"\n  }, \"Form.List\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Provides array management for fields.\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"children\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Render function\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(fields: Field[], operation: \", \"{\", \" add, remove, move \", \"}\", \", meta: \", \"{\", \" errors \", \"}\", \") => React.ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"initialValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Config sub default value. Form \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValues\"), \" get higher priority when conflict\"), /* @__PURE__ */ React.createElement(\"td\", null, \"any[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.9.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"name\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Field name, support array\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"rules\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Validate rules, only support customize validator. Should work with \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#Form.ErrorList\"\n  }, \"ErrorList\")), /* @__PURE__ */ React.createElement(\"td\", null, \"{\", \" validator, message \", \"}\", \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.7.0\")))), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-tsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.List\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"fields \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), \"div\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"      \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"fields\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token method function property-access\"\n  }, \"map\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"field \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"br\", null), \"        \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token spread\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token spread operator\"\n  }, \"...\"), \"field\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"          \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Input\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"br\", null), \"        \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"      \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), \"div\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.List\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")))), /* @__PURE__ */ React.createElement(\"p\", null, \"Note: You should not configure Form.Item \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValue\"), \" under Form.List. It always should be configured by Form.List \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValue\"), \" or Form \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValues\"), \".\"), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"operation\"\n  }, \"operation\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Some operator functions in render form of Form.List.\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"add\"), /* @__PURE__ */ React.createElement(\"td\", null, \"add form item\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(defaultValue?: any, insertIndex?: number) => void\"), /* @__PURE__ */ React.createElement(\"td\", null, \"insertIndex\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.6.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"move\"), /* @__PURE__ */ React.createElement(\"td\", null, \"move form item\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(from: number, to: number) => void\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"remove\"), /* @__PURE__ */ React.createElement(\"td\", null, \"remove form item\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(index: number | number[]) => void\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.5.0\")))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"formerrorlist\"\n  }, \"Form.ErrorList\"), /* @__PURE__ */ React.createElement(\"p\", null, \"New in 4.7.0. Show error messages, should only work with \", /* @__PURE__ */ React.createElement(\"code\", null, \"rules\"), \" of Form.List. See \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#components-form-demo-dynamic-form-item\"\n  }, \"example\"), \".\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"errors\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Error list\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"formprovider\"\n  }, \"Form.Provider\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Provide linkage between forms. If a sub form with \", /* @__PURE__ */ React.createElement(\"code\", null, \"name\"), \" prop update, it will auto trigger Provider related events. See \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#components-form-demo-form-context\"\n  }, \"example\"), \".\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onFormChange\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Triggered when a sub form field updates\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(formName: string, info: \", \"{\", \" changedFields, forms \", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onFormFinish\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Triggered when a sub form submits\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(formName: string, info: \", \"{\", \" values, forms \", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")))), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-jsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Provider\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"onFormFinish\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script language-javascript\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script-punctuation punctuation\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token parameter\"\n  }, \"name\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword control-flow\"\n  }, \"if\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"name \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"===\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'form1'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"      \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// Do something...\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"name\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-value\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation attr-equals\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"'), \"form1\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"')), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token spread operator\"\n  }, \"...\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"name\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-value\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation attr-equals\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"'), \"form2\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"')), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token spread operator\"\n  }, \"...\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Provider\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"forminstance\"\n  }, \"FormInstance\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Name\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"getFieldError\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Get the error messages by the field name\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(name: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \") => string[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"getFieldInstance\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Get field instance\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(name: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \") => any\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.4.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"getFieldsError\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Get the error messages by the fields name. Return as an array\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(nameList?: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \"[]) => FieldError[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"getFieldsValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Get values by a set of field names. Return according to the corresponding structure. Default return mounted field value, but you can use \", /* @__PURE__ */ React.createElement(\"code\", null, \"getFieldsValue(true)\"), \" to get all values\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(nameList?: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \"[], filterFunc?: (meta: \", \"{\", \" touched: boolean, validating: boolean \", \"}\", \") => boolean) => any\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"getFieldValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Get the value by the field name\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(name: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \") => any\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"isFieldsTouched\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Check if fields have been operated. Check if all fields is touched when \", /* @__PURE__ */ React.createElement(\"code\", null, \"allTouched\"), \" is \", /* @__PURE__ */ React.createElement(\"code\", null, \"true\")), /* @__PURE__ */ React.createElement(\"td\", null, \"(nameList?: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \"[], allTouched?: boolean) => boolean\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"isFieldTouched\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Check if a field has been operated\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(name: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \") => boolean\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"isFieldValidating\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Check field if is in validating\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(name: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \") => boolean\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"resetFields\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Reset fields to \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValues\")), /* @__PURE__ */ React.createElement(\"td\", null, \"(fields?: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \"[]) => void\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"scrollToField\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Scroll to field position\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(name: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \", options: [\", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/stipsan/scroll-into-view-if-needed/tree/ece40bd9143f48caf4b99503425ecb16b0ad8249#options\"\n  }, \"ScrollOptions\"), \"]) => void\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"setFields\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set fields status\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(fields: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#FieldData\"\n  }, \"FieldData\"), \"[]) => void\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"setFieldsValue\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set fields value(Will directly pass to form store. If you do not want to modify passed object, please clone first)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(values) => void\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"submit\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Submit the form. It's same as click \", /* @__PURE__ */ React.createElement(\"code\", null, \"submit\"), \" button\"), /* @__PURE__ */ React.createElement(\"td\", null, \"() => void\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"validateFields\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Validate fields\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(nameList?: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \"[]) => Promise\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h4\", {\n    id: \"validatefields-return-sample\"\n  }, \"validateFields return sample\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-jsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"validateFields\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token method function property-access\"\n  }, \"then\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token parameter\"\n  }, \"values\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"/*\", /* @__PURE__ */ React.createElement(\"br\", null), \"  values:\", /* @__PURE__ */ React.createElement(\"br\", null), \"    \", \"{\", /* @__PURE__ */ React.createElement(\"br\", null), \"      username: 'username',\", /* @__PURE__ */ React.createElement(\"br\", null), \"      password: 'password',\", /* @__PURE__ */ React.createElement(\"br\", null), \"    \", \"}\", /* @__PURE__ */ React.createElement(\"br\", null), \"  */\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword control-flow\"\n  }, \"catch\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token parameter\"\n  }, \"errorInfo\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"/*\", /* @__PURE__ */ React.createElement(\"br\", null), \"    errorInfo:\", /* @__PURE__ */ React.createElement(\"br\", null), \"      \", \"{\", /* @__PURE__ */ React.createElement(\"br\", null), \"        values: \", \"{\", /* @__PURE__ */ React.createElement(\"br\", null), \"          username: 'username',\", /* @__PURE__ */ React.createElement(\"br\", null), \"          password: 'password',\", /* @__PURE__ */ React.createElement(\"br\", null), \"        \", \"}\", \",\", /* @__PURE__ */ React.createElement(\"br\", null), \"        errorFields: [\", /* @__PURE__ */ React.createElement(\"br\", null), \"          \", \"{\", \" name: ['password'], errors: ['Please input your Password!'] \", \"}\", \",\", /* @__PURE__ */ React.createElement(\"br\", null), \"        ],\", /* @__PURE__ */ React.createElement(\"br\", null), \"        outOfDate: false,\", /* @__PURE__ */ React.createElement(\"br\", null), \"      \", \"}\", /* @__PURE__ */ React.createElement(\"br\", null), \"    */\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"interface\"\n  }, \"Interface\"), /* @__PURE__ */ React.createElement(\"h4\", {\n    id: \"namepath\"\n  }, \"NamePath\"), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"string | number | (string | number)[]\")), /* @__PURE__ */ React.createElement(\"h4\", {\n    id: \"fielddata\"\n  }, \"FieldData\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Name\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"errors\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Error messages\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[]\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"name\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Field name path\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#NamePath\"\n  }, \"NamePath\"), \"[]\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"touched\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether is operated\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"validating\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether is in validating\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"value\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Field value\"), /* @__PURE__ */ React.createElement(\"td\", null, \"any\")))), /* @__PURE__ */ React.createElement(\"h4\", {\n    id: \"rule\"\n  }, \"Rule\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Rule supports a config object, or a function returning config object:\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-tsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"type\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Rule\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token maybe-class-name\"\n  }, \"RuleConfig\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"|\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"form\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token maybe-class-name\"\n  }, \"FormInstance\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token maybe-class-name\"\n  }, \"RuleConfig\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Name\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultField\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Validate rule for all array elements, valid when \", /* @__PURE__ */ React.createElement(\"code\", null, \"type\"), \" is \", /* @__PURE__ */ React.createElement(\"code\", null, \"array\")), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#Rule\"\n  }, \"rule\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"enum\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Match enum value. You need to set \", /* @__PURE__ */ React.createElement(\"code\", null, \"type\"), \" to \", /* @__PURE__ */ React.createElement(\"code\", null, \"enum\"), \" to enable this\"), /* @__PURE__ */ React.createElement(\"td\", null, \"any[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"fields\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Validate rule for child elements, valid when \", /* @__PURE__ */ React.createElement(\"code\", null, \"type\"), \" is \", /* @__PURE__ */ React.createElement(\"code\", null, \"array\"), \" or \", /* @__PURE__ */ React.createElement(\"code\", null, \"object\")), /* @__PURE__ */ React.createElement(\"td\", null, \"Record<string, \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#Rule\"\n  }, \"rule\"), \">\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"len\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Length of string, number, array\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"max\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"type\"), \" required: max length of \", /* @__PURE__ */ React.createElement(\"code\", null, \"string\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"number\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"array\")), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"message\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Error message. Will auto generate by \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#validateMessages\"\n  }, \"template\"), \" if not provided\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"min\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"type\"), \" required: min length of \", /* @__PURE__ */ React.createElement(\"code\", null, \"string\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"number\"), \", \", /* @__PURE__ */ React.createElement(\"code\", null, \"array\")), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"pattern\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Regex pattern\"), /* @__PURE__ */ React.createElement(\"td\", null, \"RegExp\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"required\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Required field\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"transform\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Transform value to the rule before validation\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(value) => any\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"type\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Normally \", /* @__PURE__ */ React.createElement(\"code\", null, \"string\"), \" |\", /* @__PURE__ */ React.createElement(\"code\", null, \"number\"), \" |\", /* @__PURE__ */ React.createElement(\"code\", null, \"boolean\"), \" |\", /* @__PURE__ */ React.createElement(\"code\", null, \"url\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"email\"), \". More type to ref \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/yiminghe/async-validator#type\"\n  }, \"here\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"validateTrigger\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Set validate trigger event. Must be the sub set of \", /* @__PURE__ */ React.createElement(\"code\", null, \"validateTrigger\"), \" in Form.Item\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string | string[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"validator\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customize validation rule. Accept Promise as return. See \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#components-form-demo-register\"\n  }, \"example\")), /* @__PURE__ */ React.createElement(\"td\", null, \"(\", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"#Rule\"\n  }, \"rule\"), \", value) => Promise\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"warningOnly\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Warning only. Not block form submit\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.17.0\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"whitespace\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Failed if only has whitespace, only work with \", /* @__PURE__ */ React.createElement(\"code\", null, \"type: 'string'\"), \" rule\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"migrate-to-v4\"\n  }, \"Migrate to v4\"), /* @__PURE__ */ React.createElement(\"p\", null, \"If you are a user of v3, you can ref \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/components/form/v3\"\n  }, \"migrate doc\"), \"\\u3002\"), /* @__PURE__ */ React.createElement(\"style\", null, \".code-box-demo .ant-form:not(.ant-form-inline):not(.ant-form-vertical) \", \"{\", \"max-width: 600px;\", \"}\", \".markdown.api-container table td:nth-of-type(4) \", \"{\", \"white-space: nowrap; word-wrap: break-word;\", \"}\"), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"faq\"\n  }, \"FAQ\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"custom-validator-not-working\"\n  }, \"Custom validator not working\"), /* @__PURE__ */ React.createElement(\"p\", null, \"It may be caused by your \", /* @__PURE__ */ React.createElement(\"code\", null, \"validator\"), \" if it has some errors that prevents \", /* @__PURE__ */ React.createElement(\"code\", null, \"callback\"), \" to be called. You can use \", /* @__PURE__ */ React.createElement(\"code\", null, \"async\"), \" instead or use \", /* @__PURE__ */ React.createElement(\"code\", null, \"try...catch\"), \" to catch the error:\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-jsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token function-variable function\"\n  }, \"validator\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"async\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token parameter\"\n  }, \"rule\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" value\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword control-flow\"\n  }, \"throw\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"new\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Error\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'Something wrong!'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// or\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"validator\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token parameter\"\n  }, \"rule\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" value\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" callback\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword control-flow\"\n  }, \"try\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword control-flow\"\n  }, \"throw\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"new\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Error\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'Something wrong!'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword control-flow\"\n  }, \"catch\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"err\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"callback\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"err\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"how-does-name-fill-value-when-its-an-array\"\n  }, \"How does \", /* @__PURE__ */ React.createElement(\"code\", null, \"name\"), \" fill value when it's an array?\"), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"name\"), \" will fill value by array order. When there exists number in it and no related field in form store, it will auto convert field to array. If you want to keep it as object, use string like: \", /* @__PURE__ */ React.createElement(\"code\", null, \"['1', 'name']\"), \".\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-is-there-a-form-warning-when-used-in-modal\"\n  }, \"Why is there a form warning when used in Modal?\"), /* @__PURE__ */ React.createElement(\"blockquote\", null, /* @__PURE__ */ React.createElement(\"p\", null, \"Warning: Instance created by \", /* @__PURE__ */ React.createElement(\"code\", null, \"useForm\"), \" is not connect to any Form element. Forget to pass \", /* @__PURE__ */ React.createElement(\"code\", null, \"form\"), \" prop?\")), /* @__PURE__ */ React.createElement(\"p\", null, \"Before Modal opens, children elements do not exist in the view. You can set \", /* @__PURE__ */ React.createElement(\"code\", null, \"forceRender\"), \" on Modal to pre-render its children. Click \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://codesandbox.io/s/antd-reproduction-template-ibu5c\"\n  }, \"here\"), \" to view an example.\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-is-component-defaultvalue-not-working-when-inside-formitem\"\n  }, \"Why is component \", /* @__PURE__ */ React.createElement(\"code\", null, \"defaultValue\"), \" not working when inside Form.Item?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Components inside Form.Item with name property will turn into controlled mode, which makes \", /* @__PURE__ */ React.createElement(\"code\", null, \"defaultValue\"), \" not work anymore. Please try \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValues\"), \" of Form to set default value.\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-can-not-call-ref-of-form-at-first-time\"\n  }, \"Why can not call \", /* @__PURE__ */ React.createElement(\"code\", null, \"ref\"), \" of Form at first time?\"), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"ref\"), \" only receives the mounted instance. please ref React official doc: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://reactjs.org/docs/refs-and-the-dom.html#accessing-refs\"\n  }, \"https://reactjs.org/docs/refs-and-the-dom.html#accessing-refs\")), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-will-resetfields-re-mount-component\"\n  }, \"Why will \", /* @__PURE__ */ React.createElement(\"code\", null, \"resetFields\"), \" re-mount component?\"), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"resetFields\"), \" will re-mount component under Field to clean up customize component side effects (like async data, cached state, etc.). It's by design.\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"difference-between-form-initialvalues-and-item-initialvalue\"\n  }, \"Difference between Form initialValues and Item initialValue?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"In most case, we always recommend to use Form \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValues\"), \". Use Item \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValue\"), \" only with dynamic field usage. Priority follows the rules:\"), /* @__PURE__ */ React.createElement(\"ol\", null, /* @__PURE__ */ React.createElement(\"li\", null, \"Form \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValues\"), \" is the first priority\"), /* @__PURE__ */ React.createElement(\"li\", null, \"Field \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValue\"), \" is secondary *. Does not work when multiple Item with same \", /* @__PURE__ */ React.createElement(\"code\", null, \"name\"), \" setting the \", /* @__PURE__ */ React.createElement(\"code\", null, \"initialValue\"))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-does-onfieldschange-trigger-three-times-on-change-when-field-sets-rules\"\n  }, \"Why does \", /* @__PURE__ */ React.createElement(\"code\", null, \"onFieldsChange\"), \" trigger three times on change when field sets \", /* @__PURE__ */ React.createElement(\"code\", null, \"rules\"), \"?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Validating is also part of the value updating. It pass follow steps:\"), /* @__PURE__ */ React.createElement(\"ol\", null, /* @__PURE__ */ React.createElement(\"li\", null, \"Trigger value change\"), /* @__PURE__ */ React.createElement(\"li\", null, \"Rule validating\"), /* @__PURE__ */ React.createElement(\"li\", null, \"Rule validated\")), /* @__PURE__ */ React.createElement(\"p\", null, \"In each \", /* @__PURE__ */ React.createElement(\"code\", null, \"onFieldsChange\"), \", you will get \", /* @__PURE__ */ React.createElement(\"code\", null, \"false\"), \" > \", /* @__PURE__ */ React.createElement(\"code\", null, \"true\"), \" > \", /* @__PURE__ */ React.createElement(\"code\", null, \"false\"), \" with \", /* @__PURE__ */ React.createElement(\"code\", null, \"isFieldValidating\"), \".\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-doesnt-formlist-support-label-and-need-errorlist-to-show-errors\"\n  }, \"Why doesn't Form.List support \", /* @__PURE__ */ React.createElement(\"code\", null, \"label\"), \" and need ErrorList to show errors?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Form.List use renderProps which mean internal structure is flexible. Thus \", /* @__PURE__ */ React.createElement(\"code\", null, \"label\"), \" and \", /* @__PURE__ */ React.createElement(\"code\", null, \"error\"), \" can not have best place. If you want to use antd \", /* @__PURE__ */ React.createElement(\"code\", null, \"label\"), \", you can wrap with Form.Item instead.\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-cant-formitem-dependencies-work-on-formlist-field\"\n  }, \"Why can't Form.Item \", /* @__PURE__ */ React.createElement(\"code\", null, \"dependencies\"), \" work on Form.List field?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Your name path should also contain Form.List \", /* @__PURE__ */ React.createElement(\"code\", null, \"name\"), \":\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-tsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.List\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"name\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-value\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation attr-equals\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"'), \"users\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"')), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"fields \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    fields\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token method function property-access\"\n  }, \"map\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"field \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token arrow operator\"\n  }, \"=>\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"br\", null), \"      \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"React.Fragment\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"key\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script language-javascript\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script-punctuation punctuation\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"field\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token property-access\"\n  }, \"key\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"        \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"name\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script language-javascript\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script-punctuation punctuation\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), \"field\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token property-access\"\n  }, \"name\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'name'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token spread\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token spread operator\"\n  }, \"...\"), \"someRest1\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"br\", null), \"        \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.Item\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"name\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script language-javascript\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token script-punctuation punctuation\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), \"field\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token property-access\"\n  }, \"name\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'age'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token spread\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token spread operator\"\n  }, \"...\"), \"someRest1\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"/>\")), /* @__PURE__ */ React.createElement(\"br\", null), \"      \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"React.Fragment\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Form.List\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")))), /* @__PURE__ */ React.createElement(\"p\", null, \"dependencies should be \", /* @__PURE__ */ React.createElement(\"code\", null, \"['users', 0, 'name']\")), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-doesnt-normalize-support-async\"\n  }, \"Why doesn't \", /* @__PURE__ */ React.createElement(\"code\", null, \"normalize\"), \" support async?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"React can not get correct interaction of controlled component with async value update. When user trigger \", /* @__PURE__ */ React.createElement(\"code\", null, \"onChange\"), \", component will do no response since \", /* @__PURE__ */ React.createElement(\"code\", null, \"value\"), \" update is async. If you want to trigger value update async, you should use customize component to handle value state internal and pass sync value control to Form instead.\"), /* @__PURE__ */ React.createElement(\"style\", null, \".site-form-item-icon \", \"{\", \"color: rgba(0, 0, 0, 0.25);\", \"}\", '[data-theme=\"dark\"] .site-form-item-icon ', \"{\", \"color: rgba(255,255,255,.3);\", \"}\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"scrolltofirsterror-and-scrolltofield-not-working-on-custom-form-control\"\n  }, /* @__PURE__ */ React.createElement(\"code\", null, \"scrollToFirstError\"), \" and \", /* @__PURE__ */ React.createElement(\"code\", null, \"scrollToField\"), \" not working on custom form control?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"See similar issues: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/ant-design/ant-design/issues/28370\"\n  }, \"#28370\"), \" \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/ant-design/ant-design/issues/27994\"\n  }, \"#27994\")), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"scrollToFirstError\"), \" and \", /* @__PURE__ */ React.createElement(\"code\", null, \"scrollToField\"), \" deps on \", /* @__PURE__ */ React.createElement(\"code\", null, \"id\"), \" attribute passed to form control, please mark sure that it hasn't been ignored in your custom form control. Check \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://codesandbox.io/s/antd-reproduction-template-forked-25nul?file=/index.js\"\n  }, \"codesandbox\"), \" for solution.\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"setfieldsvalue-do-not-trigger-onfieldschange-or-onvalueschange\"\n  }, /* @__PURE__ */ React.createElement(\"code\", null, \"setFieldsValue\"), \" do not trigger \", /* @__PURE__ */ React.createElement(\"code\", null, \"onFieldsChange\"), \" or \", /* @__PURE__ */ React.createElement(\"code\", null, \"onValuesChange\"), \"?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"It's by design. Only user interactive can trigger the change event. This design is aim to avoid call \", /* @__PURE__ */ React.createElement(\"code\", null, \"setFieldsValue\"), \" in change event which may makes loop calling.\"));\n}\n;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}