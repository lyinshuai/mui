{"version":3,"file":"939.min.js","sources":["webpack:///../components/notification/index.en-US.md"],"sourcesContent":["import React, { useState } from \"react\";\nexport default function(props) {\n  const [isUsage, setIsUsage] = useState(false);\n  const [showChangelog, setShowChangelog] = useState(false);\n  const lang = localStorage.getItem(\"arco-lang\") || \"zh-CN\";\n  return /* @__PURE__ */ React.createElement(\"span\", {\n    style: props.style,\n    className: \"markdown-body\"\n  }, /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"category: Components\", /* @__PURE__ */ React.createElement(\"br\", null), \"type: Feedback\", /* @__PURE__ */ React.createElement(\"br\", null), \"noinstant: true\", /* @__PURE__ */ React.createElement(\"br\", null), \"title: Notification\", /* @__PURE__ */ React.createElement(\"br\", null), \"cover: \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://gw.alipayobjects.com/zos/alicdn/Jxm5nw61w/Notification.svg\"\n  }, \"https://gw.alipayobjects.com/zos/alicdn/Jxm5nw61w/Notification.svg\")), /* @__PURE__ */ React.createElement(\"hr\", null), /* @__PURE__ */ React.createElement(\"p\", null, \"Display a notification message globally.\"), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"when-to-use\"\n  }, \"When To Use\"), /* @__PURE__ */ React.createElement(\"p\", null, \"To display a notification message at any of the four corners of the viewport. Typically it can be used in the following cases:\"), /* @__PURE__ */ React.createElement(\"ul\", null, /* @__PURE__ */ React.createElement(\"li\", null, \"A notification with complex content.\"), /* @__PURE__ */ React.createElement(\"li\", null, \"A notification providing a feedback based on the user interaction. Or it may show some details about upcoming steps the user may have to follow.\"), /* @__PURE__ */ React.createElement(\"li\", null, \"A notification that is pushed by the application.\")), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"api\"\n  }, \"API\"), /* @__PURE__ */ React.createElement(\"ul\", null, /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"notification.success(config)\")), /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"notification.error(config)\")), /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"notification.info(config)\")), /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"notification.warning(config)\")), /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"notification.warn(config)\")), /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"notification.open(config)\")), /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"notification.close(key: String)\")), /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"notification.destroy()\"))), /* @__PURE__ */ React.createElement(\"p\", null, \"The properties of config are as follows:\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"bottom\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Distance from the bottom of the viewport, when \", /* @__PURE__ */ React.createElement(\"code\", null, \"placement\"), \" is \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottomRight\"), \" or \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottomLeft\"), \" (unit: pixels)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"24\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"btn\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customized close button\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"className\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customized CSS class\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"closeIcon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Custom close icon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"description\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The content of notification box (required)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"duration\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Time in seconds before Notification is closed. When set to 0 or null, it will never be closed automatically\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.5\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"getContainer\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Return the mount node for Notification\"), /* @__PURE__ */ React.createElement(\"td\", null, \"() => HTMLNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"() => document.body\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"icon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customized icon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"key\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The unique identifier of the Notification\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"message\"), /* @__PURE__ */ React.createElement(\"td\", null, \"The title of notification box (required)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"placement\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Position of Notification, can be one of \", /* @__PURE__ */ React.createElement(\"code\", null, \"topLeft\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"topRight\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottomLeft\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottomRight\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"topRight\"))), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"style\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Customized inline style\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/e434515761b36830c3e58a970abf5186f005adac/types/react/index.d.ts#L794\"\n  }, \"CSSProperties\")), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"top\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Distance from the top of the viewport, when \", /* @__PURE__ */ React.createElement(\"code\", null, \"placement\"), \" is \", /* @__PURE__ */ React.createElement(\"code\", null, \"topRight\"), \" or \", /* @__PURE__ */ React.createElement(\"code\", null, \"topLeft\"), \" (unit: pixels)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"24\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onClick\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Specify a function that will be called when the notification is clicked\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onClose\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Trigger when notification closed\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\")))), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"notification\"), \" also provides a global \", /* @__PURE__ */ React.createElement(\"code\", null, \"config()\"), \" method that can be used for specifying the default options. Once this method is used, all the notification boxes will take into account these globally defined options when displaying.\"), /* @__PURE__ */ React.createElement(\"ul\", null, /* @__PURE__ */ React.createElement(\"li\", null, /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"notification.config(options)\")), /* @__PURE__ */ React.createElement(\"blockquote\", null, /* @__PURE__ */ React.createElement(\"p\", null, \"When you use \", /* @__PURE__ */ React.createElement(\"code\", null, \"ConfigProvider\"), \" for global configuration, the system will automatically start RTL mode by default.(4.3.0+)\"), /* @__PURE__ */ React.createElement(\"p\", null, \"When you want to use it alone, you can start the RTL mode through the following settings.\")))), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-js\"\n  }, \"notification\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token method function property-access\"\n  }, \"config\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"placement\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'bottomRight'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"bottom\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token number\"\n  }, \"50\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"duration\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token number\"\n  }, \"3\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token literal-property property\"\n  }, \"rtl\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token boolean\"\n  }, \"true\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"Property\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Description\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Type\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Default\"), /* @__PURE__ */ React.createElement(\"th\", null, \"Version\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"bottom\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Distance from the bottom of the viewport, when \", /* @__PURE__ */ React.createElement(\"code\", null, \"placement\"), \" is \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottomRight\"), \" or \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottomLeft\"), \" (unit: pixels)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"24\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"closeIcon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Custom close icon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"duration\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Time in seconds before Notification is closed. When set to 0 or null, it will never be closed automatically\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.5\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"getContainer\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Return the mount node for Notification\"), /* @__PURE__ */ React.createElement(\"td\", null, \"() => HTMLNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"() => document.body\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"placement\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Position of Notification, can be one of \", /* @__PURE__ */ React.createElement(\"code\", null, \"topLeft\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"topRight\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottomLeft\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"bottomRight\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"topRight\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"rtl\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Whether to enable RTL mode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"top\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Distance from the top of the viewport, when \", /* @__PURE__ */ React.createElement(\"code\", null, \"placement\"), \" is \", /* @__PURE__ */ React.createElement(\"code\", null, \"topRight\"), \" or \", /* @__PURE__ */ React.createElement(\"code\", null, \"topLeft\"), \" (unit: pixels)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"24\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"maxCount\"), /* @__PURE__ */ React.createElement(\"td\", null, \"Max Notification show, drop oldest if exceed limit\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null, \"4.17.0\")))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"faq\"\n  }, \"FAQ\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"why-i-can-not-access-context-redux-configprovider-localeprefixcls-in-notification\"\n  }, \"Why I can not access context, redux, ConfigProvider \", /* @__PURE__ */ React.createElement(\"code\", null, \"locale/prefixCls\"), \" in notification?\"), /* @__PURE__ */ React.createElement(\"p\", null, \"antd will dynamic create React instance by \", /* @__PURE__ */ React.createElement(\"code\", null, \"ReactDOM.render\"), \" when call notification methods. Whose context is different with origin code located context.\"), /* @__PURE__ */ React.createElement(\"p\", null, \"When you need context info (like ConfigProvider context), you can use \", /* @__PURE__ */ React.createElement(\"code\", null, \"notification.useNotification\"), \" to get \", /* @__PURE__ */ React.createElement(\"code\", null, \"api\"), \" instance and \", /* @__PURE__ */ React.createElement(\"code\", null, \"contextHolder\"), \" node. And put it in your children:\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-tsx\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"const\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), \"api\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" contextHolder\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" notification\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token method function property-access\"\n  }, \"useNotification\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Context1.Provider\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"value\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-value\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation attr-equals\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"'), \"Ant\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"')), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"/* contextHolder is inside Context1 which means api will get value of Context1 */\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"contextHolder\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"<\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Context2.Provider\")), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-name\"\n  }, \"value\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token attr-value\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation attr-equals\"\n  }, \"=\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"'), \"Design\", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, '\"')), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"      \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"/* contextHolder is outside Context2 which means api will **not** get value of Context2 */\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), /* @__PURE__ */ React.createElement(\"br\", null), \"    \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Context2.Provider\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), \"  \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token tag\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"</\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"Context1.Provider\")), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \">\")), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"strong\", null, \"Note:\"), \" You must insert \", /* @__PURE__ */ React.createElement(\"code\", null, \"contextHolder\"), \" into your children with hooks. You can use origin method if you do not need context connection.\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"how-to-set-static-methods-prefixcls-\\uFF1F\"\n  }, \"How to set static methods prefixCls \\uFF1F\"), /* @__PURE__ */ React.createElement(\"p\", null, \"You can config with \", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/components/config-provider/#ConfigProvider.config()-4.13.0+\"\n  }, /* @__PURE__ */ React.createElement(\"code\", null, \"ConfigProvider.config\"))));\n}\n;\n"],"mappingssourceRoot":""}