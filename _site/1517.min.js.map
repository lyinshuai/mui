{"version":3,"file":"1517.min.js","sources":["webpack:///../components/tree/README.zh-CN.md"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { CodeBlockWrapper, CellCode, CellDemo, CellDescription, Browser, Changelog } from \"@arco-design/arco-doc-site-components\";\nimport { Radio as NavRadio, Button as ChangelogBtn, Drawer as ChangelogDrawer } from \"@arco-design/web-react\";\nconst changelog = [];\nfunction Demo0() {\n  \"use strict\";\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  var treeData = [{\n    title: \"Trunk 1\",\n    key: \"0-0\",\n    children: [{\n      title: \"Branch 1-0\",\n      key: \"0-0-0\",\n      disabled: true,\n      children: [{\n        title: \"Leaf\",\n        key: \"0-0-0-0\",\n        disableCheckbox: true\n      }, {\n        title: \"Leaf\",\n        key: \"0-0-0-1\"\n      }]\n    }, {\n      title: \"Branch 1-1\",\n      key: \"0-0-1\",\n      children: [{\n        title: /* @__PURE__ */ React.createElement(\"span\", {\n          style: {\n            color: \"#1890ff\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }\n        }, \"sss\"),\n        key: \"0-0-1-0\"\n      }]\n    }]\n  }];\n  var Demo = function Demo11() {\n    var onSelect = function onSelect2(selectedKeys, info) {\n      console.log(\"selected\", selectedKeys, info);\n    };\n    var onCheck = function onCheck2(checkedKeys, info) {\n      console.log(\"onCheck\", checkedKeys, info);\n    };\n    return /* @__PURE__ */ React.createElement(_mui.Tree, {\n      checkable: false,\n      defaultSelectedKeys: \"0-0-0\",\n      defaultExpandedKeys: [\"0-0-0\", \"0-0-1\"],\n      onSelect,\n      onCheck,\n      treeData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    });\n  };\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"\\u57FA\\u672C\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, {\n    isFirst: true\n  }, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#\\u57FA\\u672C'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>\\u57FA\\u672C</h2><p>\\u6700\\u7B80\\u5355\\u7684\\u7528\\u6CD5\\uFF0C\\u5C55\\u793A\\u53EF\\u52FE\\u9009\\uFF0C\\u53EF\\u9009\\u4E2D\\uFF0C\\u7981\\u7528\\uFF0C\\u9ED8\\u8BA4\\u5C55\\u5F00\\u7B49\\u529F\\u80FD\\u3002</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(Demo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, {\n    tsx: /* @__PURE__ */ React.createElement(\"div\", {\n      className: \"code-preview\",\n      dangerouslySetInnerHTML: {\n        __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Trunk 1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Branch 1-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-0'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>disableCheckbox</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-1'</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Branch 1-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>span</span> <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span> <span class='token literal-property property'>color</span><span class='token operator'>:</span> <span class='token string'>'#1890ff'</span> <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><span class='token punctuation'>></span></span>sss<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>span</span><span class='token punctuation'>></span></span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-0'</span> <span class='token punctuation'>}</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>Demo</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSelect</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token literal-property property'>selectedKeys</span><span class='token operator'>:</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token property-access'><span class='token maybe-class-name'>Key</span></span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span> <span class='token literal-property property'>info</span><span class='token operator'>:</span> any</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'selected'</span><span class='token punctuation'>,</span> selectedKeys<span class='token punctuation'>,</span> info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onCheck</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token literal-property property'>checkedKeys</span><span class='token operator'>:</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token property-access'><span class='token maybe-class-name'>Key</span></span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span> <span class='token literal-property property'>info</span><span class='token operator'>:</span> any</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'onCheck'</span><span class='token punctuation'>,</span> checkedKeys<span class='token punctuation'>,</span> info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span><br />      <span class='token attr-name'>checkable</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token boolean'>false</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>defaultSelectedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>defaultExpandedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>]</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onSelect</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSelect<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onCheck</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onCheck<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span><br />    <span class='token punctuation'>/></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span></code></pre></div>\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4,\n        columnNumber: 9\n      }\n    })\n  }, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Trunk 1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Branch 1-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-0'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>disableCheckbox</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-1'</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Branch 1-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token punctuation'>(</span><br />              <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>span</span><br />                <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span><br />                  <span class='token literal-property property'>color</span><span class='token operator'>:</span> <span class='token string'>'#1890ff'</span><span class='token punctuation'>,</span><br />                <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><br />              <span class='token punctuation'>></span></span><br />                sss<br />              <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>span</span><span class='token punctuation'>></span></span><br />            <span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-0'</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>Demo</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSelect</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>selectedKeys<span class='token punctuation'>,</span> info</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'selected'</span><span class='token punctuation'>,</span> selectedKeys<span class='token punctuation'>,</span> info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onCheck</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>checkedKeys<span class='token punctuation'>,</span> info</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'onCheck'</span><span class='token punctuation'>,</span> checkedKeys<span class='token punctuation'>,</span> info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span><br />      <span class='token attr-name'>checkable</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token boolean'>false</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>defaultSelectedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>defaultExpandedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>]</span><span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onSelect</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSelect<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onCheck</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onCheck<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span><br />    <span class='token punctuation'>/></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo1() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _typeof = require(\"@babel/runtime/helpers/typeof\");\n  var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n  var _react = _interopRequireWildcard(require(\"react\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\")\n      return null;\n    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();\n    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {\n      return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n  }\n  function _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n      return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n      return { default: obj };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n  var treeData = [{\n    title: \"0-0\",\n    key: \"0-0\",\n    children: [{\n      title: \"0-0-0\",\n      key: \"0-0-0\",\n      children: [{\n        title: \"0-0-0-0\",\n        key: \"0-0-0-0\"\n      }, {\n        title: \"0-0-0-1\",\n        key: \"0-0-0-1\"\n      }, {\n        title: \"0-0-0-2\",\n        key: \"0-0-0-2\"\n      }]\n    }, {\n      title: \"0-0-1\",\n      key: \"0-0-1\",\n      children: [{\n        title: \"0-0-1-0\",\n        key: \"0-0-1-0\"\n      }, {\n        title: \"0-0-1-1\",\n        key: \"0-0-1-1\"\n      }, {\n        title: \"0-0-1-2\",\n        key: \"0-0-1-2\"\n      }]\n    }, {\n      title: \"0-0-2\",\n      key: \"0-0-2\"\n    }]\n  }, {\n    title: \"0-1\",\n    key: \"0-1\",\n    children: [{\n      title: \"0-1-0-0\",\n      key: \"0-1-0-0\"\n    }, {\n      title: \"0-1-0-1\",\n      key: \"0-1-0-1\"\n    }, {\n      title: \"0-1-0-2\",\n      key: \"0-1-0-2\"\n    }]\n  }, {\n    title: \"0-2\",\n    key: \"0-2\"\n  }];\n  var Demo = function Demo11() {\n    var _useState = (0, _react.useState)([\"0-0-0\", \"0-0-1\"]), _useState2 = (0, _slicedToArray2.default)(_useState, 2), expandedKeys = _useState2[0], setExpandedKeys = _useState2[1];\n    var _useState3 = (0, _react.useState)([\"0-0-0\"]), _useState4 = (0, _slicedToArray2.default)(_useState3, 2), checkedKeys = _useState4[0], setCheckedKeys = _useState4[1];\n    var _useState5 = (0, _react.useState)([]), _useState6 = (0, _slicedToArray2.default)(_useState5, 2), selectedKeys = _useState6[0], setSelectedKeys = _useState6[1];\n    var _useState7 = (0, _react.useState)(true), _useState8 = (0, _slicedToArray2.default)(_useState7, 2), autoExpandParent = _useState8[0], setAutoExpandParent = _useState8[1];\n    var onExpand = function onExpand2(expandedKeysValue) {\n      console.log(\"onExpand\", expandedKeysValue);\n      setExpandedKeys(expandedKeysValue);\n      setAutoExpandParent(false);\n    };\n    var onCheck = function onCheck2(checkedKeysValue) {\n      console.log(\"onCheck\", checkedKeysValue);\n      setCheckedKeys(checkedKeysValue);\n    };\n    var onSelect = function onSelect2(selectedKeysValue, info) {\n      console.log(\"onSelect\", info);\n      setSelectedKeys(selectedKeysValue);\n    };\n    return /* @__PURE__ */ _react.default.createElement(_mui.Tree, {\n      checkable: true,\n      onExpand,\n      expandedKeys,\n      autoExpandParent,\n      onCheck,\n      checkedKeys,\n      onSelect,\n      selectedKeys,\n      treeData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    });\n  };\n  var __export = /* @__PURE__ */ _react.default.createElement(CodeBlockWrapper, {\n    id: \"\\u53D7\\u63A7\\u64CD\\u4F5C\\u793A\\u4F8B\"\n  }, /* @__PURE__ */ _react.default.createElement(CellDescription, null, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#\\u53D7\\u63A7\\u64CD\\u4F5C\\u793A\\u4F8B'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>\\u53D7\\u63A7\\u64CD\\u4F5C\\u793A\\u4F8B</h2><p>\\u53D7\\u63A7\\u64CD\\u4F5C\\u793A\\u4F8B</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellDemo, null, /* @__PURE__ */ _react.default.createElement(Demo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellCode, {\n    tsx: /* @__PURE__ */ _react.default.createElement(\"div\", {\n      className: \"code-preview\",\n      dangerouslySetInnerHTML: {\n        __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token maybe-class-name'>React</span><span class='token punctuation'>,</span> <span class='token punctuation'>{</span> useState <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'react'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-0'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-1'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-1'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-2'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-2'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-0'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-1'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-1'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-2'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-2'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-2'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-2'</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-0'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-1'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-1'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-2'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-2'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-2'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-2'</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>Demo</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>expandedKeys<span class='token punctuation'>,</span> setExpandedKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> useState<span class='token operator'>&lt;</span><span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token property-access'><span class='token maybe-class-name'>Key</span></span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token operator'>></span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>checkedKeys<span class='token punctuation'>,</span> setCheckedKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> useState<span class='token operator'>&lt;</span><span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token property-access'><span class='token maybe-class-name'>Key</span></span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token operator'>></span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>selectedKeys<span class='token punctuation'>,</span> setSelectedKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> useState<span class='token operator'>&lt;</span><span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token property-access'><span class='token maybe-class-name'>Key</span></span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token operator'>></span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>autoExpandParent<span class='token punctuation'>,</span> setAutoExpandParent<span class='token punctuation'>]</span> <span class='token operator'>=</span> useState<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>boolean</span><span class='token punctuation'>></span></span><span class='token punctuation'>(</span><span class='token boolean'>true</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onExpand</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token literal-property property'>expandedKeysValue</span><span class='token operator'>:</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token property-access'><span class='token maybe-class-name'>Key</span></span><span class='token punctuation'>[</span><span class='token punctuation'>]</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'onExpand'</span><span class='token punctuation'>,</span> expandedKeysValue<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token comment'>// if not set autoExpandParent to false, if children expanded, parent can not collapse.</span><br />    <span class='token comment'>// or, you can remove all expanded children keys.</span><br />    <span class='token function'>setExpandedKeys</span><span class='token punctuation'>(</span>expandedKeysValue<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setAutoExpandParent</span><span class='token punctuation'>(</span><span class='token boolean'>false</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onCheck</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token literal-property property'>checkedKeysValue</span><span class='token operator'>:</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token property-access'><span class='token maybe-class-name'>Key</span></span><span class='token punctuation'>[</span><span class='token punctuation'>]</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'onCheck'</span><span class='token punctuation'>,</span> checkedKeysValue<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setCheckedKeys</span><span class='token punctuation'>(</span>checkedKeysValue<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSelect</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token literal-property property'>selectedKeysValue</span><span class='token operator'>:</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token property-access'><span class='token maybe-class-name'>Key</span></span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span> <span class='token literal-property property'>info</span><span class='token operator'>:</span> any</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'onSelect'</span><span class='token punctuation'>,</span> info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setSelectedKeys</span><span class='token punctuation'>(</span>selectedKeysValue<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span><br />      <span class='token attr-name'>checkable</span><br />      <span class='token attr-name'>onExpand</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onExpand<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>expandedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>expandedKeys<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>autoExpandParent</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>autoExpandParent<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onCheck</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onCheck<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>checkedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>checkedKeys<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onSelect</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSelect<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>selectedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>selectedKeys<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span><br />    <span class='token punctuation'>/></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span></code></pre></div>\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4,\n        columnNumber: 9\n      }\n    })\n  }, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token maybe-class-name'>React</span><span class='token punctuation'>,</span> <span class='token punctuation'>{</span> useState <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'react'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-0'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-0'</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-1'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-1'</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-2'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-2'</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-0'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-0'</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-1'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-1'</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-2'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-2'</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-0-2'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-2'</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-0'</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-1'</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-2'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-2'</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'0-2'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-2'</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>Demo</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>expandedKeys<span class='token punctuation'>,</span> setExpandedKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>checkedKeys<span class='token punctuation'>,</span> setCheckedKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>selectedKeys<span class='token punctuation'>,</span> setSelectedKeys<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>autoExpandParent<span class='token punctuation'>,</span> setAutoExpandParent<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span><span class='token boolean'>true</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onExpand</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>expandedKeysValue</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'onExpand'</span><span class='token punctuation'>,</span> expandedKeysValue<span class='token punctuation'>)</span><span class='token punctuation'>;</span> <span class='token comment'>// if not set autoExpandParent to false, if children expanded, parent can not collapse.</span><br />    <span class='token comment'>// or, you can remove all expanded children keys.</span><br /><br />    <span class='token function'>setExpandedKeys</span><span class='token punctuation'>(</span>expandedKeysValue<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setAutoExpandParent</span><span class='token punctuation'>(</span><span class='token boolean'>false</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onCheck</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>checkedKeysValue</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'onCheck'</span><span class='token punctuation'>,</span> checkedKeysValue<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setCheckedKeys</span><span class='token punctuation'>(</span>checkedKeysValue<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSelect</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>selectedKeysValue<span class='token punctuation'>,</span> info</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'onSelect'</span><span class='token punctuation'>,</span> info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setSelectedKeys</span><span class='token punctuation'>(</span>selectedKeysValue<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span><br />      <span class='token attr-name'>checkable</span><br />      <span class='token attr-name'>onExpand</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onExpand<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>expandedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>expandedKeys<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>autoExpandParent</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>autoExpandParent<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onCheck</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onCheck<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>checkedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>checkedKeys<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onSelect</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSelect<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>selectedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>selectedKeys<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span><br />    <span class='token punctuation'>/></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo2() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n  var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n  var _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n  var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n  var _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = (0, _getPrototypeOf2.default)(Derived), result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct)\n      return false;\n    if (Reflect.construct.sham)\n      return false;\n    if (typeof Proxy === \"function\")\n      return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n      }));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  var x = 3;\n  var y = 2;\n  var z = 1;\n  var gData = [];\n  var generateData = function generateData2(_level, _preKey, _tns) {\n    var preKey = _preKey || \"0\";\n    var tns = _tns || gData;\n    var children = [];\n    for (var i = 0; i < x; i++) {\n      var key = \"\".concat(preKey, \"-\").concat(i);\n      tns.push({\n        title: key,\n        key\n      });\n      if (i < y) {\n        children.push(key);\n      }\n    }\n    if (_level < 0) {\n      return tns;\n    }\n    var level = _level - 1;\n    children.forEach(function(key2, index) {\n      tns[index].children = [];\n      return generateData2(level, key2, tns[index].children);\n    });\n  };\n  generateData(z);\n  var Demo = /* @__PURE__ */ function(_React$Component) {\n    (0, _inherits2.default)(Demo11, _React$Component);\n    var _super = _createSuper(Demo11);\n    function Demo11() {\n      var _this;\n      (0, _classCallCheck2.default)(this, Demo11);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n        gData,\n        expandedKeys: [\"0-0\", \"0-0-0\", \"0-0-0-0\"]\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onDragEnter\", function(info) {\n        console.log(info);\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onDrop\", function(info) {\n        console.log(info);\n        var dropKey = info.node.key;\n        var dragKey = info.dragNode.key;\n        var dropPos = info.node.pos.split(\"-\");\n        var dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n        var loop = function loop2(data2, key, callback) {\n          for (var i2 = 0; i2 < data2.length; i2++) {\n            if (data2[i2].key === key) {\n              return callback(data2[i2], i2, data2);\n            }\n            if (data2[i2].children) {\n              loop2(data2[i2].children, key, callback);\n            }\n          }\n        };\n        var data = (0, _toConsumableArray2.default)(_this.state.gData);\n        var dragObj;\n        loop(data, dragKey, function(item, index, arr) {\n          arr.splice(index, 1);\n          dragObj = item;\n        });\n        if (!info.dropToGap) {\n          loop(data, dropKey, function(item) {\n            item.children = item.children || [];\n            item.children.unshift(dragObj);\n          });\n        } else if ((info.node.props.children || []).length > 0 && info.node.props.expanded && dropPosition === 1) {\n          loop(data, dropKey, function(item) {\n            item.children = item.children || [];\n            item.children.unshift(dragObj);\n          });\n        } else {\n          var ar;\n          var i;\n          loop(data, dropKey, function(item, index, arr) {\n            ar = arr;\n            i = index;\n          });\n          if (dropPosition === -1) {\n            ar.splice(i, 0, dragObj);\n          } else {\n            ar.splice(i + 1, 0, dragObj);\n          }\n        }\n        _this.setState({\n          gData: data\n        });\n      });\n      return _this;\n    }\n    (0, _createClass2.default)(Demo11, [{\n      key: \"render\",\n      value: function render() {\n        return /* @__PURE__ */ React.createElement(_mui.Tree, {\n          className: \"draggable-tree\",\n          defaultExpandedKeys: this.state.expandedKeys,\n          draggable: true,\n          blockNode: true,\n          onDragEnter: this.onDragEnter,\n          onDrop: this.onDrop,\n          treeData: this.state.gData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }\n        });\n      }\n    }]);\n    return Demo11;\n  }(React.Component);\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"\\u62D6\\u52A8\\u793A\\u4F8B\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#\\u62D6\\u52A8\\u793A\\u4F8B'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>\\u62D6\\u52A8\\u793A\\u4F8B</h2><p>\\u5C06\\u8282\\u70B9\\u62D6\\u62FD\\u5230\\u5176\\u4ED6\\u8282\\u70B9\\u5185\\u90E8\\u6216\\u524D\\u540E\\u3002</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(Demo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> x <span class='token operator'>=</span> <span class='token number'>3</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> y <span class='token operator'>=</span> <span class='token number'>2</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> z <span class='token operator'>=</span> <span class='token number'>1</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> gData <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'>generateData</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>_level<span class='token punctuation'>,</span> _preKey<span class='token punctuation'>,</span> _tns</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> preKey <span class='token operator'>=</span> _preKey <span class='token operator'>||</span> <span class='token string'>'0'</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> tns <span class='token operator'>=</span> _tns <span class='token operator'>||</span> gData<span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> children <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />  <span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> x<span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> key <span class='token operator'>=</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>preKey<span class='token interpolation-punctuation punctuation'>}</span></span><span class='token string'>-</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i<span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>;</span><br />    tns<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> key<span class='token punctuation'>,</span> key <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>i <span class='token operator'>&lt;</span> y<span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      children<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span>key<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><br />  <span class='token punctuation'>}</span><br />  <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>_level <span class='token operator'>&lt;</span> <span class='token number'>0</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword control-flow'>return</span> tns<span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br />  <span class='token keyword'>const</span> level <span class='token operator'>=</span> _level <span class='token operator'>-</span> <span class='token number'>1</span><span class='token punctuation'>;</span><br />  children<span class='token punctuation'>.</span><span class='token method function property-access'>forEach</span><span class='token punctuation'>(</span><span class='token punctuation'>(</span><span class='token parameter'>key<span class='token punctuation'>,</span> index</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    tns<span class='token punctuation'>[</span>index<span class='token punctuation'>]</span><span class='token punctuation'>.</span><span class='token property-access'>children</span> <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>return</span> <span class='token function'>generateData</span><span class='token punctuation'>(</span>level<span class='token punctuation'>,</span> key<span class='token punctuation'>,</span> tns<span class='token punctuation'>[</span>index<span class='token punctuation'>]</span><span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><span class='token function'>generateData</span><span class='token punctuation'>(</span>z<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>class</span> <span class='token class-name'>Demo</span> <span class='token keyword'>extends</span> <span class='token class-name'>React<span class='token punctuation'>.</span>Component</span> <span class='token punctuation'>{</span><br />  state <span class='token operator'>=</span> <span class='token punctuation'>{</span><br />    gData<span class='token punctuation'>,</span><br />    <span class='token literal-property property'>expandedKeys</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><span class='token string'>'0-0'</span><span class='token punctuation'>,</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span> <span class='token string'>'0-0-0-0'</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>onDragEnter</span> <span class='token operator'>=</span> <span class='token parameter'>info</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span>info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token comment'>// expandedKeys \\u9700\\u8981\\u53D7\\u63A7\\u65F6\\u8BBE\\u7F6E</span><br />    <span class='token comment'>// this.setState({</span><br />    <span class='token comment'>//   expandedKeys: info.expandedKeys,</span><br />    <span class='token comment'>// });</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>onDrop</span> <span class='token operator'>=</span> <span class='token parameter'>info</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span>info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> dropKey <span class='token operator'>=</span> info<span class='token punctuation'>.</span><span class='token property-access'>node</span><span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> dragKey <span class='token operator'>=</span> info<span class='token punctuation'>.</span><span class='token property-access'>dragNode</span><span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> dropPos <span class='token operator'>=</span> info<span class='token punctuation'>.</span><span class='token property-access'>node</span><span class='token punctuation'>.</span><span class='token property-access'>pos</span><span class='token punctuation'>.</span><span class='token method function property-access'>split</span><span class='token punctuation'>(</span><span class='token string'>'-'</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> dropPosition <span class='token operator'>=</span> info<span class='token punctuation'>.</span><span class='token property-access'>dropPosition</span> <span class='token operator'>-</span> <span class='token known-class-name class-name'>Number</span><span class='token punctuation'>(</span>dropPos<span class='token punctuation'>[</span>dropPos<span class='token punctuation'>.</span><span class='token property-access'>length</span> <span class='token operator'>-</span> <span class='token number'>1</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />    <span class='token keyword'>const</span> <span class='token function-variable function'>loop</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>data<span class='token punctuation'>,</span> key<span class='token punctuation'>,</span> callback</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />      <span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> data<span class='token punctuation'>.</span><span class='token property-access'>length</span><span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />        <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>data<span class='token punctuation'>[</span>i<span class='token punctuation'>]</span><span class='token punctuation'>.</span><span class='token property-access'>key</span> <span class='token operator'>===</span> key<span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />          <span class='token keyword control-flow'>return</span> <span class='token function'>callback</span><span class='token punctuation'>(</span>data<span class='token punctuation'>[</span>i<span class='token punctuation'>]</span><span class='token punctuation'>,</span> i<span class='token punctuation'>,</span> data<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token punctuation'>}</span><br />        <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>data<span class='token punctuation'>[</span>i<span class='token punctuation'>]</span><span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />          <span class='token function'>loop</span><span class='token punctuation'>(</span>data<span class='token punctuation'>[</span>i<span class='token punctuation'>]</span><span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>,</span> key<span class='token punctuation'>,</span> callback<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token punctuation'>}</span><br />      <span class='token punctuation'>}</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> data <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token spread operator'>...</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>state</span><span class='token punctuation'>.</span><span class='token property-access'>gData</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br />    <span class='token comment'>// Find dragObject</span><br />    <span class='token keyword'>let</span> dragObj<span class='token punctuation'>;</span><br />    <span class='token function'>loop</span><span class='token punctuation'>(</span>data<span class='token punctuation'>,</span> dragKey<span class='token punctuation'>,</span> <span class='token punctuation'>(</span><span class='token parameter'>item<span class='token punctuation'>,</span> index<span class='token punctuation'>,</span> arr</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />      arr<span class='token punctuation'>.</span><span class='token method function property-access'>splice</span><span class='token punctuation'>(</span>index<span class='token punctuation'>,</span> <span class='token number'>1</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      dragObj <span class='token operator'>=</span> item<span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />    <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span><span class='token operator'>!</span>info<span class='token punctuation'>.</span><span class='token property-access'>dropToGap</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      <span class='token comment'>// Drop on the content</span><br />      <span class='token function'>loop</span><span class='token punctuation'>(</span>data<span class='token punctuation'>,</span> dropKey<span class='token punctuation'>,</span> <span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />        item<span class='token punctuation'>.</span><span class='token property-access'>children</span> <span class='token operator'>=</span> item<span class='token punctuation'>.</span><span class='token property-access'>children</span> <span class='token operator'>||</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />        <span class='token comment'>// where to insert \\u793A\\u4F8B\\u6DFB\\u52A0\\u5230\\u5934\\u90E8\\uFF0C\\u53EF\\u4EE5\\u662F\\u968F\\u610F\\u4F4D\\u7F6E</span><br />        item<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>.</span><span class='token method function property-access'>unshift</span><span class='token punctuation'>(</span>dragObj<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span> <span class='token keyword control-flow'>else</span> <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span><br />      <span class='token punctuation'>(</span>info<span class='token punctuation'>.</span><span class='token property-access'>node</span><span class='token punctuation'>.</span><span class='token property-access'>props</span><span class='token punctuation'>.</span><span class='token property-access'>children</span> <span class='token operator'>||</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>.</span><span class='token property-access'>length</span> <span class='token operator'>></span> <span class='token number'>0</span> <span class='token operator'>&amp;&amp;</span> <span class='token comment'>// Has children</span><br />      info<span class='token punctuation'>.</span><span class='token property-access'>node</span><span class='token punctuation'>.</span><span class='token property-access'>props</span><span class='token punctuation'>.</span><span class='token property-access'>expanded</span> <span class='token operator'>&amp;&amp;</span> <span class='token comment'>// Is expanded</span><br />      dropPosition <span class='token operator'>===</span> <span class='token number'>1</span> <span class='token comment'>// On the bottom gap</span><br />    <span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      <span class='token function'>loop</span><span class='token punctuation'>(</span>data<span class='token punctuation'>,</span> dropKey<span class='token punctuation'>,</span> <span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />        item<span class='token punctuation'>.</span><span class='token property-access'>children</span> <span class='token operator'>=</span> item<span class='token punctuation'>.</span><span class='token property-access'>children</span> <span class='token operator'>||</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />        <span class='token comment'>// where to insert \\u793A\\u4F8B\\u6DFB\\u52A0\\u5230\\u5934\\u90E8\\uFF0C\\u53EF\\u4EE5\\u662F\\u968F\\u610F\\u4F4D\\u7F6E</span><br />        item<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>.</span><span class='token method function property-access'>unshift</span><span class='token punctuation'>(</span>dragObj<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token comment'>// in previous version, we use item.children.push(dragObj) to insert the</span><br />        <span class='token comment'>// item to the tail of the children</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span> <span class='token keyword control-flow'>else</span> <span class='token punctuation'>{</span><br />      <span class='token keyword'>let</span> ar<span class='token punctuation'>;</span><br />      <span class='token keyword'>let</span> i<span class='token punctuation'>;</span><br />      <span class='token function'>loop</span><span class='token punctuation'>(</span>data<span class='token punctuation'>,</span> dropKey<span class='token punctuation'>,</span> <span class='token punctuation'>(</span><span class='token parameter'>item<span class='token punctuation'>,</span> index<span class='token punctuation'>,</span> arr</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />        ar <span class='token operator'>=</span> arr<span class='token punctuation'>;</span><br />        i <span class='token operator'>=</span> index<span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>dropPosition <span class='token operator'>===</span> <span class='token operator'>-</span><span class='token number'>1</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />        ar<span class='token punctuation'>.</span><span class='token method function property-access'>splice</span><span class='token punctuation'>(</span>i<span class='token punctuation'>,</span> <span class='token number'>0</span><span class='token punctuation'>,</span> dragObj<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span> <span class='token keyword control-flow'>else</span> <span class='token punctuation'>{</span><br />        ar<span class='token punctuation'>.</span><span class='token method function property-access'>splice</span><span class='token punctuation'>(</span>i <span class='token operator'>+</span> <span class='token number'>1</span><span class='token punctuation'>,</span> <span class='token number'>0</span><span class='token punctuation'>,</span> dragObj<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><br />    <span class='token punctuation'>}</span><br /><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span><br />      <span class='token literal-property property'>gData</span><span class='token operator'>:</span> data<span class='token punctuation'>,</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function'>render</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span><br />        <span class='token attr-name'>className</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>draggable-tree<span class='token punctuation'>'</span></span><br />        <span class='token attr-name'>defaultExpandedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>state</span><span class='token punctuation'>.</span><span class='token property-access'>expandedKeys</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>draggable</span><br />        <span class='token attr-name'>blockNode</span><br />        <span class='token attr-name'>onDragEnter</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>onDragEnter</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>onDrop</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>onDrop</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>state</span><span class='token punctuation'>.</span><span class='token property-access'>gData</span><span class='token punctuation'>}</span></span><br />      <span class='token punctuation'>/></span></span><br />    <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo3() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _typeof = require(\"@babel/runtime/helpers/typeof\");\n  var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n  var _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n  var _react = _interopRequireWildcard(require(\"react\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\")\n      return null;\n    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();\n    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {\n      return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n  }\n  function _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n      return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n      return { default: obj };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function(sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), true).forEach(function(key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  var initTreeData = [{\n    title: \"Expand to load\",\n    key: \"0\"\n  }, {\n    title: \"Expand to load\",\n    key: \"1\"\n  }, {\n    title: \"Tree Node\",\n    key: \"2\",\n    isLeaf: true\n  }];\n  function updateTreeData(list, key, children) {\n    return list.map(function(node) {\n      if (node.key === key) {\n        return _objectSpread(_objectSpread({}, node), {}, {\n          children\n        });\n      }\n      if (node.children) {\n        return _objectSpread(_objectSpread({}, node), {}, {\n          children: updateTreeData(node.children, key, children)\n        });\n      }\n      return node;\n    });\n  }\n  var Demo = function Demo11() {\n    var _useState = (0, _react.useState)(initTreeData), _useState2 = (0, _slicedToArray2.default)(_useState, 2), treeData = _useState2[0], setTreeData = _useState2[1];\n    var onLoadData = function onLoadData2(_ref) {\n      var key = _ref.key, children = _ref.children;\n      return new Promise(function(resolve) {\n        if (children) {\n          resolve();\n          return;\n        }\n        setTimeout(function() {\n          setTreeData(function(origin) {\n            return updateTreeData(origin, key, [{\n              title: \"Child Node\",\n              key: \"\".concat(key, \"-0\")\n            }, {\n              title: \"Child Node\",\n              key: \"\".concat(key, \"-1\")\n            }]);\n          });\n          resolve();\n        }, 1e3);\n      });\n    };\n    return /* @__PURE__ */ _react.default.createElement(_mui.Tree, {\n      loadData: onLoadData,\n      treeData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }\n    });\n  };\n  var __export = /* @__PURE__ */ _react.default.createElement(CodeBlockWrapper, {\n    id: \"\\u5F02\\u6B65\\u6570\\u636E\\u52A0\\u8F7D\"\n  }, /* @__PURE__ */ _react.default.createElement(CellDescription, null, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#\\u5F02\\u6B65\\u6570\\u636E\\u52A0\\u8F7D'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>\\u5F02\\u6B65\\u6570\\u636E\\u52A0\\u8F7D</h2><p>\\u70B9\\u51FB\\u5C55\\u5F00\\u8282\\u70B9\\uFF0C\\u52A8\\u6001\\u52A0\\u8F7D\\u6570\\u636E\\u3002</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellDemo, null, /* @__PURE__ */ _react.default.createElement(Demo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellCode, {\n    tsx: /* @__PURE__ */ _react.default.createElement(\"div\", {\n      className: \"code-preview\",\n      dangerouslySetInnerHTML: {\n        __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token maybe-class-name'>React</span><span class='token punctuation'>,</span> <span class='token punctuation'>{</span> useState <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'react'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>interface</span> <span class='token class-name'>DataNode</span> <span class='token punctuation'>{</span><br />  <span class='token literal-property property'>title</span><span class='token operator'>:</span> string<span class='token punctuation'>;</span><br />  <span class='token literal-property property'>key</span><span class='token operator'>:</span> string<span class='token punctuation'>;</span><br />  isLeaf<span class='token operator'>?</span><span class='token operator'>:</span> boolean<span class='token punctuation'>;</span><br />  children<span class='token operator'>?</span><span class='token operator'>:</span> <span class='token maybe-class-name'>DataNode</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token keyword'>const</span> <span class='token literal-property property'>initTreeData</span><span class='token operator'>:</span> <span class='token maybe-class-name'>DataNode</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Expand to load'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Expand to load'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'1'</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Tree Node'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'2'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>isLeaf</span><span class='token operator'>:</span> <span class='token boolean'>true</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token comment'>// It's just a simple demo. You can use tree map to optimize update perf.</span><br /><span class='token keyword'>function</span> <span class='token function'>updateTreeData</span><span class='token punctuation'>(</span><span class='token parameter'><span class='token literal-property property'>list</span><span class='token operator'>:</span> <span class='token maybe-class-name'>DataNode</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token property-access'><span class='token maybe-class-name'>Key</span></span><span class='token punctuation'>,</span> <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token maybe-class-name'>DataNode</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span></span><span class='token punctuation'>)</span><span class='token operator'>:</span> <span class='token maybe-class-name'>DataNode</span><span class='token punctuation'>[</span><span class='token punctuation'>]</span> <span class='token punctuation'>{</span><br />  <span class='token keyword control-flow'>return</span> list<span class='token punctuation'>.</span><span class='token method function property-access'>map</span><span class='token punctuation'>(</span><span class='token parameter'>node</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>node<span class='token punctuation'>.</span><span class='token property-access'>key</span> <span class='token operator'>===</span> key<span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      <span class='token keyword control-flow'>return</span> <span class='token punctuation'>{</span><br />        <span class='token spread operator'>...</span>node<span class='token punctuation'>,</span><br />        children<span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><br />    <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>node<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      <span class='token keyword control-flow'>return</span> <span class='token punctuation'>{</span><br />        <span class='token spread operator'>...</span>node<span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token function'>updateTreeData</span><span class='token punctuation'>(</span>node<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>,</span> key<span class='token punctuation'>,</span> children<span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><br />    <span class='token keyword control-flow'>return</span> node<span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token keyword'>const</span> <span class='token literal-property property'>Demo</span><span class='token operator'>:</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token constant'>FC</span><span class='token operator'>&lt;</span><span class='token punctuation'>{</span><span class='token punctuation'>}</span><span class='token operator'>></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>treeData<span class='token punctuation'>,</span> setTreeData<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span>initTreeData<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onLoadData</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token punctuation'>{</span> key<span class='token punctuation'>,</span> children <span class='token punctuation'>}</span><span class='token operator'>:</span> any</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span><br />    <span class='token keyword'>new</span> <span class='token class-name'>Promise</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>void</span><span class='token punctuation'>></span></span><span class='token punctuation'>(</span><span class='token parameter'>resolve</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />      <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>children<span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />        <span class='token function'>resolve</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token keyword control-flow'>return</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><br />      <span class='token function'>setTimeout</span><span class='token punctuation'>(</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />        <span class='token function'>setTreeData</span><span class='token punctuation'>(</span><span class='token parameter'>origin</span> <span class='token arrow operator'>=></span><br />          <span class='token function'>updateTreeData</span><span class='token punctuation'>(</span>origin<span class='token punctuation'>,</span> key<span class='token punctuation'>,</span> <span class='token punctuation'>[</span><br />            <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Child Node'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>key<span class='token interpolation-punctuation punctuation'>}</span></span><span class='token string'>-0</span><span class='token template-punctuation string'>`</span></span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />            <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Child Node'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>key<span class='token interpolation-punctuation punctuation'>}</span></span><span class='token string'>-1</span><span class='token template-punctuation string'>`</span></span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>]</span><span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />        <span class='token function'>resolve</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span> <span class='token number'>1000</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span> <span class='token attr-name'>loadData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onLoadData<span class='token punctuation'>}</span></span> <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span></code></pre></div>\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4,\n        columnNumber: 9\n      }\n    })\n  }, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token maybe-class-name'>React</span><span class='token punctuation'>,</span> <span class='token punctuation'>{</span> useState <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'react'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> initTreeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Expand to load'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0'</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Expand to load'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'1'</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Tree Node'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'2'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>isLeaf</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span> <span class='token comment'>// It's just a simple demo. You can use tree map to optimize update perf.</span><br /><br /><span class='token keyword'>function</span> <span class='token function'>updateTreeData</span><span class='token punctuation'>(</span><span class='token parameter'>list<span class='token punctuation'>,</span> key<span class='token punctuation'>,</span> children</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />  <span class='token keyword control-flow'>return</span> list<span class='token punctuation'>.</span><span class='token method function property-access'>map</span><span class='token punctuation'>(</span><span class='token punctuation'>(</span><span class='token parameter'>node</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>node<span class='token punctuation'>.</span><span class='token property-access'>key</span> <span class='token operator'>===</span> key<span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      <span class='token keyword control-flow'>return</span> <span class='token punctuation'>{</span> <span class='token spread operator'>...</span>node<span class='token punctuation'>,</span> children <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><br /><br />    <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>node<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      <span class='token keyword control-flow'>return</span> <span class='token punctuation'>{</span><br />        <span class='token spread operator'>...</span>node<span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token function'>updateTreeData</span><span class='token punctuation'>(</span>node<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>,</span> key<span class='token punctuation'>,</span> children<span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><br /><br />    <span class='token keyword control-flow'>return</span> node<span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>Demo</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>treeData<span class='token punctuation'>,</span> setTreeData<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span>initTreeData<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onLoadData</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token punctuation'>{</span> key<span class='token punctuation'>,</span> children <span class='token punctuation'>}</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span><br />    <span class='token keyword'>new</span> <span class='token class-name'>Promise</span><span class='token punctuation'>(</span><span class='token punctuation'>(</span><span class='token parameter'>resolve</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />      <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>children<span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />        <span class='token function'>resolve</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token keyword control-flow'>return</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><br /><br />      <span class='token function'>setTimeout</span><span class='token punctuation'>(</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />        <span class='token function'>setTreeData</span><span class='token punctuation'>(</span><span class='token punctuation'>(</span><span class='token parameter'>origin</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span><br />          <span class='token function'>updateTreeData</span><span class='token punctuation'>(</span>origin<span class='token punctuation'>,</span> key<span class='token punctuation'>,</span> <span class='token punctuation'>[</span><br />            <span class='token punctuation'>{</span><br />              <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Child Node'</span><span class='token punctuation'>,</span><br />              <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>key<span class='token interpolation-punctuation punctuation'>}</span></span><span class='token string'>-0</span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />            <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />            <span class='token punctuation'>{</span><br />              <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Child Node'</span><span class='token punctuation'>,</span><br />              <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>key<span class='token interpolation-punctuation punctuation'>}</span></span><span class='token string'>-1</span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>,</span><br />            <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>]</span><span class='token punctuation'>)</span><br />        <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token function'>resolve</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span> <span class='token number'>1000</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span> <span class='token attr-name'>loadData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onLoadData<span class='token punctuation'>}</span></span> <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo4() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n  var _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n  var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n  var _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = (0, _getPrototypeOf2.default)(Derived), result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct)\n      return false;\n    if (Reflect.construct.sham)\n      return false;\n    if (typeof Proxy === \"function\")\n      return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n      }));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  var Search = _mui.Input.Search;\n  var x = 3;\n  var y = 2;\n  var z = 1;\n  var gData = [];\n  var generateData = function generateData2(_level, _preKey, _tns) {\n    var preKey = _preKey || \"0\";\n    var tns = _tns || gData;\n    var children = [];\n    for (var i = 0; i < x; i++) {\n      var key = \"\".concat(preKey, \"-\").concat(i);\n      tns.push({\n        title: key,\n        key\n      });\n      if (i < y) {\n        children.push(key);\n      }\n    }\n    if (_level < 0) {\n      return tns;\n    }\n    var level = _level - 1;\n    children.forEach(function(key2, index) {\n      tns[index].children = [];\n      return generateData2(level, key2, tns[index].children);\n    });\n  };\n  generateData(z);\n  var dataList = [];\n  var generateList = function generateList2(data) {\n    for (var i = 0; i < data.length; i++) {\n      var node = data[i];\n      var key = node.key;\n      dataList.push({\n        key,\n        title: key\n      });\n      if (node.children) {\n        generateList2(node.children);\n      }\n    }\n  };\n  generateList(gData);\n  var getParentKey = function getParentKey2(key, tree) {\n    var parentKey;\n    for (var i = 0; i < tree.length; i++) {\n      var node = tree[i];\n      if (node.children) {\n        if (node.children.some(function(item) {\n          return item.key === key;\n        })) {\n          parentKey = node.key;\n        } else if (getParentKey2(key, node.children)) {\n          parentKey = getParentKey2(key, node.children);\n        }\n      }\n    }\n    return parentKey;\n  };\n  var SearchTree = /* @__PURE__ */ function(_React$Component) {\n    (0, _inherits2.default)(SearchTree2, _React$Component);\n    var _super = _createSuper(SearchTree2);\n    function SearchTree2() {\n      var _this;\n      (0, _classCallCheck2.default)(this, SearchTree2);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n        expandedKeys: [],\n        searchValue: \"\",\n        autoExpandParent: true\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onExpand\", function(expandedKeys) {\n        _this.setState({\n          expandedKeys,\n          autoExpandParent: false\n        });\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onChange\", function(e) {\n        var value = e.target.value;\n        var expandedKeys = dataList.map(function(item) {\n          if (item.title.indexOf(value) > -1) {\n            return getParentKey(item.key, gData);\n          }\n          return null;\n        }).filter(function(item, i, self) {\n          return item && self.indexOf(item) === i;\n        });\n        _this.setState({\n          expandedKeys,\n          searchValue: value,\n          autoExpandParent: true\n        });\n      });\n      return _this;\n    }\n    (0, _createClass2.default)(SearchTree2, [{\n      key: \"render\",\n      value: function render() {\n        var _this$state = this.state, searchValue = _this$state.searchValue, expandedKeys = _this$state.expandedKeys, autoExpandParent = _this$state.autoExpandParent;\n        var loop = function loop2(data) {\n          return data.map(function(item) {\n            var index = item.title.indexOf(searchValue);\n            var beforeStr = item.title.substr(0, index);\n            var afterStr = item.title.substr(index + searchValue.length);\n            var title = index > -1 ? /* @__PURE__ */ React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 13\n              }\n            }, beforeStr, /* @__PURE__ */ React.createElement(\"span\", {\n              className: \"site-tree-search-value\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }\n            }, searchValue), afterStr) : /* @__PURE__ */ React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 13\n              }\n            }, item.title);\n            if (item.children) {\n              return {\n                title,\n                key: item.key,\n                children: loop2(item.children)\n              };\n            }\n            return {\n              title,\n              key: item.key\n            };\n          });\n        };\n        return /* @__PURE__ */ React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 7\n          }\n        }, /* @__PURE__ */ React.createElement(Search, {\n          style: {\n            marginBottom: 8\n          },\n          placeholder: \"Search\",\n          onChange: this.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }\n        }), /* @__PURE__ */ React.createElement(_mui.Tree, {\n          onExpand: this.onExpand,\n          expandedKeys,\n          autoExpandParent,\n          treeData: loop(gData),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }\n        }));\n      }\n    }]);\n    return SearchTree2;\n  }(React.Component);\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"\\u53EF\\u641C\\u7D22\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#\\u53EF\\u641C\\u7D22'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>\\u53EF\\u641C\\u7D22</h2><p>\\u53EF\\u641C\\u7D22\\u7684\\u6811\\u3002</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(SearchTree, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, {\n    cssCode: '\\n.site-tree-search-value { color: #f50;\\n}\\n[data-theme=\"dark\"] .site-tree-search-value { color: #d84a1b;\\n}\\n'\n  }, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>Input</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token punctuation'>{</span> <span class='token maybe-class-name'>Search</span> <span class='token punctuation'>}</span> <span class='token operator'>=</span> <span class='token maybe-class-name'>Input</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> x <span class='token operator'>=</span> <span class='token number'>3</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> y <span class='token operator'>=</span> <span class='token number'>2</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> z <span class='token operator'>=</span> <span class='token number'>1</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> gData <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'>generateData</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>_level<span class='token punctuation'>,</span> _preKey<span class='token punctuation'>,</span> _tns</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> preKey <span class='token operator'>=</span> _preKey <span class='token operator'>||</span> <span class='token string'>'0'</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> tns <span class='token operator'>=</span> _tns <span class='token operator'>||</span> gData<span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> children <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />  <span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> x<span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> key <span class='token operator'>=</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>preKey<span class='token interpolation-punctuation punctuation'>}</span></span><span class='token string'>-</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i<span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>;</span><br />    tns<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> key<span class='token punctuation'>,</span> key <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>i <span class='token operator'>&lt;</span> y<span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      children<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span>key<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><br />  <span class='token punctuation'>}</span><br />  <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>_level <span class='token operator'>&lt;</span> <span class='token number'>0</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword control-flow'>return</span> tns<span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br />  <span class='token keyword'>const</span> level <span class='token operator'>=</span> _level <span class='token operator'>-</span> <span class='token number'>1</span><span class='token punctuation'>;</span><br />  children<span class='token punctuation'>.</span><span class='token method function property-access'>forEach</span><span class='token punctuation'>(</span><span class='token punctuation'>(</span><span class='token parameter'>key<span class='token punctuation'>,</span> index</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    tns<span class='token punctuation'>[</span>index<span class='token punctuation'>]</span><span class='token punctuation'>.</span><span class='token property-access'>children</span> <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>return</span> <span class='token function'>generateData</span><span class='token punctuation'>(</span>level<span class='token punctuation'>,</span> key<span class='token punctuation'>,</span> tns<span class='token punctuation'>[</span>index<span class='token punctuation'>]</span><span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><span class='token function'>generateData</span><span class='token punctuation'>(</span>z<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> dataList <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> <span class='token function-variable function'>generateList</span> <span class='token operator'>=</span> <span class='token parameter'>data</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> data<span class='token punctuation'>.</span><span class='token property-access'>length</span><span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> node <span class='token operator'>=</span> data<span class='token punctuation'>[</span>i<span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> <span class='token punctuation'>{</span> key <span class='token punctuation'>}</span> <span class='token operator'>=</span> node<span class='token punctuation'>;</span><br />    dataList<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> key<span class='token punctuation'>,</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> key <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>node<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      <span class='token function'>generateList</span><span class='token punctuation'>(</span>node<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><br />  <span class='token punctuation'>}</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><span class='token function'>generateList</span><span class='token punctuation'>(</span>gData<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'>getParentKey</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>key<span class='token punctuation'>,</span> tree</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>let</span> parentKey<span class='token punctuation'>;</span><br />  <span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> tree<span class='token punctuation'>.</span><span class='token property-access'>length</span><span class='token punctuation'>;</span> i<span class='token operator'>++</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> node <span class='token operator'>=</span> tree<span class='token punctuation'>[</span>i<span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>node<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>node<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>.</span><span class='token method function property-access'>some</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> item<span class='token punctuation'>.</span><span class='token property-access'>key</span> <span class='token operator'>===</span> key<span class='token punctuation'>)</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />        parentKey <span class='token operator'>=</span> node<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span> <span class='token keyword control-flow'>else</span> <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span><span class='token function'>getParentKey</span><span class='token punctuation'>(</span>key<span class='token punctuation'>,</span> node<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />        parentKey <span class='token operator'>=</span> <span class='token function'>getParentKey</span><span class='token punctuation'>(</span>key<span class='token punctuation'>,</span> node<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><br />    <span class='token punctuation'>}</span><br />  <span class='token punctuation'>}</span><br />  <span class='token keyword control-flow'>return</span> parentKey<span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>class</span> <span class='token class-name'>SearchTree</span> <span class='token keyword'>extends</span> <span class='token class-name'>React<span class='token punctuation'>.</span>Component</span> <span class='token punctuation'>{</span><br />  state <span class='token operator'>=</span> <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>expandedKeys</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>searchValue</span><span class='token operator'>:</span> <span class='token string'>''</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>autoExpandParent</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>onExpand</span> <span class='token operator'>=</span> <span class='token parameter'>expandedKeys</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span><br />      expandedKeys<span class='token punctuation'>,</span><br />      <span class='token literal-property property'>autoExpandParent</span><span class='token operator'>:</span> <span class='token boolean'>false</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>onChange</span> <span class='token operator'>=</span> <span class='token parameter'>e</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> <span class='token punctuation'>{</span> value <span class='token punctuation'>}</span> <span class='token operator'>=</span> e<span class='token punctuation'>.</span><span class='token property-access'>target</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> expandedKeys <span class='token operator'>=</span> dataList<br />      <span class='token punctuation'>.</span><span class='token method function property-access'>map</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />        <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>.</span><span class='token method function property-access'>indexOf</span><span class='token punctuation'>(</span>value<span class='token punctuation'>)</span> <span class='token operator'>></span> <span class='token operator'>-</span><span class='token number'>1</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />          <span class='token keyword control-flow'>return</span> <span class='token function'>getParentKey</span><span class='token punctuation'>(</span>item<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>,</span> gData<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token punctuation'>}</span><br />        <span class='token keyword control-flow'>return</span> <span class='token keyword null nil'>null</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>)</span><br />      <span class='token punctuation'>.</span><span class='token method function property-access'>filter</span><span class='token punctuation'>(</span><span class='token punctuation'>(</span><span class='token parameter'>item<span class='token punctuation'>,</span> i<span class='token punctuation'>,</span> self</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> item <span class='token operator'>&amp;&amp;</span> self<span class='token punctuation'>.</span><span class='token method function property-access'>indexOf</span><span class='token punctuation'>(</span>item<span class='token punctuation'>)</span> <span class='token operator'>===</span> i<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span><br />      expandedKeys<span class='token punctuation'>,</span><br />      <span class='token literal-property property'>searchValue</span><span class='token operator'>:</span> value<span class='token punctuation'>,</span><br />      <span class='token literal-property property'>autoExpandParent</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function'>render</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> <span class='token punctuation'>{</span> searchValue<span class='token punctuation'>,</span> expandedKeys<span class='token punctuation'>,</span> autoExpandParent <span class='token punctuation'>}</span> <span class='token operator'>=</span> <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>state</span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> <span class='token function-variable function'>loop</span> <span class='token operator'>=</span> <span class='token parameter'>data</span> <span class='token arrow operator'>=></span><br />      data<span class='token punctuation'>.</span><span class='token method function property-access'>map</span><span class='token punctuation'>(</span><span class='token parameter'>item</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />        <span class='token keyword'>const</span> index <span class='token operator'>=</span> item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>.</span><span class='token method function property-access'>indexOf</span><span class='token punctuation'>(</span>searchValue<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token keyword'>const</span> beforeStr <span class='token operator'>=</span> item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>.</span><span class='token method function property-access'>substr</span><span class='token punctuation'>(</span><span class='token number'>0</span><span class='token punctuation'>,</span> index<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token keyword'>const</span> afterStr <span class='token operator'>=</span> item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>.</span><span class='token method function property-access'>substr</span><span class='token punctuation'>(</span>index <span class='token operator'>+</span> searchValue<span class='token punctuation'>.</span><span class='token property-access'>length</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token keyword'>const</span> title <span class='token operator'>=</span><br />          index <span class='token operator'>></span> <span class='token operator'>-</span><span class='token number'>1</span> <span class='token operator'>?</span> <span class='token punctuation'>(</span><br />            <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>span</span><span class='token punctuation'>></span></span><br />              <span class='token punctuation'>{</span>beforeStr<span class='token punctuation'>}</span><br />              <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>span</span> <span class='token attr-name'>className</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>site-tree-search-value<span class='token punctuation'>'</span></span><span class='token punctuation'>></span></span><span class='token punctuation'>{</span>searchValue<span class='token punctuation'>}</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>span</span><span class='token punctuation'>></span></span><br />              <span class='token punctuation'>{</span>afterStr<span class='token punctuation'>}</span><br />            <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>span</span><span class='token punctuation'>></span></span><br />          <span class='token punctuation'>)</span> <span class='token operator'>:</span> <span class='token punctuation'>(</span><br />            <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>span</span><span class='token punctuation'>></span></span><span class='token punctuation'>{</span>item<span class='token punctuation'>.</span><span class='token property-access'>title</span><span class='token punctuation'>}</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>span</span><span class='token punctuation'>></span></span><br />          <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />        <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>item<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />          <span class='token keyword control-flow'>return</span> <span class='token punctuation'>{</span> title<span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> item<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>,</span> <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token function'>loop</span><span class='token punctuation'>(</span>item<span class='token punctuation'>.</span><span class='token property-access'>children</span><span class='token punctuation'>)</span> <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />        <span class='token punctuation'>}</span><br /><br />        <span class='token keyword control-flow'>return</span> <span class='token punctuation'>{</span><br />          title<span class='token punctuation'>,</span><br />          <span class='token literal-property property'>key</span><span class='token operator'>:</span> item<span class='token punctuation'>.</span><span class='token property-access'>key</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span><span class='token punctuation'>></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Search</span></span> <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span> <span class='token literal-property property'>marginBottom</span><span class='token operator'>:</span> <span class='token number'>8</span> <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span> <span class='token attr-name'>placeholder</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>Search<span class='token punctuation'>'</span></span> <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>onChange</span><span class='token punctuation'>}</span></span> <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span><br />          <span class='token attr-name'>onExpand</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>onExpand</span><span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>expandedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>expandedKeys<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>autoExpandParent</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>autoExpandParent<span class='token punctuation'>}</span></span><br />          <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token function'>loop</span><span class='token punctuation'>(</span>gData<span class='token punctuation'>)</span><span class='token punctuation'>}</span></span><br />        <span class='token punctuation'>/></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />    <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>SearchTree</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  }), /* @__PURE__ */ React.createElement(CellCode.Css, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-css'><span class='token selector'><span class='token class'>.site-tree-search-value</span></span> <span class='token punctuation'>{</span><br />  <span class='token property'>color</span><span class='token punctuation'>:</span> <span class='token hexcode color'>#f50</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /><span class='token selector'><span class='token attribute'><span class='token punctuation'>[</span><span class='token attr-name'>data-theme</span><span class='token operator'>=</span><span class='token attr-value'>'dark'</span><span class='token punctuation'>]</span></span> <span class='token class'>.site-tree-search-value</span></span> <span class='token punctuation'>{</span><br />  <span class='token property'>color</span><span class='token punctuation'>:</span> <span class='token hexcode color'>#d84a1b</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(\"style\", null, '\\n.site-tree-search-value {\\n  color: #f50;\\n}\\n[data-theme=\"dark\"] .site-tree-search-value {\\n  color: #d84a1b;\\n}\\n')));\n  ;\n  return __export;\n}\nfunction Demo5() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _typeof = require(\"@babel/runtime/helpers/typeof\");\n  var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n  var _react = _interopRequireWildcard(require(\"react\"));\n  var _mui = require(\"@m-design/mui\");\n  var _icons = require(\"@ant-design/icons\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\")\n      return null;\n    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();\n    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {\n      return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n  }\n  function _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n      return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n      return { default: obj };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n  var treeData = [{\n    title: \"parent 1\",\n    key: \"0-0\",\n    icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }\n    }),\n    children: [{\n      title: \"parent 1-0\",\n      key: \"0-0-0\",\n      icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }\n      }),\n      children: [{\n        title: \"leaf\",\n        key: \"0-0-0-0\",\n        icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 19\n          }\n        })\n      }, {\n        title: /* @__PURE__ */ _react.default.createElement(_react.default.Fragment, null, /* @__PURE__ */ _react.default.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }\n        }, \"multiple line title\"), /* @__PURE__ */ _react.default.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }\n        }, \"multiple line title\")),\n        key: \"0-0-0-1\",\n        icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }\n        })\n      }, {\n        title: \"leaf\",\n        key: \"0-0-0-2\",\n        icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 19\n          }\n        })\n      }]\n    }, {\n      title: \"parent 1-1\",\n      key: \"0-0-1\",\n      icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }),\n      children: [{\n        title: \"leaf\",\n        key: \"0-0-1-0\",\n        icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }\n        })\n      }]\n    }, {\n      title: \"parent 1-2\",\n      key: \"0-0-2\",\n      icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }),\n      children: [{\n        title: \"leaf\",\n        key: \"0-0-2-0\",\n        icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }\n        })\n      }, {\n        title: \"leaf\",\n        key: \"0-0-2-1\",\n        icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }\n        }),\n        switcherIcon: /* @__PURE__ */ _react.default.createElement(_icons.FormOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 27\n          }\n        })\n      }]\n    }]\n  }, {\n    title: \"parent 2\",\n    key: \"0-1\",\n    icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }),\n    children: [{\n      title: \"parent 2-0\",\n      key: \"0-1-0\",\n      icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }),\n      children: [{\n        title: \"leaf\",\n        key: \"0-1-0-0\",\n        icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }\n        })\n      }, {\n        title: \"leaf\",\n        key: \"0-1-0-1\",\n        icon: /* @__PURE__ */ _react.default.createElement(_icons.CarryOutOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }\n        })\n      }]\n    }]\n  }];\n  var Demo = function Demo11() {\n    var _useState = (0, _react.useState)(true), _useState2 = (0, _slicedToArray2.default)(_useState, 2), showLine = _useState2[0], setShowLine = _useState2[1];\n    var _useState3 = (0, _react.useState)(false), _useState4 = (0, _slicedToArray2.default)(_useState3, 2), showIcon = _useState4[0], setShowIcon = _useState4[1];\n    var _useState5 = (0, _react.useState)(true), _useState6 = (0, _slicedToArray2.default)(_useState5, 2), showLeafIcon = _useState6[0], setShowLeafIcon = _useState6[1];\n    var onSelect = function onSelect2(selectedKeys, info) {\n      console.log(\"selected\", selectedKeys, info);\n    };\n    var onSetLeafIcon = function onSetLeafIcon2(checked) {\n      setShowLeafIcon(checked);\n      setShowLine({\n        showLeafIcon: checked\n      });\n    };\n    var onSetShowLine = function onSetShowLine2(checked) {\n      setShowLine(checked ? {\n        showLeafIcon\n      } : false);\n    };\n    return /* @__PURE__ */ _react.default.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }\n    }, /* @__PURE__ */ _react.default.createElement(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, \"showLine: \", /* @__PURE__ */ _react.default.createElement(_mui.Switch, {\n      checked: !!showLine,\n      onChange: onSetShowLine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }), /* @__PURE__ */ _react.default.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }), /* @__PURE__ */ _react.default.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }), \"showIcon: \", /* @__PURE__ */ _react.default.createElement(_mui.Switch, {\n      checked: showIcon,\n      onChange: setShowIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }), /* @__PURE__ */ _react.default.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }), /* @__PURE__ */ _react.default.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }), \"showLeafIcon: \", /* @__PURE__ */ _react.default.createElement(_mui.Switch, {\n      checked: showLeafIcon,\n      onChange: onSetLeafIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    })), /* @__PURE__ */ _react.default.createElement(_mui.Tree, {\n      showLine,\n      showIcon,\n      defaultExpandedKeys: [\"0-0-0\"],\n      onSelect,\n      treeData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }));\n  };\n  var __export = /* @__PURE__ */ _react.default.createElement(CodeBlockWrapper, {\n    id: \"\\u8FDE\\u63A5\\u7EBF\"\n  }, /* @__PURE__ */ _react.default.createElement(CellDescription, null, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#\\u8FDE\\u63A5\\u7EBF'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>\\u8FDE\\u63A5\\u7EBF</h2><p>\\u8282\\u70B9\\u4E4B\\u95F4\\u5E26\\u8FDE\\u63A5\\u7EBF\\u7684\\u6811\\uFF0C\\u5E38\\u7528\\u4E8E\\u6587\\u4EF6\\u76EE\\u5F55\\u7ED3\\u6784\\u5C55\\u793A\\u3002\\u4F7F\\u7528 <code>showLine</code> \\u5F00\\u542F\\uFF0C\\u53EF\\u4EE5\\u7528 <code>switcherIcon</code> \\u4FEE\\u6539\\u9ED8\\u8BA4\\u56FE\\u6807\\u3002</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellDemo, null, /* @__PURE__ */ _react.default.createElement(Demo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ _react.default.createElement(CellCode, {\n    tsx: /* @__PURE__ */ _react.default.createElement(\"div\", {\n      className: \"code-preview\",\n      dangerouslySetInnerHTML: {\n        __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token maybe-class-name'>React</span><span class='token punctuation'>,</span> <span class='token punctuation'>{</span> useState <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'react'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>Switch</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>CarryOutOutlined</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>FormOutlined</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@ant-design/icons'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token punctuation'>(</span><br />              <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span></span><span class='token punctuation'>></span></span><br />                <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span><span class='token punctuation'>></span></span>multiple line title<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />                <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span><span class='token punctuation'>></span></span>multiple line title<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />              <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span></span><span class='token punctuation'>></span></span><br />            <span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-1'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-2'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span> <span class='token punctuation'>}</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1-2'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-2'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-2-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-2-1'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>switcherIcon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>FormOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 2'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 2-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-1'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token literal-property property'>Demo</span><span class='token operator'>:</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token constant'>FC</span><span class='token operator'>&lt;</span><span class='token punctuation'>{</span><span class='token punctuation'>}</span><span class='token operator'>></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>showLine<span class='token punctuation'>,</span> setShowLine<span class='token punctuation'>]</span> <span class='token operator'>=</span> useState<span class='token operator'>&lt;</span>boolean <span class='token operator'>|</span> <span class='token punctuation'>{</span> <span class='token literal-property property'>showLeafIcon</span><span class='token operator'>:</span> boolean <span class='token punctuation'>}</span><span class='token operator'>></span><span class='token punctuation'>(</span><span class='token boolean'>true</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>showIcon<span class='token punctuation'>,</span> setShowIcon<span class='token punctuation'>]</span> <span class='token operator'>=</span> useState<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>boolean</span><span class='token punctuation'>></span></span><span class='token punctuation'>(</span><span class='token boolean'>false</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>showLeafIcon<span class='token punctuation'>,</span> setShowLeafIcon<span class='token punctuation'>]</span> <span class='token operator'>=</span> useState<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>boolean</span><span class='token punctuation'>></span></span><span class='token punctuation'>(</span><span class='token boolean'>true</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSelect</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token literal-property property'>selectedKeys</span><span class='token operator'>:</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token property-access'><span class='token maybe-class-name'>Key</span></span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span> <span class='token literal-property property'>info</span><span class='token operator'>:</span> any</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'selected'</span><span class='token punctuation'>,</span> selectedKeys<span class='token punctuation'>,</span> info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSetLeafIcon</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token literal-property property'>checked</span><span class='token operator'>:</span> boolean</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token function'>setShowLeafIcon</span><span class='token punctuation'>(</span>checked<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setShowLine</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> <span class='token literal-property property'>showLeafIcon</span><span class='token operator'>:</span> checked <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSetShowLine</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token literal-property property'>checked</span><span class='token operator'>:</span> boolean</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token function'>setShowLine</span><span class='token punctuation'>(</span>checked <span class='token operator'>?</span> <span class='token punctuation'>{</span> showLeafIcon <span class='token punctuation'>}</span> <span class='token operator'>:</span> <span class='token boolean'>false</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span><span class='token punctuation'>></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span> <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span> <span class='token literal-property property'>marginBottom</span><span class='token operator'>:</span> <span class='token number'>16</span> <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><span class='token punctuation'>></span></span><br />        <span class='token literal-property property'>showLine</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Switch</span></span> <span class='token attr-name'>checked</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token operator'>!</span><span class='token operator'>!</span>showLine<span class='token punctuation'>}</span></span> <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSetShowLine<span class='token punctuation'>}</span></span> <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>br</span> <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>br</span> <span class='token punctuation'>/></span></span><br />        <span class='token literal-property property'>showIcon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Switch</span></span> <span class='token attr-name'>checked</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>showIcon<span class='token punctuation'>}</span></span> <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>setShowIcon<span class='token punctuation'>}</span></span> <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>br</span> <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>br</span> <span class='token punctuation'>/></span></span><br />        <span class='token literal-property property'>showLeafIcon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Switch</span></span> <span class='token attr-name'>checked</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>showLeafIcon<span class='token punctuation'>}</span></span> <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSetLeafIcon<span class='token punctuation'>}</span></span> <span class='token punctuation'>/></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span><br />        <span class='token attr-name'>showLine</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>showLine<span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>showIcon</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>showIcon<span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>defaultExpandedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>]</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>onSelect</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSelect<span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span><br />      <span class='token punctuation'>/></span></span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span></code></pre></div>\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4,\n        columnNumber: 9\n      }\n    })\n  }, /* @__PURE__ */ _react.default.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token maybe-class-name'>React</span><span class='token punctuation'>,</span> <span class='token punctuation'>{</span> useState <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'react'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>Switch</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>CarryOutOutlined</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>FormOutlined</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@ant-design/icons'</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-0'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token punctuation'>(</span><br />              <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span></span><span class='token punctuation'>></span></span><br />                <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span><span class='token punctuation'>></span></span>multiple line title<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />                <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span><span class='token punctuation'>></span></span>multiple line title<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />              <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span></span><span class='token punctuation'>></span></span><br />            <span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-1'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-2'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-0'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1-2'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-2'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-2-0'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-2-1'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>switcherIcon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>FormOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 2'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 2-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-0'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0-1'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>CarryOutOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>Demo</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>showLine<span class='token punctuation'>,</span> setShowLine<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span><span class='token boolean'>true</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>showIcon<span class='token punctuation'>,</span> setShowIcon<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span><span class='token boolean'>false</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token keyword'>const</span> <span class='token punctuation'>[</span>showLeafIcon<span class='token punctuation'>,</span> setShowLeafIcon<span class='token punctuation'>]</span> <span class='token operator'>=</span> <span class='token function'>useState</span><span class='token punctuation'>(</span><span class='token boolean'>true</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSelect</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>selectedKeys<span class='token punctuation'>,</span> info</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'selected'</span><span class='token punctuation'>,</span> selectedKeys<span class='token punctuation'>,</span> info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSetLeafIcon</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>checked</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token function'>setShowLeafIcon</span><span class='token punctuation'>(</span>checked<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token function'>setShowLine</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span><br />      <span class='token literal-property property'>showLeafIcon</span><span class='token operator'>:</span> checked<span class='token punctuation'>,</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSetShowLine</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>checked</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token function'>setShowLine</span><span class='token punctuation'>(</span><br />      checked<br />        <span class='token operator'>?</span> <span class='token punctuation'>{</span><br />            showLeafIcon<span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><br />        <span class='token operator'>:</span> <span class='token boolean'>false</span><br />    <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span><span class='token punctuation'>></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span><br />        <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span><br />          <span class='token literal-property property'>marginBottom</span><span class='token operator'>:</span> <span class='token number'>16</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><br />      <span class='token punctuation'>></span></span><br />        <span class='token literal-property property'>showLine</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Switch</span></span> <span class='token attr-name'>checked</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token operator'>!</span><span class='token operator'>!</span>showLine<span class='token punctuation'>}</span></span> <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSetShowLine<span class='token punctuation'>}</span></span> <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>br</span> <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>br</span> <span class='token punctuation'>/></span></span><br />        <span class='token literal-property property'>showIcon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Switch</span></span> <span class='token attr-name'>checked</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>showIcon<span class='token punctuation'>}</span></span> <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>setShowIcon<span class='token punctuation'>}</span></span> <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>br</span> <span class='token punctuation'>/></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>br</span> <span class='token punctuation'>/></span></span><br />        <span class='token literal-property property'>showLeafIcon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Switch</span></span> <span class='token attr-name'>checked</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>showLeafIcon<span class='token punctuation'>}</span></span> <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSetLeafIcon<span class='token punctuation'>}</span></span> <span class='token punctuation'>/></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span><br />        <span class='token attr-name'>showLine</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>showLine<span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>showIcon</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>showIcon<span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>defaultExpandedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>]</span><span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>onSelect</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSelect<span class='token punctuation'>}</span></span><br />        <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span><br />      <span class='token punctuation'>/></span></span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo6() {\n  \"use strict\";\n  var _mui = require(\"@m-design/mui\");\n  var _icons = require(\"@ant-design/icons\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  var treeData = [{\n    title: \"parent 1\",\n    key: \"0-0\",\n    icon: /* @__PURE__ */ React.createElement(_icons.SmileOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }),\n    children: [{\n      title: \"leaf\",\n      key: \"0-0-0\",\n      icon: /* @__PURE__ */ React.createElement(_icons.MehOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }\n      })\n    }, {\n      title: \"leaf\",\n      key: \"0-0-1\",\n      icon: function icon(_ref) {\n        var selected = _ref.selected;\n        return selected ? /* @__PURE__ */ React.createElement(_icons.FrownFilled, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 45\n          }\n        }) : /* @__PURE__ */ React.createElement(_icons.FrownOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 63\n          }\n        });\n      }\n    }]\n  }];\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"\\u81EA\\u5B9A\\u4E49\\u56FE\\u6807\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#\\u81EA\\u5B9A\\u4E49\\u56FE\\u6807'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>\\u81EA\\u5B9A\\u4E49\\u56FE\\u6807</h2><p>\\u53EF\\u4EE5\\u9488\\u5BF9\\u4E0D\\u540C\\u7684\\u8282\\u70B9\\u5B9A\\u5236\\u56FE\\u6807\\u3002</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(_mui.Tree, {\n    showIcon: true,\n    defaultExpandAll: true,\n    defaultSelectedKeys: [\"0-0-0\"],\n    switcherIcon: /* @__PURE__ */ React.createElement(_icons.DownOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }),\n    treeData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span><br />  <span class='token maybe-class-name'>DownOutlined</span><span class='token punctuation'>,</span><br />  <span class='token maybe-class-name'>FrownOutlined</span><span class='token punctuation'>,</span><br />  <span class='token maybe-class-name'>SmileOutlined</span><span class='token punctuation'>,</span><br />  <span class='token maybe-class-name'>MehOutlined</span><span class='token punctuation'>,</span><br />  <span class='token maybe-class-name'>FrownFilled</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@ant-design/icons'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>SmileOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>icon</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>MehOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token function-variable function'>icon</span><span class='token operator'>:</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token punctuation'>{</span> selected <span class='token punctuation'>}</span></span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>(</span>selected <span class='token operator'>?</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>FrownFilled</span></span> <span class='token punctuation'>/></span></span> <span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>FrownOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>)</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><br />  <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span><br />    <span class='token attr-name'>showIcon</span><br />    <span class='token attr-name'>defaultExpandAll</span><br />    <span class='token attr-name'>defaultSelectedKeys</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>]</span><span class='token punctuation'>}</span></span><br />    <span class='token attr-name'>switcherIcon</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>DownOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>}</span></span><br />    <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span><br />  <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span><br />  mountNode<span class='token punctuation'>,</span><br /><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo7() {\n  \"use strict\";\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  var DirectoryTree = _mui.Tree.DirectoryTree;\n  var treeData = [{\n    title: \"parent 0\",\n    key: \"0-0\",\n    children: [{\n      title: \"leaf 0-0\",\n      key: \"0-0-0\",\n      isLeaf: true\n    }, {\n      title: \"leaf 0-1\",\n      key: \"0-0-1\",\n      isLeaf: true\n    }]\n  }, {\n    title: \"parent 1\",\n    key: \"0-1\",\n    children: [{\n      title: \"leaf 1-0\",\n      key: \"0-1-0\",\n      isLeaf: true\n    }, {\n      title: \"leaf 1-1\",\n      key: \"0-1-1\",\n      isLeaf: true\n    }]\n  }];\n  var Demo = function Demo11() {\n    var onSelect = function onSelect2(keys, info) {\n      console.log(\"Trigger Select\", keys, info);\n    };\n    var onExpand = function onExpand2() {\n      console.log(\"Trigger Expand\");\n    };\n    return /* @__PURE__ */ React.createElement(DirectoryTree, {\n      multiple: true,\n      defaultExpandAll: true,\n      onSelect,\n      onExpand,\n      treeData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    });\n  };\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"\\u76EE\\u5F55\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#\\u76EE\\u5F55'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>\\u76EE\\u5F55</h2><p>\\u5185\\u7F6E\\u7684\\u76EE\\u5F55\\u6811\\uFF0C<code>multiple</code> \\u6A21\\u5F0F\\u652F\\u6301 <code>ctrl(Windows)</code> / <code>command(Mac)</code> \\u590D\\u9009\\u3002</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(Demo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, {\n    tsx: /* @__PURE__ */ React.createElement(\"div\", {\n      className: \"code-preview\",\n      dangerouslySetInnerHTML: {\n        __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token punctuation'>{</span> <span class='token maybe-class-name'>DirectoryTree</span> <span class='token punctuation'>}</span> <span class='token operator'>=</span> <span class='token maybe-class-name'>Tree</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf 0-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>isLeaf</span><span class='token operator'>:</span> <span class='token boolean'>true</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf 0-1'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>isLeaf</span><span class='token operator'>:</span> <span class='token boolean'>true</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf 1-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>isLeaf</span><span class='token operator'>:</span> <span class='token boolean'>true</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf 1-1'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-1'</span><span class='token punctuation'>,</span> <span class='token literal-property property'>isLeaf</span><span class='token operator'>:</span> <span class='token boolean'>true</span> <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token literal-property property'>Demo</span><span class='token operator'>:</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token constant'>FC</span><span class='token operator'>&lt;</span><span class='token punctuation'>{</span><span class='token punctuation'>}</span><span class='token operator'>></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSelect</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'><span class='token literal-property property'>keys</span><span class='token operator'>:</span> <span class='token maybe-class-name'>React</span><span class='token punctuation'>.</span><span class='token property-access'><span class='token maybe-class-name'>Key</span></span><span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span> <span class='token literal-property property'>info</span><span class='token operator'>:</span> any</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'Trigger Select'</span><span class='token punctuation'>,</span> keys<span class='token punctuation'>,</span> info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onExpand</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'Trigger Expand'</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>DirectoryTree</span></span><br />      <span class='token attr-name'>multiple</span><br />      <span class='token attr-name'>defaultExpandAll</span><br />      <span class='token attr-name'>onSelect</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSelect<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onExpand</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onExpand<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span><br />    <span class='token punctuation'>/></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span></code></pre></div>\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4,\n        columnNumber: 9\n      }\n    })\n  }, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> <span class='token punctuation'>{</span> <span class='token maybe-class-name'>DirectoryTree</span> <span class='token punctuation'>}</span> <span class='token operator'>=</span> <span class='token maybe-class-name'>Tree</span><span class='token punctuation'>;</span><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf 0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>isLeaf</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf 0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>isLeaf</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf 1-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>isLeaf</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf 1-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-1-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>isLeaf</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> <span class='token function-variable function'><span class='token maybe-class-name'>Demo</span></span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onSelect</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>keys<span class='token punctuation'>,</span> info</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'Trigger Select'</span><span class='token punctuation'>,</span> keys<span class='token punctuation'>,</span> info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword'>const</span> <span class='token function-variable function'>onExpand</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'Trigger Expand'</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />    <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>DirectoryTree</span></span><br />      <span class='token attr-name'>multiple</span><br />      <span class='token attr-name'>defaultExpandAll</span><br />      <span class='token attr-name'>onSelect</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onSelect<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>onExpand</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>onExpand<span class='token punctuation'>}</span></span><br />      <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span><br />    <span class='token punctuation'>/></span></span><br />  <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo8() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n  var _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n  var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n  var _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n  var _mui = require(\"@m-design/mui\");\n  var _icons = require(\"@ant-design/icons\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = (0, _getPrototypeOf2.default)(Derived), result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct)\n      return false;\n    if (Reflect.construct.sham)\n      return false;\n    if (typeof Proxy === \"function\")\n      return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n      }));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  var Demo = /* @__PURE__ */ function(_React$Component) {\n    (0, _inherits2.default)(Demo11, _React$Component);\n    var _super = _createSuper(Demo11);\n    function Demo11() {\n      var _this;\n      (0, _classCallCheck2.default)(this, Demo11);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onSelect\", function(selectedKeys, info) {\n        console.log(\"selected\", selectedKeys, info);\n      });\n      return _this;\n    }\n    (0, _createClass2.default)(Demo11, [{\n      key: \"render\",\n      value: function render() {\n        return /* @__PURE__ */ React.createElement(_mui.Tree, {\n          showLine: true,\n          switcherIcon: /* @__PURE__ */ React.createElement(_icons.DownOutlined, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 23\n            }\n          }),\n          defaultExpandedKeys: [\"0-0-0\"],\n          onSelect: this.onSelect,\n          treeData: [{\n            title: \"parent 1\",\n            key: \"0-0\",\n            children: [{\n              title: \"parent 1-0\",\n              key: \"0-0-0\",\n              children: [{\n                title: \"leaf\",\n                key: \"0-0-0-0\"\n              }, {\n                title: \"leaf\",\n                key: \"0-0-0-1\"\n              }, {\n                title: \"leaf\",\n                key: \"0-0-0-2\"\n              }]\n            }, {\n              title: \"parent 1-1\",\n              key: \"0-0-1\",\n              children: [{\n                title: \"leaf\",\n                key: \"0-0-1-0\"\n              }]\n            }, {\n              title: \"parent 1-2\",\n              key: \"0-0-2\",\n              children: [{\n                title: \"leaf\",\n                key: \"0-0-2-0\"\n              }, {\n                title: \"leaf\",\n                key: \"0-0-2-1\"\n              }]\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 7\n          }\n        });\n      }\n    }]);\n    return Demo11;\n  }(React.Component);\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"\\u81EA\\u5B9A\\u4E49\\u5C55\\u5F00/\\u6298\\u53E0\\u56FE\\u6807\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#\\u81EA\\u5B9A\\u4E49\\u5C55\\u5F00/\\u6298\\u53E0\\u56FE\\u6807'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>\\u81EA\\u5B9A\\u4E49\\u5C55\\u5F00/\\u6298\\u53E0\\u56FE\\u6807</h2><p>\\u81EA\\u5B9A\\u4E49\\u5C55\\u5F00/\\u6298\\u53E0\\u56FE\\u6807\\u3002</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(Demo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>DownOutlined</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@ant-design/icons'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>class</span> <span class='token class-name'>Demo</span> <span class='token keyword'>extends</span> <span class='token class-name'>React<span class='token punctuation'>.</span>Component</span> <span class='token punctuation'>{</span><br />  <span class='token function-variable function'>onSelect</span> <span class='token operator'>=</span> <span class='token punctuation'>(</span><span class='token parameter'>selectedKeys<span class='token punctuation'>,</span> info</span><span class='token punctuation'>)</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token console class-name'>console</span><span class='token punctuation'>.</span><span class='token method function property-access'>log</span><span class='token punctuation'>(</span><span class='token string'>'selected'</span><span class='token punctuation'>,</span> selectedKeys<span class='token punctuation'>,</span> info<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function'>render</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />      <span class='token operator'>&lt;</span><span class='token maybe-class-name'>Tree</span><br />        showLine<br />        switcherIcon<span class='token operator'>=</span><span class='token punctuation'>{</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>DownOutlined</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>}</span><br />        defaultExpandedKeys<span class='token operator'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><span class='token string'>'0-0-0'</span><span class='token punctuation'>]</span><span class='token punctuation'>}</span><br />        onSelect<span class='token operator'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>onSelect</span><span class='token punctuation'>}</span><br />        treeData<span class='token operator'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />              <span class='token punctuation'>{</span><br />                <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1-0'</span><span class='token punctuation'>,</span><br />                <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />                <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />                  <span class='token punctuation'>{</span><br />                    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />                    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-0'</span><span class='token punctuation'>,</span><br />                  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />                  <span class='token punctuation'>{</span><br />                    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />                    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-1'</span><span class='token punctuation'>,</span><br />                  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />                  <span class='token punctuation'>{</span><br />                    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />                    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-2'</span><span class='token punctuation'>,</span><br />                  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />                <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />              <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />              <span class='token punctuation'>{</span><br />                <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1-1'</span><span class='token punctuation'>,</span><br />                <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />                <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />                  <span class='token punctuation'>{</span><br />                    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />                    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-0'</span><span class='token punctuation'>,</span><br />                  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />                <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />              <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />              <span class='token punctuation'>{</span><br />                <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'parent 1-2'</span><span class='token punctuation'>,</span><br />                <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-2'</span><span class='token punctuation'>,</span><br />                <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />                  <span class='token punctuation'>{</span><br />                    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />                    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-2-0'</span><span class='token punctuation'>,</span><br />                  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />                  <span class='token punctuation'>{</span><br />                    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'leaf'</span><span class='token punctuation'>,</span><br />                    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-2-1'</span><span class='token punctuation'>,</span><br />                  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />                <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />              <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />            <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>}</span><br />      <span class='token operator'>/</span><span class='token operator'>></span><br />    <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo9() {\n  \"use strict\";\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function dig() {\n    var path = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"0\";\n    var level = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3;\n    var list = [];\n    for (var i = 0; i < 10; i += 1) {\n      var key = \"\".concat(path, \"-\").concat(i);\n      var treeNode = {\n        title: key,\n        key\n      };\n      if (level > 0) {\n        treeNode.children = dig(key, level - 1);\n      }\n      list.push(treeNode);\n    }\n    return list;\n  }\n  var treeData = dig();\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"\\u865A\\u62DF\\u6EDA\\u52A8\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#\\u865A\\u62DF\\u6EDA\\u52A8'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>\\u865A\\u62DF\\u6EDA\\u52A8</h2><p>\\u4F7F\\u7528 <code>height</code> \\u5C5E\\u6027\\u5219\\u5207\\u6362\\u4E3A\\u865A\\u62DF\\u6EDA\\u52A8\\u3002</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(_mui.Tree, {\n    treeData,\n    height: 233,\n    defaultExpandAll: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>function</span> <span class='token function'>dig</span><span class='token punctuation'>(</span>path <span class='token operator'>=</span> <span class='token string'>'0'</span><span class='token punctuation'>,</span> level <span class='token operator'>=</span> <span class='token number'>3</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />  <span class='token keyword'>const</span> list <span class='token operator'>=</span> <span class='token punctuation'>[</span><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br />  <span class='token keyword control-flow'>for</span> <span class='token punctuation'>(</span><span class='token keyword'>let</span> i <span class='token operator'>=</span> <span class='token number'>0</span><span class='token punctuation'>;</span> i <span class='token operator'>&lt;</span> <span class='token number'>10</span><span class='token punctuation'>;</span> i <span class='token operator'>+=</span> <span class='token number'>1</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> key <span class='token operator'>=</span> <span class='token template-string'><span class='token template-punctuation string'>`</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>path<span class='token interpolation-punctuation punctuation'>}</span></span><span class='token string'>-</span><span class='token interpolation'><span class='token interpolation-punctuation punctuation'>${</span>i<span class='token interpolation-punctuation punctuation'>}</span></span><span class='token template-punctuation string'>`</span></span><span class='token punctuation'>;</span><br />    <span class='token keyword'>const</span> treeNode <span class='token operator'>=</span> <span class='token punctuation'>{</span><br />      <span class='token literal-property property'>title</span><span class='token operator'>:</span> key<span class='token punctuation'>,</span><br />      key<span class='token punctuation'>,</span><br />    <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />    <span class='token keyword control-flow'>if</span> <span class='token punctuation'>(</span>level <span class='token operator'>></span> <span class='token number'>0</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />      treeNode<span class='token punctuation'>.</span><span class='token property-access'>children</span> <span class='token operator'>=</span> <span class='token function'>dig</span><span class='token punctuation'>(</span>key<span class='token punctuation'>,</span> level <span class='token operator'>-</span> <span class='token number'>1</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />    <span class='token punctuation'>}</span><br /><br />    list<span class='token punctuation'>.</span><span class='token method function property-access'>push</span><span class='token punctuation'>(</span>treeNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br />  <span class='token keyword control-flow'>return</span> list<span class='token punctuation'>;</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token function'>dig</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span> <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span> <span class='token attr-name'>height</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token number'>233</span><span class='token punctuation'>}</span></span> <span class='token attr-name'>defaultExpandAll</span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\nfunction Demo10() {\n  \"use strict\";\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n  var _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n  var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n  var _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n  var _mui = require(\"@m-design/mui\");\n  var _jsxFileName = \"D:\\\\items\\\\meetsocial\\\\npm\\\\cn.sino.mui\";\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = (0, _getPrototypeOf2.default)(Derived), result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct)\n      return false;\n    if (Reflect.construct.sham)\n      return false;\n    if (typeof Proxy === \"function\")\n      return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n      }));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  var treeData = [{\n    title: \"Trunk 1\",\n    key: \"0-0\",\n    children: [{\n      title: \"Branch 1-0\",\n      key: \"0-0-0\",\n      disabled: true,\n      children: [{\n        title: \"Leaf\",\n        key: \"0-0-0-0\",\n        disableCheckbox: true\n      }, {\n        title: \"Leaf\",\n        key: \"0-0-0-1\"\n      }]\n    }, {\n      title: \"Branch 1-1\",\n      key: \"0-0-1\",\n      children: [{\n        title: /* @__PURE__ */ React.createElement(\"span\", {\n          style: {\n            color: \"#1890ff\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }\n        }, \"sss\"),\n        key: \"0-0-1-0\"\n      }]\n    }]\n  }];\n  var Demo = /* @__PURE__ */ function(_React$Component) {\n    (0, _inherits2.default)(Demo11, _React$Component);\n    var _super = _createSuper(Demo11);\n    function Demo11() {\n      var _this;\n      (0, _classCallCheck2.default)(this, Demo11);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n        size: \"small\"\n      });\n      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onChange\", function(e) {\n        _this.setState({\n          size: e.target.value\n        });\n      });\n      return _this;\n    }\n    (0, _createClass2.default)(Demo11, [{\n      key: \"render\",\n      value: function render() {\n        var size = this.state.size;\n        return /* @__PURE__ */ React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }\n        }, /* @__PURE__ */ React.createElement(_mui.Radio.Group, {\n          value: size,\n          onChange: this.onChange,\n          style: {\n            marginBottom: 16\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, /* @__PURE__ */ React.createElement(_mui.Radio.Button, {\n          value: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }, \"default\"), /* @__PURE__ */ React.createElement(_mui.Radio.Button, {\n          value: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        }, \"middle\"), /* @__PURE__ */ React.createElement(_mui.Radio.Button, {\n          value: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }\n        }, \"large\")), /* @__PURE__ */ React.createElement(_mui.Tree, {\n          treeData,\n          height: 233,\n          defaultExpandAll: true,\n          size,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }\n        }));\n      }\n    }]);\n    return Demo11;\n  }(React.Component);\n  var __export = /* @__PURE__ */ React.createElement(CodeBlockWrapper, {\n    id: \"\\u4E09\\u79CD\\u5927\\u5C0F\"\n  }, /* @__PURE__ */ React.createElement(CellDescription, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><h2 class='ac-demo-title'><a href='#\\u4E09\\u79CD\\u5927\\u5C0F'><svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='currentColor' stroke-width='4'><path d='M14.1006 25.4142L9.15084 30.3639C6.8077 32.7071 6.8077 36.5061 9.15084 38.8492C11.494 41.1924 15.293 41.1924 17.6361 38.8492L26.1214 30.3639C28.4646 28.0208 28.4645 24.2218 26.1214 21.8786M33.8996 22.5858L38.8493 17.636C41.1925 15.2929 41.1925 11.4939 38.8493 9.15072C36.5062 6.80758 32.7072 6.80758 30.364 9.15072L21.8788 17.636C19.5356 19.9792 19.5356 23.7781 21.8788 26.1213' stroke-linecap='butt'></path></svg></a>\\u4E09\\u79CD\\u5927\\u5C0F</h2><p>tree \\u5C3A\\u5BF8\\u6709\\u4E09\\u79CD\\uFF0C\\u5C0F\\u3001\\u4E2D\\u3001\\u5927\\uFF0C\\u9AD8\\u5EA6\\u5206\\u522B\\u4E3A <code>32px</code>\\u3001<code>36px</code> \\u548C <code>40px</code>\\uFF0C\\u4F5C\\u7528\\u4E8E\\u8282\\u70B9\\u9AD8\\u3002</p></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })), /* @__PURE__ */ React.createElement(CellDemo, null, /* @__PURE__ */ React.createElement(Demo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /* @__PURE__ */ React.createElement(CellCode, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"code-preview\",\n    dangerouslySetInnerHTML: {\n      __html: \"<div><pre class='code_block'><code class='language-js'><span class='token keyword module'>import</span> <span class='token imports'><span class='token punctuation'>{</span> <span class='token maybe-class-name'>Tree</span><span class='token punctuation'>,</span> <span class='token maybe-class-name'>Radio</span> <span class='token punctuation'>}</span></span> <span class='token keyword module'>from</span> <span class='token string'>'@m-design/mui'</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>const</span> treeData <span class='token operator'>=</span> <span class='token punctuation'>[</span><br />  <span class='token punctuation'>{</span><br />    <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Trunk 1'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0'</span><span class='token punctuation'>,</span><br />    <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Branch 1-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>disabled</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-0'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>disableCheckbox</span><span class='token operator'>:</span> <span class='token boolean'>true</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>{</span><br />            <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Leaf'</span><span class='token punctuation'>,</span><br />            <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-0-1'</span><span class='token punctuation'>,</span><br />          <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />        <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>{</span><br />        <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token string'>'Branch 1-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1'</span><span class='token punctuation'>,</span><br />        <span class='token literal-property property'>children</span><span class='token operator'>:</span> <span class='token punctuation'>[</span><span class='token punctuation'>{</span> <span class='token literal-property property'>title</span><span class='token operator'>:</span> <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>span</span> <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span> <span class='token literal-property property'>color</span><span class='token operator'>:</span> <span class='token string'>'#1890ff'</span> <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><span class='token punctuation'>></span></span>sss<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>span</span><span class='token punctuation'>></span></span><span class='token punctuation'>,</span> <span class='token literal-property property'>key</span><span class='token operator'>:</span> <span class='token string'>'0-0-1-0'</span> <span class='token punctuation'>}</span><span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />      <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br />    <span class='token punctuation'>]</span><span class='token punctuation'>,</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>,</span><br /><span class='token punctuation'>]</span><span class='token punctuation'>;</span><br /><br /><span class='token keyword'>class</span> <span class='token class-name'>Demo</span> <span class='token keyword'>extends</span> <span class='token class-name'>React<span class='token punctuation'>.</span>Component</span> <span class='token punctuation'>{</span><br />  state <span class='token operator'>=</span> <span class='token punctuation'>{</span> <span class='token literal-property property'>size</span><span class='token operator'>:</span> <span class='token string'>'small'</span> <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function-variable function'>onChange</span> <span class='token operator'>=</span> <span class='token parameter'>e</span> <span class='token arrow operator'>=></span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token method function property-access'>setState</span><span class='token punctuation'>(</span><span class='token punctuation'>{</span> <span class='token literal-property property'>size</span><span class='token operator'>:</span> e<span class='token punctuation'>.</span><span class='token property-access'>target</span><span class='token punctuation'>.</span><span class='token property-access'>value</span> <span class='token punctuation'>}</span><span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><span class='token punctuation'>;</span><br /><br />  <span class='token function'>render</span><span class='token punctuation'>(</span><span class='token punctuation'>)</span> <span class='token punctuation'>{</span><br />    <span class='token keyword'>const</span> <span class='token punctuation'>{</span> size <span class='token punctuation'>}</span> <span class='token operator'>=</span> <span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>state</span><span class='token punctuation'>;</span><br />    <span class='token keyword control-flow'>return</span> <span class='token punctuation'>(</span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span>div</span><span class='token punctuation'>></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Radio.Group</span></span> <span class='token attr-name'>value</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>size<span class='token punctuation'>}</span></span> <span class='token attr-name'>onChange</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token keyword'>this</span><span class='token punctuation'>.</span><span class='token property-access'>onChange</span><span class='token punctuation'>}</span></span> <span class='token attr-name'>style</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token punctuation'>{</span> <span class='token literal-property property'>marginBottom</span><span class='token operator'>:</span> <span class='token number'>16</span> <span class='token punctuation'>}</span><span class='token punctuation'>}</span></span><span class='token punctuation'>></span></span><br />          <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Radio.Button</span></span> <span class='token attr-name'>value</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>small<span class='token punctuation'>'</span></span><span class='token punctuation'>></span></span><span class='token keyword module'>default</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span><span class='token class-name'>Radio.Button</span></span><span class='token punctuation'>></span></span><br />          <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Radio.Button</span></span> <span class='token attr-name'>value</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>middle<span class='token punctuation'>'</span></span><span class='token punctuation'>></span></span>middle<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span><span class='token class-name'>Radio.Button</span></span><span class='token punctuation'>></span></span><br />          <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Radio.Button</span></span> <span class='token attr-name'>value</span><span class='token attr-value'><span class='token punctuation attr-equals'>=</span><span class='token punctuation'>'</span>large<span class='token punctuation'>'</span></span><span class='token punctuation'>></span></span>large<span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span><span class='token class-name'>Radio.Button</span></span><span class='token punctuation'>></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span><span class='token class-name'>Radio.Group</span></span><span class='token punctuation'>></span></span><br />        <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Tree</span></span> <span class='token attr-name'>treeData</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>treeData<span class='token punctuation'>}</span></span> <span class='token attr-name'>height</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span><span class='token number'>233</span><span class='token punctuation'>}</span></span> <span class='token attr-name'>defaultExpandAll</span> <span class='token attr-name'>size</span><span class='token script language-javascript'><span class='token script-punctuation punctuation'>=</span><span class='token punctuation'>{</span>size<span class='token punctuation'>}</span></span> <span class='token punctuation'>/></span></span><br />      <span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;/</span>div</span><span class='token punctuation'>></span></span><br />    <span class='token punctuation'>)</span><span class='token punctuation'>;</span><br />  <span class='token punctuation'>}</span><br /><span class='token punctuation'>}</span><br /><br /><span class='token maybe-class-name'>ReactDOM</span><span class='token punctuation'>.</span><span class='token method function property-access'>render</span><span class='token punctuation'>(</span><span class='token tag'><span class='token tag'><span class='token punctuation'>&lt;</span><span class='token class-name'>Demo</span></span> <span class='token punctuation'>/></span></span><span class='token punctuation'>,</span> mountNode<span class='token punctuation'>)</span><span class='token punctuation'>;</span><br /></code></pre></div>\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }\n  })));\n  ;\n  return __export;\n}\n;\nclass Component extends React.Component {\n  render() {\n    return React.createElement(\"span\", {\n      className: \"arco-components-wrapper\",\n      style: this.props.style\n    }, React.createElement(Demo0, {\n      key: 0\n    }), React.createElement(Demo1, {\n      key: 1\n    }), React.createElement(Demo2, {\n      key: 2\n    }), React.createElement(Demo3, {\n      key: 3\n    }), React.createElement(Demo4, {\n      key: 4\n    }), React.createElement(Demo5, {\n      key: 5\n    }), React.createElement(Demo6, {\n      key: 6\n    }), React.createElement(Demo7, {\n      key: 7\n    }), React.createElement(Demo8, {\n      key: 8\n    }), React.createElement(Demo9, {\n      key: 9\n    }), React.createElement(Demo10, {\n      key: 10\n    }));\n  }\n}\nexport default function(props) {\n  const [isUsage, setIsUsage] = useState(false);\n  const [showChangelog, setShowChangelog] = useState(false);\n  const lang = localStorage.getItem(\"arco-lang\") || \"zh-CN\";\n  return /* @__PURE__ */ React.createElement(\"span\", {\n    style: props.style\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"markdown-body\"\n  }, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"ac-nav-intro\"\n  }, /* @__PURE__ */ React.createElement(\"p\", null, \"\\u7EC4\\u4EF6 \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"separator\"\n  }, \"/\"), \" \", /* @__PURE__ */ React.createElement(\"strong\", null, \"\\u6570\\u636E\\u5C55\\u793A\")), /* @__PURE__ */ React.createElement(\"h1\", {\n    id: \"\\u6811-tree\"\n  }, \"\\u6811 Tree\"), /* @__PURE__ */ React.createElement(\"p\", null, \"\\u5BF9\\u4E8E\\u6587\\u4EF6\\u5939\\u3001\\u5206\\u7C7B\\u76EE\\u5F55\\u3001\\u7EC4\\u7EC7\\u67B6\\u6784\\u7B49\\u5C42\\u7EA7\\u8F83\\u591A\\u7684\\u5185\\u5BB9\\uFF0C\\u6811\\u53EF\\u4EE5\\u6E05\\u695A\\u663E\\u793A\\u4ED6\\u4EEC\\u7684\\u5C42\\u7EA7\\u5173\\u7CFB\\uFF0C\\u5E76\\u5177\\u6709\\u5C55\\u5F00\\u3001\\u6536\\u8D77\\u3001\\u9009\\u62E9\\u7B49\\u4EA4\\u4E92\\u529F\\u80FD\\u3002\")), /* @__PURE__ */ React.createElement(Helmet, null, /* @__PURE__ */ React.createElement(\"title\", null, \"\\u6811 Tree | M Design\"), /* @__PURE__ */ React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"\\u5BF9\\u4E8E\\u6587\\u4EF6\\u5939\\u3001\\u5206\\u7C7B\\u76EE\\u5F55\\u3001\\u7EC4\\u7EC7\\u67B6\\u6784\\u7B49\\u5C42\\u7EA7\\u8F83\\u591A\\u7684\\u5185\\u5BB9\\uFF0C\\u6811\\u53EF\\u4EE5\\u6E05\\u695A\\u663E\\u793A\\u4ED6\\u4EEC\\u7684\\u5C42\\u7EA7\\u5173\\u7CFB\\uFF0C\\u5E76\\u5177\\u6709\\u5C55\\u5F00\\u3001\\u6536\\u8D77\\u3001\\u9009\\u62E9\\u7B49\\u4EA4\\u4E92\\u529F\\u80FD\\u3002\"\n  }), /* @__PURE__ */ React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: \"\\u6811 Tree | M Design\"\n  }), /* @__PURE__ */ React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: \"\\u5BF9\\u4E8E\\u6587\\u4EF6\\u5939\\u3001\\u5206\\u7C7B\\u76EE\\u5F55\\u3001\\u7EC4\\u7EC7\\u67B6\\u6784\\u7B49\\u5C42\\u7EA7\\u8F83\\u591A\\u7684\\u5185\\u5BB9\\uFF0C\\u6811\\u53EF\\u4EE5\\u6E05\\u695A\\u663E\\u793A\\u4ED6\\u4EEC\\u7684\\u5C42\\u7EA7\\u5173\\u7CFB\\uFF0C\\u5E76\\u5177\\u6709\\u5C55\\u5F00\\u3001\\u6536\\u8D77\\u3001\\u9009\\u62E9\\u7B49\\u4EA4\\u4E92\\u529F\\u80FD\\u3002\"\n  }))), /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"ac-toolbar\"\n  }, /* @__PURE__ */ React.createElement(ChangelogBtn, {\n    size: \"large\",\n    className: \"changelog-btn\",\n    onClick: () => setShowChangelog(true)\n  }, lang === \"en-US\" ? \"Changelog\" : \"\\u66F4\\u65B0\\u8BB0\\u5F55\")), /* @__PURE__ */ React.createElement(Component, null), /* @__PURE__ */ React.createElement(ChangelogDrawer, {\n    title: \"\\u53D1\\u7248\\u8BB0\\u5F55\",\n    visible: showChangelog,\n    onOk: () => setShowChangelog(false),\n    onCancel: () => setShowChangelog(false),\n    width: 800\n  }, /* @__PURE__ */ React.createElement(Changelog, {\n    changelog\n  }))), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"markdown-body api-container\",\n    style: isUsage ? {\n      display: \"none\"\n    } : {}\n  }, /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"api\"\n  }, \"API\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"tree\"\n  }, \"Tree\"), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"tree-props\"\n  }, \"Tree props\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"\\u53C2\\u6570\"), /* @__PURE__ */ React.createElement(\"th\", null, \"\\u8BF4\\u660E\"), /* @__PURE__ */ React.createElement(\"th\", null, \"\\u7C7B\\u578B\"), /* @__PURE__ */ React.createElement(\"th\", null, \"\\u9ED8\\u8BA4\\u503C\"), /* @__PURE__ */ React.createElement(\"th\", null, \"\\u7248\\u672C\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"allowDrop\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u662F\\u5426\\u5141\\u8BB8\\u62D6\\u62FD\\u65F6\\u653E\\u7F6E\\u5728\\u8BE5\\u8282\\u70B9\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(\", \"{\", \" dropNode, dropPosition \", \"}\", \") => boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"autoExpandParent\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u662F\\u5426\\u81EA\\u52A8\\u5C55\\u5F00\\u7236\\u8282\\u70B9\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"blockNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u662F\\u5426\\u8282\\u70B9\\u5360\\u636E\\u4E00\\u884C\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"checkable\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u8282\\u70B9\\u524D\\u6DFB\\u52A0 Checkbox \\u590D\\u9009\\u6846\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"checkedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\uFF08\\u53D7\\u63A7\\uFF09\\u9009\\u4E2D\\u590D\\u9009\\u6846\\u7684\\u6811\\u8282\\u70B9\\uFF08\\u6CE8\\u610F\\uFF1A\\u7236\\u5B50\\u8282\\u70B9\\u6709\\u5173\\u8054\\uFF0C\\u5982\\u679C\\u4F20\\u5165\\u7236\\u8282\\u70B9 key\\uFF0C\\u5219\\u5B50\\u8282\\u70B9\\u81EA\\u52A8\\u9009\\u4E2D\\uFF1B\\u76F8\\u5E94\\u5F53\\u5B50\\u8282\\u70B9 key \\u90FD\\u4F20\\u5165\\uFF0C\\u7236\\u8282\\u70B9\\u4E5F\\u81EA\\u52A8\\u9009\\u4E2D\\u3002\\u5F53\\u8BBE\\u7F6E \", /* @__PURE__ */ React.createElement(\"code\", null, \"checkable\"), \" \\u548C \", /* @__PURE__ */ React.createElement(\"code\", null, \"checkStrictly\"), \"\\uFF0C\\u5B83\\u662F\\u4E00\\u4E2A\\u6709\", /* @__PURE__ */ React.createElement(\"code\", null, \"checked\"), \"\\u548C\", /* @__PURE__ */ React.createElement(\"code\", null, \"halfChecked\"), \"\\u5C5E\\u6027\\u7684\\u5BF9\\u8C61\\uFF0C\\u5E76\\u4E14\\u7236\\u5B50\\u8282\\u70B9\\u7684\\u9009\\u4E2D\\u4E0E\\u5426\\u4E0D\\u518D\\u5173\\u8054\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[] | \", \"{\", \"checked: string[], halfChecked: string[]\", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"checkStrictly\"), /* @__PURE__ */ React.createElement(\"td\", null, \"checkable \\u72B6\\u6001\\u4E0B\\u8282\\u70B9\\u9009\\u62E9\\u5B8C\\u5168\\u53D7\\u63A7\\uFF08\\u7236\\u5B50\\u8282\\u70B9\\u9009\\u4E2D\\u72B6\\u6001\\u4E0D\\u518D\\u5173\\u8054\\uFF09\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultCheckedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u9ED8\\u8BA4\\u9009\\u4E2D\\u590D\\u9009\\u6846\\u7684\\u6811\\u8282\\u70B9\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultExpandAll\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u9ED8\\u8BA4\\u5C55\\u5F00\\u6240\\u6709\\u6811\\u8282\\u70B9\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultExpandedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u9ED8\\u8BA4\\u5C55\\u5F00\\u6307\\u5B9A\\u7684\\u6811\\u8282\\u70B9\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultExpandParent\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u9ED8\\u8BA4\\u5C55\\u5F00\\u7236\\u8282\\u70B9\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"defaultSelectedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u9ED8\\u8BA4\\u9009\\u4E2D\\u7684\\u6811\\u8282\\u70B9\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"disabled\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u5C06\\u6811\\u7981\\u7528\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"draggable\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u8BBE\\u7F6E\\u8282\\u70B9\\u53EF\\u62D6\\u62FD\\uFF0C\\u53EF\\u4EE5\\u901A\\u8FC7 \", /* @__PURE__ */ React.createElement(\"code\", null, \"icon: false\"), \" \\u5173\\u95ED\\u62D6\\u62FD\\u63D0\\u793A\\u56FE\\u6807\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | ((node: DataNode) => boolean) | \", \"{\", \" icon?: React.ReactNode | false, nodeDraggable?: (node: DataNode) => boolean \", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"expandedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\uFF08\\u53D7\\u63A7\\uFF09\\u5C55\\u5F00\\u6307\\u5B9A\\u7684\\u6811\\u8282\\u70B9\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"fieldNames\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u81EA\\u5B9A\\u4E49\\u8282\\u70B9 title\\u3001key\\u3001children \\u7684\\u5B57\\u6BB5\"), /* @__PURE__ */ React.createElement(\"td\", null, \"object\"), /* @__PURE__ */ React.createElement(\"td\", null, \"{\", \" title: \", /* @__PURE__ */ React.createElement(\"code\", null, \"title\"), \", key: \", /* @__PURE__ */ React.createElement(\"code\", null, \"key\"), \", children: \", /* @__PURE__ */ React.createElement(\"code\", null, \"children\"), \" \", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"filterTreeNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u6309\\u9700\\u7B5B\\u9009\\u6811\\u8282\\u70B9\\uFF08\\u9AD8\\u4EAE\\uFF09\\uFF0C\\u8FD4\\u56DE true\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(node)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"height\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u8BBE\\u7F6E\\u865A\\u62DF\\u6EDA\\u52A8\\u5BB9\\u5668\\u9AD8\\u5EA6\\uFF0C\\u8BBE\\u7F6E\\u540E\\u5185\\u90E8\\u8282\\u70B9\\u4E0D\\u518D\\u652F\\u6301\\u6A2A\\u5411\\u6EDA\\u52A8\"), /* @__PURE__ */ React.createElement(\"td\", null, \"number\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"icon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u81EA\\u5B9A\\u4E49\\u6811\\u8282\\u70B9\\u56FE\\u6807\\u3002\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode | (props) => ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"loadData\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u5F02\\u6B65\\u52A0\\u8F7D\\u6570\\u636E\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(node)\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"loadedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\uFF08\\u53D7\\u63A7\\uFF09\\u5DF2\\u7ECF\\u52A0\\u8F7D\\u7684\\u8282\\u70B9\\uFF0C\\u9700\\u8981\\u914D\\u5408 \", /* @__PURE__ */ React.createElement(\"code\", null, \"loadData\"), \" \\u4F7F\\u7528\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"multiple\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u652F\\u6301\\u70B9\\u9009\\u591A\\u4E2A\\u8282\\u70B9\\uFF08\\u8282\\u70B9\\u672C\\u8EAB\\uFF09\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"selectable\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u662F\\u5426\\u53EF\\u9009\\u4E2D\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"selectedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\uFF08\\u53D7\\u63A7\\uFF09\\u8BBE\\u7F6E\\u9009\\u4E2D\\u7684\\u6811\\u8282\\u70B9\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"showIcon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u662F\\u5426\\u5C55\\u793A TreeNode title \\u524D\\u7684\\u56FE\\u6807\\uFF0C\\u6CA1\\u6709\\u9ED8\\u8BA4\\u6837\\u5F0F\\uFF0C\\u5982\\u8BBE\\u7F6E\\u4E3A true\\uFF0C\\u9700\\u8981\\u81EA\\u884C\\u5B9A\\u4E49\\u56FE\\u6807\\u76F8\\u5173\\u6837\\u5F0F\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"showLine\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u662F\\u5426\\u5C55\\u793A\\u8FDE\\u63A5\\u7EBF\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean | \", \"{\", \"showLeafIcon: boolean\", \"}\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"switcherIcon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u81EA\\u5B9A\\u4E49\\u6811\\u8282\\u70B9\\u7684\\u5C55\\u5F00/\\u6298\\u53E0\\u56FE\\u6807\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"titleRender\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u81EA\\u5B9A\\u4E49\\u6E32\\u67D3\\u8282\\u70B9\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(nodeData) => ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeData\"), /* @__PURE__ */ React.createElement(\"td\", null, \"treeNodes \\u6570\\u636E\\uFF0C\\u5982\\u679C\\u8BBE\\u7F6E\\u5219\\u4E0D\\u9700\\u8981\\u624B\\u52A8\\u6784\\u9020 TreeNode \\u8282\\u70B9\\uFF08key \\u5728\\u6574\\u4E2A\\u6811\\u8303\\u56F4\\u5185\\u552F\\u4E00\\uFF09\"), /* @__PURE__ */ React.createElement(\"td\", null, \"array<\", \"{\", \"key, title, children, [disabled, selectable]\", \"}\", \">\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"treeLoadedKeys\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\uFF08\\u53D7\\u63A7\\uFF09\\u5DF2\\u7ECF\\u52A0\\u8F7D\\u7684\\u8282\\u70B9\\uFF0C\\u9700\\u8981\\u914D\\u5408 \", /* @__PURE__ */ React.createElement(\"code\", null, \"loadData\"), \" \\u4F7F\\u7528\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string[]\"), /* @__PURE__ */ React.createElement(\"td\", null, \"[]\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"virtual\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u8BBE\\u7F6E false \\u65F6\\u5173\\u95ED\\u865A\\u62DF\\u6EDA\\u52A8\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"size\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u5927\\u5C0F\\uFF0C\\u63D0\\u4F9B \", /* @__PURE__ */ React.createElement(\"code\", null, \"large\"), \" \", /* @__PURE__ */ React.createElement(\"code\", null, \"default\"), \" \\u548C \", /* @__PURE__ */ React.createElement(\"code\", null, \"small\"), \" \\u4E09\\u79CD\\u5927\\u5C0F\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"small\")), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onCheck\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u70B9\\u51FB\\u590D\\u9009\\u6846\\u89E6\\u53D1\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(checkedKeys, e:\", \"{\", \"checked: bool, checkedNodes, node, event, halfCheckedKeys\", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDragEnd\"), /* @__PURE__ */ React.createElement(\"td\", null, \"dragend \\u89E6\\u53D1\\u65F6\\u8C03\\u7528\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(\", \"{\", \"event, node\", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDragEnter\"), /* @__PURE__ */ React.createElement(\"td\", null, \"dragenter \\u89E6\\u53D1\\u65F6\\u8C03\\u7528\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(\", \"{\", \"event, node, expandedKeys\", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDragLeave\"), /* @__PURE__ */ React.createElement(\"td\", null, \"dragleave \\u89E6\\u53D1\\u65F6\\u8C03\\u7528\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(\", \"{\", \"event, node\", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDragOver\"), /* @__PURE__ */ React.createElement(\"td\", null, \"dragover \\u89E6\\u53D1\\u65F6\\u8C03\\u7528\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(\", \"{\", \"event, node\", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDragStart\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u5F00\\u59CB\\u62D6\\u62FD\\u65F6\\u8C03\\u7528\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(\", \"{\", \"event, node\", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onDrop\"), /* @__PURE__ */ React.createElement(\"td\", null, \"drop \\u89E6\\u53D1\\u65F6\\u8C03\\u7528\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(\", \"{\", \"event, node, dragNode, dragNodesKeys\", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onExpand\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u5C55\\u5F00/\\u6536\\u8D77\\u8282\\u70B9\\u65F6\\u89E6\\u53D1\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(expandedKeys, \", \"{\", \"expanded: bool, node\", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onLoad\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u8282\\u70B9\\u52A0\\u8F7D\\u5B8C\\u6BD5\\u65F6\\u89E6\\u53D1\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(loadedKeys, \", \"{\", \"event, node\", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onRightClick\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u54CD\\u5E94\\u53F3\\u952E\\u70B9\\u51FB\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(\", \"{\", \"event, node\", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"onSelect\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u70B9\\u51FB\\u6811\\u8282\\u70B9\\u89E6\\u53D1\"), /* @__PURE__ */ React.createElement(\"td\", null, \"function(selectedKeys, e:\", \"{\", \"selected: bool, selectedNodes, node, event\", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"treenode-props\"\n  }, \"TreeNode props\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"\\u53C2\\u6570\"), /* @__PURE__ */ React.createElement(\"th\", null, \"\\u8BF4\\u660E\"), /* @__PURE__ */ React.createElement(\"th\", null, \"\\u7C7B\\u578B\"), /* @__PURE__ */ React.createElement(\"th\", null, \"\\u9ED8\\u8BA4\\u503C\"), /* @__PURE__ */ React.createElement(\"th\", null))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"checkable\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u5F53\\u6811\\u4E3A checkable \\u65F6\\uFF0C\\u8BBE\\u7F6E\\u72EC\\u7ACB\\u8282\\u70B9\\u662F\\u5426\\u5C55\\u793A Checkbox\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"disableCheckbox\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u7981\\u6389 checkbox\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"disabled\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u7981\\u6389\\u54CD\\u5E94\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"false\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"icon\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u81EA\\u5B9A\\u4E49\\u56FE\\u6807\\u3002\\u53EF\\u63A5\\u6536\\u7EC4\\u4EF6\\uFF0Cprops \\u4E3A\\u5F53\\u524D\\u8282\\u70B9 props\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode | (props) => ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"isLeaf\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u8BBE\\u7F6E\\u4E3A\\u53F6\\u5B50\\u8282\\u70B9 (\\u8BBE\\u7F6E\\u4E86 \", /* @__PURE__ */ React.createElement(\"code\", null, \"loadData\"), \" \\u65F6\\u6709\\u6548)\\u3002\\u4E3A \", /* @__PURE__ */ React.createElement(\"code\", null, \"false\"), \" \\u65F6\\u4F1A\\u5F3A\\u5236\\u5C06\\u5176\\u4F5C\\u4E3A\\u7236\\u8282\\u70B9\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"-\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"key\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u88AB\\u6811\\u7684 (default)ExpandedKeys / (default)CheckedKeys / (default)SelectedKeys \\u5C5E\\u6027\\u6240\\u7528\\u3002\\u6CE8\\u610F\\uFF1A\\u6574\\u4E2A\\u6811\\u8303\\u56F4\\u5185\\u7684\\u6240\\u6709\\u8282\\u70B9\\u7684 key \\u503C\\u4E0D\\u80FD\\u91CD\\u590D\\uFF01\"), /* @__PURE__ */ React.createElement(\"td\", null, \"string\"), /* @__PURE__ */ React.createElement(\"td\", null, \"(\\u5185\\u90E8\\u8BA1\\u7B97\\u51FA\\u7684\\u8282\\u70B9\\u4F4D\\u7F6E)\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"selectable\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u8BBE\\u7F6E\\u8282\\u70B9\\u662F\\u5426\\u53EF\\u88AB\\u9009\\u4E2D\"), /* @__PURE__ */ React.createElement(\"td\", null, \"boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, \"true\"), /* @__PURE__ */ React.createElement(\"td\", null)), /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"title\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u6807\\u9898\"), /* @__PURE__ */ React.createElement(\"td\", null, \"ReactNode\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"---\")), /* @__PURE__ */ React.createElement(\"td\", null)))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"directorytree-props\"\n  }, \"DirectoryTree props\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"\\u53C2\\u6570\"), /* @__PURE__ */ React.createElement(\"th\", null, \"\\u8BF4\\u660E\"), /* @__PURE__ */ React.createElement(\"th\", null, \"\\u7C7B\\u578B\"), /* @__PURE__ */ React.createElement(\"th\", null, \"\\u9ED8\\u8BA4\\u503C\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"expandAction\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u76EE\\u5F55\\u5C55\\u5F00\\u903B\\u8F91\\uFF0C\\u53EF\\u9009\\uFF1Afalse | \", /* @__PURE__ */ React.createElement(\"code\", null, \"click\"), \" | \", /* @__PURE__ */ React.createElement(\"code\", null, \"doubleClick\")), /* @__PURE__ */ React.createElement(\"td\", null, \"string | boolean\"), /* @__PURE__ */ React.createElement(\"td\", null, /* @__PURE__ */ React.createElement(\"code\", null, \"click\"))))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"tree-\\u65B9\\u6CD5\"\n  }, \"Tree \\u65B9\\u6CD5\"), /* @__PURE__ */ React.createElement(\"table\", null, /* @__PURE__ */ React.createElement(\"thead\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"th\", null, \"\\u540D\\u79F0\"), /* @__PURE__ */ React.createElement(\"th\", null, \"\\u8BF4\\u660E\"))), /* @__PURE__ */ React.createElement(\"tbody\", null, /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", null, \"scrollTo(\", \"{\", \" key: string | number; align?: 'top' | 'bottom' | 'auto'; offset?: number \", \"}\", \")\"), /* @__PURE__ */ React.createElement(\"td\", null, \"\\u865A\\u62DF\\u6EDA\\u52A8\\u4E0B\\uFF0C\\u6EDA\\u52A8\\u5230\\u6307\\u5B9A key \\u6761\\u76EE\"))))));\n}\n;\n"],"mappingssourceRoot":""}