{"version":3,"file":"1680.min.js","sources":["webpack:///.-m/src/pages/dark/md/header.en-US.md"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nexport default function(props) {\n  const [isUsage, setIsUsage] = useState(false);\n  const [showChangelog, setShowChangelog] = useState(false);\n  const lang = localStorage.getItem(\"arco-lang\") || \"zh-CN\";\n  return /* @__PURE__ */ React.createElement(\"span\", {\n    style: props.style,\n    className: \"markdown-body\"\n  }, /* @__PURE__ */ React.createElement(Helmet, null, /* @__PURE__ */ React.createElement(\"title\", null, \"Dark Mode | M Design\"), /* @__PURE__ */ React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"The component library has a built-in dark theme. You can easily switch to dark or simply adjust the color palette to automatically generate a new dark theme based on the color palette. (You can click the icon in the upper right corner to switch the dark mode to preview)\"\n  }), /* @__PURE__ */ React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: \"Dark Mode | M Design\"\n  }), /* @__PURE__ */ React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: \"The component library has a built-in dark theme. You can easily switch to dark or simply adjust the color palette to automatically generate a new dark theme based on the color palette. (You can click the icon in the upper right corner to switch the dark mode to preview)\"\n  })), /* @__PURE__ */ React.createElement(\"div\", {\n    className: \"ac-nav-intro\"\n  }, /* @__PURE__ */ React.createElement(\"p\", null, \"Developer Guild\"), /* @__PURE__ */ React.createElement(\"h1\", {\n    id: \"dark-mode\"\n  }, \"Dark Mode\"), /* @__PURE__ */ React.createElement(\"p\", null, \"The component library has a built-in dark theme. You can easily switch to dark or simply adjust the color palette to automatically generate a new dark theme based on the color palette. (You can click the icon in the upper right corner to switch the dark mode to preview)\")), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"how-to-switch-theme\"\n  }, \"How to switch theme\"), /* @__PURE__ */ React.createElement(\"p\", null, \"The component library uses\\xA0\", /* @__PURE__ */ React.createElement(\"code\", null, \"arco-theme\"), \"of\\xA0\", /* @__PURE__ */ React.createElement(\"code\", null, \"body\"), \"\\xA0tag to indicate the current theme, so you only need to modify this property to switch the theme.\"), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"strong\", null, \"Note: By setting\\xA0\", /* @__PURE__ */ React.createElement(\"code\", null, \"arco-theme\"), \"\\xA0as\\xA0\", /* @__PURE__ */ React.createElement(\"code\", null, \"dark\"), \", you only switch the component library to dark mode. You also need to use some CSS variables to adjust the overall page style to dark.\")), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-js\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// Set dark theme\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token dom variable\"\n  }, \"document\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token property-access\"\n  }, \"body\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token method function property-access\"\n  }, \"setAttribute\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'arco-theme'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'dark'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"// Restore bright theme\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token dom variable\"\n  }, \"document\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token property-access\"\n  }, \"body\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token method function property-access\"\n  }, \"removeAttribute\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'arco-theme'\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"))), /* @__PURE__ */ React.createElement(\"h3\", {\n    id: \"adjust-the-overall-background-and-font\"\n  }, \"Adjust the overall background and font\"), /* @__PURE__ */ React.createElement(\"pre\", {\n    className: \"code_block\"\n  }, /* @__PURE__ */ React.createElement(\"code\", {\n    className: \"language-css\"\n  }, /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token selector\"\n  }, \"body\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), /* @__PURE__ */ React.createElement(\"br\", null), \"   \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token property\"\n  }, \"background-color\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"var\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token variable\"\n  }, \"--color-bg-1\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), \"   \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token property\"\n  }, \"color\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"var\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token variable\"\n  }, \"--color-text-1\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), /* @__PURE__ */ React.createElement(\"br\", null), /* @__PURE__ */ React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"))), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"theory\"\n  }, \"Theory\"), /* @__PURE__ */ React.createElement(\"p\", null, \"ArcoDesign uses\\xA0\", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"https://developer.mozilla.org/zh-CN/docs/Web/CSS/--*\"\n  }, \"CSS variables\"), \"\\xA0to build the dark theme. There are two sets of color palettes built into the component, one set is the default bright color palette and the other is the dark one generated from the bright color palette. If you're interested in the current color palette, you can view more here:\\xA0\", /* @__PURE__ */ React.createElement(\"a\", {\n    href: \"/react/docs/palette\"\n  }, \"ArcoDesign Color\"), \".\"), /* @__PURE__ */ React.createElement(\"p\", null, \"Less variables and CSS variables co-exist in ArcoDesign and the color algorithm for bright and dark colors is built-in, which can change the color palette more flexibly.\"), /* @__PURE__ */ React.createElement(\"p\", null, \"For example, if you want to change the dominant color, you only need to change the value of\\xA0\", /* @__PURE__ */ React.createElement(\"code\", null, \"@arcoblue-6\"), \".\\xA0The algorithm will automatically generate colors from 1 to 10 for you, and will also automatically generate the inverted colors from 1 to 10 in dark colors, which is very convenient.\"), /* @__PURE__ */ React.createElement(\"h2\", {\n    id: \"variable\"\n  }, \"Variable\"), /* @__PURE__ */ React.createElement(\"p\", null, /* @__PURE__ */ React.createElement(\"strong\", null, \"Using the variables provided below, adjust the background and text on the page to an appropriate color, and match the dark theme of the component library itself to perfectly present dark vision.\")));\n}\n;\n"],"mappingssourceRoot":""}